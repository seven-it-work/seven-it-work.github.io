<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>面试自我介绍</title>
    <url>/b1331a25/</url>
    <content><![CDATA[<p>| <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hqMjM2OTE1NzczNC9hcnRpY2xlL2RldGFpbHMvMTIzOTIwMzk4">https://blog.csdn.net/xj2369157734/article/details/123920398<i class="fa fa-external-link-alt"></i></span><br>| <span class="exturl" data-url="aHR0cHM6Ly95b25nbHVvMjAxMy5naXRodWIuaW8vcXVlc3Rpb25zLWZvci1lbmdsaXNoLWludGVydmlldy8=">https://yongluo2013.github.io/questions-for-english-interview/<i class="fa fa-external-link-alt"></i></span><br>| <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLjUxY3RvLmNvbS9hbGV2ZW4vNDEzOTUx">https://blog.51cto.com/aleven/413951<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h1><p>Q: Tell me about yourself?<br>KeyWord: yourself</p>
<p>Thank you for giving me this opportunity. My name is JiaLuo, I am from Chengdu, a city in Sichuan province.<br>谢谢你给我这个机会。我叫，来自xx省xx市。<br>I graduated from Shenyang University of Chemical Technology. My major is Metal Material Engineering. And I got my bachelor degree after my graduation in the year of 2020. I spent a lot of time on study in college. I have acquired basic knowledge of my major and gained a good academic performence, which I have passed CET4 and got scholarships every year.<br>我毕业于xx大学。 我的专业是xx。 我在2020年毕业后获得了学士学位。 我在大学里花了很多时间学习。 我掌握了本专业的基本知识，学习成绩良好，通过了大学英语四级考试，每年都获得奖学金。<br>So far, I have four years of work experience in software development, which makes me a qualified software engineer. I have mastered programming languages, Java, TypeScript, Vue, and have mastered, Web, SpringBoot, React.<br>到目前为止，我已经有四年的软件开发工作经验，这使我成为一名合格的软件工程师。我已经掌握了编程语言、Java、TypeScript、Vue、并掌握了、Web、SpringBoot、React<br>Apart from these, my personal interests including learning new things, getting socialized, even more taking initiatives. I feel ready to take my career to the next level and currently looking for a new opportunity, and this position seems like a great opportunity to build my career. So I really hope to get this opportunity to fully my ability, my computer skills and English skills, I think I can be competent for this job.<br>除了这些，我的个人兴趣还包括学习新东西，社交，更多的是进取心。 我已经准备好将我的职业生涯提升到一个新的水平，目前正在寻找一个新的机会，而这个职位似乎是一个很好的机会来建立我的职业生涯。 所以我真的希望得到这个机会，充分发挥我的能力，我的计算机技能和英语技能，我认为我可以胜任这份工作。<br>That’s all, thank you.</p>
<p>Q：You said you’re not a computer science major. Why did you choose to work in the computer industry?<br>你说你不是计算机专业，那你为什么选择从事计算机行业呢？</p>
<p>First, I’ve been interested in computers since I was a kid. I remember using commands to crack passwords on my family’s computers at a young age. Then in college, I was forced to switch to my current major because of the Chinese adjustment. But it didn’t quench my thirst for coding. So in college, I taught myself python, java back in the work of the school will be the front-end related technology system.<br>Second, I love to code and I love to automate. Coding automation makes my work and life more efficient. I like the saying, hands free to enjoy life.<br>第一，我从小就对计算机感兴趣，记得在很小的时候我就利用命令对家里的计算机进行密码破解。然后在读大学的时候，因为中国的调剂我被迫调到了目前的专业。但是并没有浇灭我对编码的渴望。于是在大学期间我自学了python、java后面在工作中学会了前端相关技术体系<br>第二点，我喜欢编码、并且喜欢自动化，编码自动化能提高我工作和生活的效率。我很喜欢一句话，解放双手享受生活</p>
]]></content>
      <tags>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>网站收集</title>
    <url>/c2512eae/</url>
    <content><![CDATA[<p>1.AI做网站：dora。有官网<span class="exturl" data-url="aHR0cHM6Ly93d3cuZG9yYS5ydW4vYWk=">https://www.dora.run/ai<i class="fa fa-external-link-alt"></i></span><br>2.AI做logo：logodiffusion。有官网logodiffusion.com<br>3.AI视频带货：视频带货宝。在小程序里搜名字就有<br>4.AI做视频解说：gptv-app。有官网gptv-app.vercel.app<br>5.AI做包装设计：pacdora，有官网<span class="exturl" data-url="aHR0cDovL3d3dy5wYWNkb3JhLmMuLw==">www.pacdora.c。<i class="fa fa-external-link-alt"></i></span></p>
<p>1.【clipdrop】<span class="exturl" data-url="aHR0cHM6Ly9jbGlwZHJvcC5jby8=">https://clipdrop.co<i class="fa fa-external-link-alt"></i></span><br>2.【tinywow】<span class="exturl" data-url="aHR0cHM6Ly90aW55d293LmNvbS8=">https://tinywow.com<i class="fa fa-external-link-alt"></i></span><br>3.【度加剪辑】<span class="exturl" data-url="aHR0cHM6Ly9haWdjLmJhaWR1LmNvbS8lRUYlQkMlOEMlRTQlQjklOUYlRTYlOUMlODlhcHA=">https://aigc.baidu.com/，也有app<i class="fa fa-external-link-alt"></i></span><br>4.【wantwords】<span class="exturl" data-url="aHR0cHM6Ly93YW50d29yZHMubmV0Lw==">https://wantwords.net<i class="fa fa-external-link-alt"></i></span><br>5.【chatlaw】<span class="exturl" data-url="aHR0cHM6Ly93d3cuY2hhdGxhdy5jbG91ZC8=">https://www.chatlaw.cloud<i class="fa fa-external-link-alt"></i></span><br>6.【chatExcel】<span class="exturl" data-url="aHR0cHM6Ly9jaGF0ZXhjZWwuY29tLw==">https://chatexcel.com<i class="fa fa-external-link-alt"></i></span><br>7.【yoojober】<span class="exturl" data-url="aHR0cHM6Ly93d3cueW9vam9iZXIuY29tLw==">https://www.yoojober.com<i class="fa fa-external-link-alt"></i></span><br>8.【powtoon】<span class="exturl" data-url="aHR0cHM6Ly93d3cucG93dG9vbi5jb20v">https://www.powtoon.com/<i class="fa fa-external-link-alt"></i></span><br>9.【eyecontact】<br>项目链接：<span class="exturl" data-url="aHR0cHM6Ly93d3cubnZpZGlhLmNvbS9lbi11cy9nZWZvcmNlL2Jyb2FkY2FzdGluZy9icm9hZGNhc3QtYXBwLw==">https://www.nvidia.com/en-us/geforce/broadcasting/broadcast-app/<i class="fa fa-external-link-alt"></i></span><br>安装教程：<span class="exturl" data-url="aHR0cHM6Ly93d3cubnZpZGlhLmNvbS9lbi11cy9nZWZvcmNlL2d1aWRlcy9icm9hZGNhc3QtYXBwLXNldHVwLWd1aWRlLw==">https://www.nvidia.com/en-us/geforce/guides/broadcast-app-setup-guide/<i class="fa fa-external-link-alt"></i></span><br>10.【oeasy】<span class="exturl" data-url="aHR0cDovL29lYXN5Lm9yZy8=">http://oeasy.org<i class="fa fa-external-link-alt"></i></span></p>
<p>1.depix：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NwaXBtL0RlcGl4">https://github.com/spipm/Depix<i class="fa fa-external-link-alt"></i></span><br>2.amphion：<span class="exturl" data-url="aHR0cHM6Ly9odWdnaW5nZmFjZS5jby9zcGFjZXMvYW1waGlvbi9zaW5naW5nX3ZvaWNlX2NvbnZlcnNpb24=">https://huggingface.co/spaces/amphion/singing_voice_conversion<i class="fa fa-external-link-alt"></i></span><br>3.outfit anybody：<span class="exturl" data-url="aHR0cHM6Ly9odW1hbmFpZ2MuZ2l0aHViLmlvL291dGZpdC1hbnlvbmUv">https://humanaigc.github.io/outfit-anyone/<i class="fa fa-external-link-alt"></i></span><br>4.NERF：<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubnZpZGlhLmNvbS9ibG9nL2dldHRpbmctc3RhcnRlZC13aXRoLW52aWRpYS1pbnN0YW50LW5lcmZzLw==">https://developer.nvidia.com/blog/getting-started-with-nvidia-instant-nerfs/<i class="fa fa-external-link-alt"></i></span><br>5.PIA：<span class="exturl" data-url="aHR0cHM6Ly9waS1hbmltYXRvci5naXRodWIuaW8v">https://pi-animator.github.io/<i class="fa fa-external-link-alt"></i></span><br>6.video poet：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnJlc2VhcmNoLmdvb2dsZS8yMDIzLzEyL3ZpZGVvcG9ldC1sYXJnZS1sYW5ndWFnZS1tb2RlbC1mb3ItemVyby5odG1s">https://blog.research.google/2023/12/videopoet-large-language-model-for-zero.html<i class="fa fa-external-link-alt"></i></span><br>7.AI读心术：<span class="exturl" data-url="aHR0cHM6Ly9haS5tZXRhLmNvbS9ibG9nL2JyYWluLWFpLWltYWdlLWRlY29kaW5nLW1lZy1tYWduZXRvZW5jZXBoYWxvZ3JhcGh5Lw==">https://ai.meta.com/blog/brain-ai-image-decoding-meg-magnetoencephalography/<i class="fa fa-external-link-alt"></i></span><br>8.luciddreamer:<span class="exturl" data-url="aHR0cHM6Ly9sdWNpZGRyZWFtZXItY3ZsYWIuZ2l0aHViLmlvLw==">https://luciddreamer-cvlab.github.io/<i class="fa fa-external-link-alt"></i></span><br>9.deepmotion：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZGVlcG1vdGlvbi5jb20vYW5pbWF0ZS0zZA==">https://www.deepmotion.com/animate-3d<i class="fa fa-external-link-alt"></i></span><br>10.midjourney：<span class="exturl" data-url="aHR0cHM6Ly93d3cubWlkam91cm5leS5jb20vaG9tZT9jYWxsYmFja1VybD0vZXhwbG9yZQ==">https://www.midjourney.com/home?callbackUrl=%2Fexplore<i class="fa fa-external-link-alt"></i></span></p>
<p>1.【codeformer】<span class="exturl" data-url="aHR0cHM6Ly9yZXBsaWNhdGUuY29tL3NjemhvdS9jb2RlZm9ybWVyJUVGJUJDJTg4JUU1JTlDJUE4JUU3JUJBJUJGJUU3JTg5JTg4JUVGJUJDJTg5JUVGJUJDJTlCaHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMUw5bTZZUzl3M29PYXl3alVuY2FOeXc/cHdkPWl3OGYlRUYlQkMlODglRTYlOUMlQUMlRTUlOUMlQjAlRTclODklODglRUYlQkMlOEM0JUU0JUI4JUFBRyVFRiVCQyU4OQ==">https://replicate.com/sczhou/codeformer（在线版）；https://pan.baidu.com/s/1L9m6YS9w3oOaywjUncaNyw?pwd=iw8f（本地版，4个G）<i class="fa fa-external-link-alt"></i></span><br>2.【Magisto】：<span class="exturl" data-url="aHR0cHM6Ly92aW1lby5jb20vdmlkZW8tZWRpdG9yP3V0bV9zb3VyY2U9bWFnaXN0byZ1dG1fbWVkaXVtPXJlZGlyZWN0JnV0bV9jYW1wYWlnbj1taWdyYXRpb24=">https://vimeo.com/video-editor?utm_source=magisto&amp;utm_medium=redirect&amp;utm_campaign=migration<i class="fa fa-external-link-alt"></i></span><br>3.【runway】：<span class="exturl" data-url="aHR0cHM6Ly9ydW53YXltbC5jb20v">https://runwayml.com/<i class="fa fa-external-link-alt"></i></span><br>4.【Animate Anyone】：<span class="exturl" data-url="aHR0cHM6Ly9odW1hbmFpZ2MuZ2l0aHViLmlvL2FuaW1hdGUtYW55b25lLw==">https://humanaigc.github.io/animate-anyone/<i class="fa fa-external-link-alt"></i></span><br>5.【genmo】：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZ2VubW8uYWkv">https://www.genmo.ai/<i class="fa fa-external-link-alt"></i></span><br>6.【AI VoiceOver】：gptv-app.vercel.app<br>7.【4K4D】：<span class="exturl" data-url="aHR0cHM6Ly96anUzZHYuZ2l0aHViLmlvLzRrNGQv">https://zju3dv.github.io/4k4d/<i class="fa fa-external-link-alt"></i></span><br>8.【新片场素材】：<span class="exturl" data-url="aHR0cHM6Ly9zdG9jay54aW5waWFuY2hhbmcuY29tLw==">https://stock.xinpianchang.com<i class="fa fa-external-link-alt"></i></span><br>9.【magic edit】：<span class="exturl" data-url="aHR0cHM6Ly9tYWdpYy1lZGl0LmdpdGh1Yi5pby8=">https://magic-edit.github.io/<i class="fa fa-external-link-alt"></i></span><br>10.【tinywow】：<span class="exturl" data-url="aHR0cHM6Ly90aW55d293LmNvbS8=">https://tinywow.com<i class="fa fa-external-link-alt"></i></span></p>
<p>1.【Animate Anyone】<span class="exturl" data-url="aHR0cHM6Ly9odW1hbmFpZ2MuZ2l0aHViLmlvL2FuaW1hdGUtYW55b25lLw==">https://humanaigc.github.io/animate-anyone/<i class="fa fa-external-link-alt"></i></span><br>2.【Screenshot to Code】<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FiaS9zY3JlZW5zaG90LXRvLWNvZGU=">https://github.com/abi/screenshot-to-code<i class="fa fa-external-link-alt"></i></span><br>3.【pika】<span class="exturl" data-url="aHR0cHM6Ly9waWthLmFydC9sb2dpbg==">https://pika.art/login<i class="fa fa-external-link-alt"></i></span><br>4.【clipdrop】<span class="exturl" data-url="aHR0cHM6Ly9jbGlwZHJvcC5jby9zdGFibGUtZGlmZnVzaW9uLXR1cmJv">https://clipdrop.co/stable-diffusion-turbo<i class="fa fa-external-link-alt"></i></span><br>5.【pixels dance】<span class="exturl" data-url="aHR0cHM6Ly9tYWtlcGl4ZWxzZGFuY2UuZ2l0aHViLmlvLw==">https://makepixelsdance.github.io/<i class="fa fa-external-link-alt"></i></span><br>6.【AI VoiceOver】gptv-app.vercel.app<br>7.【Claude】<span class="exturl" data-url="aHR0cHM6Ly93d3cuYW50aHJvcGljLmNvbS9pbmRleC9jbGF1ZGUtMi0x">https://www.anthropic.com/index/claude-2-1<i class="fa fa-external-link-alt"></i></span><br>8.【musicfy AI】<span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGUubXVzaWNmeS5sb2wv">https://create.musicfy.lol/<i class="fa fa-external-link-alt"></i></span><br>9.【draw-A-UI】<span class="exturl" data-url="aHR0cHM6Ly93d3cuZHJhdy1hLXVpLmNvbS8=">https://www.draw-a-ui.com/<i class="fa fa-external-link-alt"></i></span><br>10.【Magnific】<span class="exturl" data-url="aHR0cHM6Ly9tYWduaWZpYy5haS8=">https://magnific.ai/<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
  </entry>
  <entry>
    <title>修仙游戏开发记录（一）</title>
    <url>/94b7fda7/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>开发</category>
        <category>游戏</category>
      </categories>
  </entry>
  <entry>
    <title>3127.构造相同颜色的正方形</title>
    <url>/9e28bb36/</url>
    <content><![CDATA[<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYWtlLWEtc3F1YXJlLXdpdGgtdGhlLXNhbWUtY29sb3IvZGVzY3JpcHRpb24vP2VudlR5cGU9ZGFpbHktcXVlc3Rpb24mZW52SWQ9MjAyNC0wOC0zMQ==">https://leetcode.cn/problems/make-a-square-with-the-same-color/description/?envType=daily-question&amp;envId=2024-08-31<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给你一个二维 3 x 3 的矩阵 grid ，每个格子都是一个字符，要么是 ‘B’ ，要么是 ‘W’ 。字符 ‘W’ 表示白色，字符 ‘B’ 表示黑色。</p>
<p>你的任务是改变 至多一个 格子的颜色，使得矩阵中存在一个 2 x 2 颜色完全相同的正方形。</p>
<p>如果可以得到一个相同颜色的 2 x 2 正方形，那么返回 true ，否则返回 false 。</p>
<p>示例 1：</p>
<div class="grid-container">
<div class="grid-item">&nbsp;</div>

<div class="grid-item grid-item-white">&nbsp;</div>

<div class="grid-item">&nbsp;</div>

<div class="grid-item">&nbsp;</div>

<div class="grid-item grid-item-white">&nbsp;</div>

<div class="grid-item grid-item-white">&nbsp;</div>

<div class="grid-item">&nbsp;</div>

<div class="grid-item grid-item-white">&nbsp;</div>

<div class="grid-item">&nbsp;</div>
</div>
<style>
.grid-container {
    display: grid;
    grid-template-columns: 30px 30px 30px;
    padding: 10px;
}
.grid-item {
    background-color: black;
    border: 1px solid gray;
    height: 30px;
    font-size: 30px;
    text-align: center;
}
.grid-item-white {
    background-color: white;
}
</style>
<p>输入：grid &#x3D; [[“B”,”W”,”B”],[“B”,”W”,”W”],[“B”,”W”,”B”]]</p>
<p>输出：true</p>
<p>解释：</p>
<p>修改 grid[0][2] 的颜色，可以满足要求。</p>
<p>示例 2：</p>
<div class="grid-container">
<div class="grid-item">&nbsp;</div>

<div class="grid-item grid-item-white">&nbsp;</div>

<div class="grid-item">&nbsp;</div>

<div class="grid-item grid-item-white">&nbsp;</div>

<div class="grid-item">&nbsp;</div>

<div class="grid-item grid-item-white">&nbsp;</div>

<div class="grid-item">&nbsp;</div>

<div class="grid-item grid-item-white">&nbsp;</div>

<div class="grid-item">&nbsp;</div>
</div>
<style>
.grid-container {
    display: grid;
    grid-template-columns: 30px 30px 30px;
    padding: 10px;
}
.grid-item {
    background-color: black;
    border: 1px solid gray;
    height: 30px;
    font-size: 30px;
    text-align: center;
}
.grid-item-white {
    background-color: white;
}
</style>

<p>输入：grid &#x3D; [[“B”,”W”,”B”],[“W”,”B”,”W”],[“B”,”W”,”B”]]</p>
<p>输出：false</p>
<p>解释：</p>
<p>只改变一个格子颜色无法满足要求。</p>
<p>示例 3：</p>
<div class="grid-container">
<div class="grid-item">&nbsp;</div>

<div class="grid-item grid-item-white">&nbsp;</div>

<div class="grid-item">&nbsp;</div>

<div class="grid-item">&nbsp;</div>

<div class="grid-item grid-item-white">&nbsp;</div>

<div class="grid-item grid-item-white">&nbsp;</div>

<div class="grid-item">&nbsp;</div>

<div class="grid-item grid-item-white">&nbsp;</div>

<div class="grid-item grid-item-white">&nbsp;</div>
</div>
<style>
.grid-container {
    display: grid;
    grid-template-columns: 30px 30px 30px;
    padding: 10px;
}
.grid-item {
    background-color: black;
    border: 1px solid gray;
    height: 30px;
    font-size: 30px;
    text-align: center;
}
.grid-item-white {
    background-color: white;
}
</style>

<p>输入：grid &#x3D; [[“B”,”W”,”B”],[“B”,”W”,”W”],[“B”,”W”,”W”]]</p>
<p>输出：true</p>
<p>解释：</p>
<p>grid 已经包含一个 2 x 2 颜色相同的正方形了。</p>
<p>提示：</p>
<p>grid.length &#x3D;&#x3D; 3<br>grid[i].length &#x3D;&#x3D; 3<br>grid[i][j] 要么是 ‘W’ ，要么是 ‘B’ 。</p>
<h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>通过遍历0,0 0,1 1,0 1,1 这些索引，以这些索引为顶点找到2x2的正方形是否有&gt;&#x3D;3个黑色 或者&gt;&#x3D;3个白色 有就return true<br>下图红色表示要遍历的顶点索引</p>
<div class="grid-container">
<div class="grid-item" style="background-color: red">&nbsp;</div>

<div class="grid-item grid-item-white" style="background-color: red">&nbsp;</div>

<div class="grid-item" >&nbsp;</div>

<div class="grid-item" style="background-color: red">&nbsp;</div>

<div class="grid-item grid-item-white" style="background-color: red">&nbsp;</div>

<div class="grid-item grid-item-white">&nbsp;</div>

<div class="grid-item">&nbsp;</div>

<div class="grid-item grid-item-white">&nbsp;</div>

<div class="grid-item grid-item-white">&nbsp;</div>
</div>
<style>
.grid-container {
    display: grid;
    grid-template-columns: 30px 30px 30px;
    padding: 10px;
}
.grid-item {
    background-color: black;
    border: 1px solid gray;
    height: 30px;
    font-size: 30px;
    text-align: center;
}
.grid-item-white {
    background-color: white;
}
</style>

<h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canMakeSquare</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> grid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// System.out.println(Arrays.deepToString(grid));</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> chars<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">int</span> bCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> wCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token comment">// System.out.println(i + "," + j + ":" + grid[i][j]);</span>
            <span class="token comment">// 判断2x2</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'B'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                bCount<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'W'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                wCount<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'B'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                bCount<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'W'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                wCount<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'B'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                bCount<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'W'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                wCount<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'B'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                bCount<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'W'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                wCount<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>bCount <span class="token operator">>=</span> <span class="token number">3</span> <span class="token operator">||</span> wCount <span class="token operator">>=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Solution3127</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">canMakeSquare</span><span class="token punctuation">(</span><span class="token class-name">TransformUtils</span><span class="token punctuation">.</span><span class="token function">charTwoDimensionalArrays</span><span class="token punctuation">(</span>
    <span class="token string">"[[\"B\",\"W\",\"B\"],[\"B\",\"W\",\"W\"],[\"B\",\"W\",\"B\"]]"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// true</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Solution3127</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">canMakeSquare</span><span class="token punctuation">(</span><span class="token class-name">TransformUtils</span><span class="token punctuation">.</span><span class="token function">charTwoDimensionalArrays</span><span class="token punctuation">(</span>
    <span class="token string">"[[\"B\",\"W\",\"B\"],[\"W\",\"B\",\"W\"],[\"B\",\"W\",\"B\"]]"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// false</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Solution3127</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">canMakeSquare</span><span class="token punctuation">(</span><span class="token class-name">TransformUtils</span><span class="token punctuation">.</span><span class="token function">charTwoDimensionalArrays</span><span class="token punctuation">(</span>
    <span class="token string">"[[\"B\",\"W\",\"B\"],[\"B\",\"W\",\"W\"],[\"B\",\"W\",\"W\"]]"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="额外补充"><a href="#额外补充" class="headerlink" title="额外补充"></a>额外补充</h1><h2 id="将字符串转换为二维数组"><a href="#将字符串转换为二维数组" class="headerlink" title="将字符串转换为二维数组"></a>将字符串转换为二维数组</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">charTwoDimensionalArrays</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">></span><span class="token punctuation">></span></span> collect <span class="token operator">=</span> <span class="token class-name">JSONUtil</span><span class="token punctuation">.</span><span class="token function">parseArray</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>obj <span class="token operator">-></span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">JSONArray</span><span class="token punctuation">)</span> obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>collect<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> collect<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> collect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token operator">::</span><span class="token function">valueOf</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法练习</tag>
      </tags>
  </entry>
  <entry>
    <title>2024. 考试的最大困扰度</title>
    <url>/5cb76bfc/</url>
    <content><![CDATA[<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbWl6ZS10aGUtY29uZnVzaW9uLW9mLWFuLWV4YW0vZGVzY3JpcHRpb24v">https://leetcode.cn/problems/maximize-the-confusion-of-an-exam/description/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>一位老师正在出一场由 n 道判断题构成的考试，每道题的答案为 true （用 ‘T’ 表示）或者 false （用 ‘F’ 表示）。老师想增加学生对自己做出答案的不确定性，方法是 最大化 有 连续相同 结果的题数。（也就是连续出现 true 或者连续出现 false）。</p>
<p>给你一个字符串 answerKey ，其中 answerKey[i] 是第 i 个问题的正确结果。除此以外，还给你一个整数 k ，表示你能进行以下操作的最多次数：</p>
<p>每次操作中，将问题的正确答案改为 ‘T’ 或者 ‘F’ （也就是将 answerKey[i] 改为 ‘T’ 或者 ‘F’ ）。<br>请你返回在不超过 k 次操作的情况下，最大 连续 ‘T’ 或者 ‘F’ 的数目。</p>
<p>示例 1：</p>
<p>输入：answerKey &#x3D; “TTFF”, k &#x3D; 2<br>输出：4<br>解释：我们可以将两个 ‘F’ 都变为 ‘T’ ，得到 answerKey &#x3D; “TTTT” 。<br>总共有四个连续的 ‘T’ 。<br>示例 2：</p>
<p>输入：answerKey &#x3D; “TFFT”, k &#x3D; 1<br>输出：3<br>解释：我们可以将最前面的 ‘T’ 换成 ‘F’ ，得到 answerKey &#x3D; “FFFT” 。<br>或者，我们可以将第二个 ‘T’ 换成 ‘F’ ，得到 answerKey &#x3D; “TFFF” 。<br>两种情况下，都有三个连续的 ‘F’ 。<br>示例 3：</p>
<p>输入：answerKey &#x3D; “TTFTTFTT”, k &#x3D; 1<br>输出：5<br>解释：我们可以将第一个 ‘F’ 换成 ‘T’ ，得到 answerKey &#x3D; “TTTTTFTT” 。<br>或者我们可以将第二个 ‘F’ 换成 ‘T’ ，得到 answerKey &#x3D; “TTFTTTTT” 。<br>两种情况下，都有五个连续的 ‘T’ 。</p>
<p>提示：</p>
<p>n &#x3D;&#x3D; answerKey.length<br>1 &lt;&#x3D; n &lt;&#x3D; 5 * 104<br>answerKey[i] 要么是 ‘T’ ，要么是 ‘F’<br>1 &lt;&#x3D; k &lt;&#x3D; n</p>
<h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>利用滑动窗口思路：假设全部都是能转换的 即窗口大小为 answerKey.length<br>如果 这个窗口中的转换次数大于&gt;k 则滑动，如果不能滑动则 窗口大小&#x3D;answerKey.length-1<br>直到能够转换为止</p>
<p>整改数组为窗口时：[TTFTTFTT] k为1 但是f&#x3D;2故不满足</p>
<p>窗口大小-1时：[TTFTTFT]T -滑动-&gt; T[TFTTFTT] 不满足</p>
<p>窗口大小-2时：[TTFTTF]TT -滑动-&gt; T[TFTTFT]T -滑动-&gt; TT[FTTFTT] 不满足</p>
<p>窗口大小-3时：[TTFTT]FTT(满足返回结果)</p>
<p>这种情况只适合 k和answerKey.length都相对比较小的情况，如果answerKey.length过大可能就超时了</p>
<h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxConsecutiveAnswers</span><span class="token punctuation">(</span><span class="token class-name">String</span> answerKey<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">int</span> slidingWindowSize <span class="token operator">=</span> answerKey<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> answerKey<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>slidingWindowSize <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">int</span> times <span class="token operator">=</span> <span class="token punctuation">(</span>answerKey<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> slidingWindowSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> times <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">int</span> f <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">boolean</span> isFind <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> slidingWindowSize<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>chars<span class="token punctuation">[</span>j <span class="token operator">+</span> i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'F'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    f<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
                    t<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>f <span class="token operator">></span> k <span class="token operator">&amp;&amp;</span> t <span class="token operator">></span> k<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    isFind <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isFind<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">return</span> slidingWindowSize<span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">// 整个数组滑动后都没有找到，则窗口大小-1</span>
        slidingWindowSize<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Solution2024</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">maxConsecutiveAnswers</span><span class="token punctuation">(</span><span class="token string">"TTFTTFTT"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Solution2024</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">maxConsecutiveAnswers</span><span class="token punctuation">(</span><span class="token string">"TTFF"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Solution2024</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">maxConsecutiveAnswers</span><span class="token punctuation">(</span><span class="token string">"TTFF"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Solution2024</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">maxConsecutiveAnswers</span><span class="token punctuation">(</span><span class="token string">"TFFT"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Solution2024</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">maxConsecutiveAnswers</span><span class="token punctuation">(</span><span class="token string">"TTFTTTTTFT"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="额外补充"><a href="#额外补充" class="headerlink" title="额外补充"></a>额外补充</h1><script src="https://unpkg.com/react@18.2.0/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18.2.0/umd/react-dom.development.js"></script>

    <script
            type="text/javascript"
            src="https://unpkg.com/@excalidraw/excalidraw/dist/excalidraw.development.js"
    ></script>
    <div id="5cb76bfc1"></div>
    <script>
        const App = () => {
            // 隐藏没用的样式
            setTimeout(()=>{
                let elementsByClassName = document.getElementsByClassName("App-bottom-bar");
                if (elementsByClassName && elementsByClassName[0]){
                    elementsByClassName[0].style.display='none'
                }
                 elementsByClassName = document.getElementsByClassName("layer-ui__wrapper__footer-right");
                if (elementsByClassName && elementsByClassName[0]){
                    elementsByClassName[0].style.display='none'
                }
                elementsByClassName = document.getElementsByClassName("LaserToolOverlay");
                if (elementsByClassName && elementsByClassName[0]){
                    elementsByClassName[0].style.display='none'
                }
            },200)
            return React.createElement(
                React.Fragment,
                null,
                React.createElement(
                    "div",
                    {
                        style: { height: "400px" },
                    },
                    React.createElement(ExcalidrawLib.Excalidraw,{
                        viewModeEnabled:true,
                        gridModeEnabled:false,
                        initialData: {"id":"5cb76bfc1","type":"excalidraw","version":2,"source":"https://github.com/zsviczian/obsidian-excalidraw-plugin/releases/tag/2.4.0","elements":[{"type":"rectangle","version":215,"versionNonce":863065994,"index":"Zz","isDeleted":false,"id":"begVrttJw55GS08_vCzVh","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-846.7438581156279,"y":506.7475721786384,"strokeColor":"#1e1e1e","backgroundColor":"#b2f2bb","width":1094.5454545454545,"height":895.2447552447555,"seed":1265114262,"groupIds":[],"frameId":null,"roundness":{"type":3},"boundElements":[],"updated":1725352049317,"link":null,"locked":false},{"type":"rectangle","version":183,"versionNonce":1617785418,"index":"a0","isDeleted":false,"id":"TxjV-1TAmvVAO2WGPuoCo","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-755.6949070666768,"y":-233.11256768150156,"strokeColor":"#1e1e1e","backgroundColor":"#ffc9c9","width":1390.7692307692307,"height":715.3846153846152,"seed":315247178,"groupIds":[],"frameId":null,"roundness":{"type":3},"boundElements":[],"updated":1725351201531,"link":null,"locked":false},{"type":"ellipse","version":63,"versionNonce":574291350,"index":"a1","isDeleted":false,"id":"7f6C1wEYRRUXjEc0S16gH","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-274,"y":-362.734375,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":91.99999999999997,"height":67,"seed":1532012950,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"1YBXJUpB"},{"id":"UXLQkNmVfheeAx427tIRX","type":"arrow"}],"updated":1725349283569,"link":null,"locked":false},{"type":"text","version":41,"versionNonce":4311882,"index":"a2","isDeleted":false,"id":"1YBXJUpB","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-254.69689484473744,"y":-341.92245216974936,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":53.3399658203125,"height":25,"seed":1751262410,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725348923515,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"start","rawText":"start","textAlign":"center","verticalAlign":"middle","containerId":"7f6C1wEYRRUXjEc0S16gH","originalText":"start","autoResize":true,"lineHeight":1.25},{"type":"diamond","version":178,"versionNonce":850706378,"index":"a3","isDeleted":false,"id":"KDvb14HiYYETTwomG5tmM","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-325,"y":-216.734375,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":205,"height":201,"seed":1871103690,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"JDd4UZbY"},{"id":"qpfqHlHkgG0EaMJ5qSvWB","type":"arrow"},{"id":"ReC9w_xm9fJ-8vh54PKKO","type":"arrow"},{"id":"UXLQkNmVfheeAx427tIRX","type":"arrow"},{"id":"QJPdtJiUZc9YnkGez08I-","type":"arrow"}],"updated":1725349720705,"link":null,"locked":false},{"type":"text","version":174,"versionNonce":471719370,"index":"a4","isDeleted":false,"id":"JDd4UZbY","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-268.34996795654297,"y":-153.484375,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":92.19993591308594,"height":75,"seed":291160086,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349757597,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"right <\nanswerKe\ny.length()","rawText":"right < answerKey.length()","textAlign":"center","verticalAlign":"middle","containerId":"KDvb14HiYYETTwomG5tmM","originalText":"right < answerKey.length()","autoResize":true,"lineHeight":1.25},{"type":"arrow","version":369,"versionNonce":205420490,"index":"a5","isDeleted":false,"id":"qpfqHlHkgG0EaMJ5qSvWB","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-322.3065246125753,"y":-112.1929709081241,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":504.1356201649633,"height":4.384802565044083,"seed":1435185750,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"n4o2OES4"}],"updated":1725362239318,"link":null,"locked":false,"startBinding":{"elementId":"KDvb14HiYYETTwomG5tmM","focus":-0.031575327466401716,"gap":1,"fixedPoint":null},"endBinding":{"elementId":"r3tO9uw1b399cnrGGimTE","focus":-0.15666246964723626,"gap":5.199344577268299,"fixedPoint":null},"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[-504.1356201649633,4.384802565044083]],"elbowed":false},{"type":"text","version":4,"versionNonce":1582837130,"index":"a5V","isDeleted":false,"id":"n4o2OES4","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-584.374334695057,"y":-122.50056962560205,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":20,"height":25,"seed":284700118,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349335800,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"否","rawText":"否","textAlign":"center","verticalAlign":"middle","containerId":"qpfqHlHkgG0EaMJ5qSvWB","originalText":"否","autoResize":true,"lineHeight":1.25},{"type":"ellipse","version":158,"versionNonce":2006301846,"index":"a6","isDeleted":false,"id":"r3tO9uw1b399cnrGGimTE","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-908.173076923077,"y":-137.79206730769232,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":77,"height":72,"seed":37209034,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"id":"qpfqHlHkgG0EaMJ5qSvWB","type":"arrow"},{"type":"text","id":"XRT5nGYf"}],"updated":1725351114074,"link":null,"locked":false},{"type":"text","version":140,"versionNonce":1444788694,"index":"a7","isDeleted":false,"id":"XRT5nGYf","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-886.5766730451459,"y":-114.24791143040804,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":33.35997009277344,"height":25,"seed":2058819158,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351114074,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"end","rawText":"end","textAlign":"center","verticalAlign":"middle","containerId":"r3tO9uw1b399cnrGGimTE","originalText":"end","autoResize":true,"lineHeight":1.25},{"type":"diamond","version":181,"versionNonce":641280982,"index":"a9","isDeleted":false,"id":"jriW_fO3d5B_xsP6mUP3d","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-343,"y":109.265625,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":246,"height":170,"seed":349070486,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"WlKvL2P3"},{"id":"evW5dHwdBYSRCw4mdEk4x","type":"arrow"},{"id":"5oUZTObXVt7WlpyS1SDpQ","type":"arrow"},{"id":"ReC9w_xm9fJ-8vh54PKKO","type":"arrow"}],"updated":1725349280554,"link":null,"locked":false},{"type":"text","version":82,"versionNonce":1830100234,"index":"aA","isDeleted":false,"id":"WlKvL2P3","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-275.2699508666992,"y":156.765625,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":110.53990173339844,"height":75,"seed":592983818,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349049725,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"answerKey.\ncharAt(righ\nt) == 'T'","rawText":"answerKey.charAt(right) == 'T'","textAlign":"center","verticalAlign":"middle","containerId":"jriW_fO3d5B_xsP6mUP3d","originalText":"answerKey.charAt(right) == 'T'","autoResize":true,"lineHeight":1.25},{"type":"rectangle","version":67,"versionNonce":1966396822,"index":"aB","isDeleted":false,"id":"q2oC6dfBInyoyRhC-WmlP","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-3,"y":143.265625,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":215,"height":120,"seed":127664458,"groupIds":[],"frameId":null,"roundness":{"type":3},"boundElements":[{"type":"text","id":"2rTUXvKJ"},{"id":"5oUZTObXVt7WlpyS1SDpQ","type":"arrow"},{"id":"DpuBj8Y8HN-1EMAW-UJBJ","type":"arrow"}],"updated":1725349276689,"link":null,"locked":false},{"type":"text","version":11,"versionNonce":1012070422,"index":"aBV","isDeleted":false,"id":"2rTUXvKJ","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":58.22001647949219,"y":190.765625,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":92.55996704101562,"height":25,"seed":15308374,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349065939,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"countT++","rawText":"countT++","textAlign":"center","verticalAlign":"middle","containerId":"q2oC6dfBInyoyRhC-WmlP","originalText":"countT++","autoResize":true,"lineHeight":1.25},{"type":"rectangle","version":116,"versionNonce":746680278,"index":"aD","isDeleted":false,"id":"egxgE75XDW2bQfQGpvpIL","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-671.5,"y":128.265625,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":215,"height":120,"seed":326805462,"groupIds":[],"frameId":null,"roundness":{"type":3},"boundElements":[{"type":"text","id":"eALblDLZ"},{"id":"evW5dHwdBYSRCw4mdEk4x","type":"arrow"},{"id":"6kkdbHD_H8M5AmjmNEXYR","type":"arrow"}],"updated":1725349273489,"link":null,"locked":false},{"type":"text","version":71,"versionNonce":222619082,"index":"aE","isDeleted":false,"id":"eALblDLZ","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-608.9199752807617,"y":175.765625,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":89.83995056152344,"height":25,"seed":1422081302,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349073489,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"countF++","rawText":"countF++","textAlign":"center","verticalAlign":"middle","containerId":"egxgE75XDW2bQfQGpvpIL","originalText":"countF++","autoResize":true,"lineHeight":1.25},{"type":"arrow","version":68,"versionNonce":924358730,"index":"aG","isDeleted":false,"id":"evW5dHwdBYSRCw4mdEk4x","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-341.86485342682334,"y":192.265625,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":113.63514657317666,"height":0,"seed":946436938,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"ldLt08YH"}],"updated":1725362239322,"link":null,"locked":false,"startBinding":{"elementId":"jriW_fO3d5B_xsP6mUP3d","focus":0.023529411764705882,"gap":1,"fixedPoint":null},"endBinding":{"elementId":"egxgE75XDW2bQfQGpvpIL","focus":0.06666666666666667,"gap":1,"fixedPoint":null},"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[-113.63514657317666,0]],"elbowed":false},{"type":"text","version":4,"versionNonce":1557834134,"index":"aGV","isDeleted":false,"id":"ldLt08YH","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-408.6824267134117,"y":179.765625,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":20,"height":25,"seed":1520421130,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349217675,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"否","rawText":"否","textAlign":"center","verticalAlign":"middle","containerId":"evW5dHwdBYSRCw4mdEk4x","originalText":"否","autoResize":true,"lineHeight":1.25},{"type":"arrow","version":65,"versionNonce":1697071818,"index":"aH","isDeleted":false,"id":"5oUZTObXVt7WlpyS1SDpQ","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-100.99999999999996,"y":198.265625,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":96.99999999999994,"height":2.9393939393939377,"seed":365829782,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"zh4XlhAj"}],"updated":1725362239321,"link":null,"locked":false,"startBinding":{"elementId":"jriW_fO3d5B_xsP6mUP3d","focus":0.004634581105169341,"gap":1.0166371242085575,"fixedPoint":null},"endBinding":{"elementId":"q2oC6dfBInyoyRhC-WmlP","focus":-0.01940119760479042,"gap":1,"fixedPoint":null},"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[96.99999999999994,2.9393939393939377]],"elbowed":false},{"type":"text","version":5,"versionNonce":1040457622,"index":"aHV","isDeleted":false,"id":"zh4XlhAj","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-63.499999999999986,"y":187.23532196969697,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":22,"height":25,"seed":134155338,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349210611,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"是","rawText":"是","textAlign":"center","verticalAlign":"middle","containerId":"5oUZTObXVt7WlpyS1SDpQ","originalText":"是","autoResize":true,"lineHeight":1.25},{"type":"diamond","version":186,"versionNonce":889030614,"index":"aI","isDeleted":false,"id":"oyG3XYZnd1ZPnoqjNphKT","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-330.25,"y":506.265625,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":217,"height":220,"seed":195938838,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"assygEHD"},{"id":"hdMzZd6fcbZ1YGgo6KbMS","type":"arrow"},{"id":"TFlEvpmUoyG1GFBQz0vbG","type":"arrow"},{"id":"6kkdbHD_H8M5AmjmNEXYR","type":"arrow"},{"id":"DpuBj8Y8HN-1EMAW-UJBJ","type":"arrow"},{"id":"7r8li-zpReFzTSzalQEoT","type":"arrow"}],"updated":1725349298689,"link":null,"locked":false},{"type":"text","version":58,"versionNonce":1215742730,"index":"aJ","isDeleted":false,"id":"assygEHD","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-268.9399719238281,"y":566.265625,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":94.87994384765625,"height":100,"seed":967860118,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349122098,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"Math.min(\ncountT,\ncountF) >\nk","rawText":"Math.min(countT, countF) > k","textAlign":"center","verticalAlign":"middle","containerId":"oyG3XYZnd1ZPnoqjNphKT","originalText":"Math.min(countT, countF) > k","autoResize":true,"lineHeight":1.25},{"type":"rectangle","version":165,"versionNonce":353291722,"index":"aK","isDeleted":false,"id":"biTzavT_ZXYTcHutMBwav","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":269.6136477901183,"y":342.49177793203523,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":346.25,"height":107.5,"seed":132455702,"groupIds":[],"frameId":null,"roundness":{"type":3},"boundElements":[{"type":"text","id":"7G17HWEG"},{"id":"hdMzZd6fcbZ1YGgo6KbMS","type":"arrow"},{"id":"OBg6kLAp8ls3ByS-_FTWT","type":"arrow"}],"updated":1725351104767,"link":null,"locked":false},{"type":"text","version":123,"versionNonce":440829066,"index":"aKV","isDeleted":false,"id":"7G17HWEG","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":280.36875948445424,"y":371.24177793203523,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":324.7397766113281,"height":50,"seed":1041428746,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351104767,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"maxLen = Math.max(maxLen, right\n- left + 1);","rawText":"maxLen = Math.max(maxLen, right - left + 1);","textAlign":"center","verticalAlign":"middle","containerId":"biTzavT_ZXYTcHutMBwav","originalText":"maxLen = Math.max(maxLen, right - left + 1);","autoResize":true,"lineHeight":1.25},{"type":"arrow","version":148,"versionNonce":1506717578,"index":"aN","isDeleted":false,"id":"hdMzZd6fcbZ1YGgo6KbMS","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-139.56146283140532,"y":588.1663864395307,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":402.9251106215236,"height":140.10095734673757,"seed":1656750038,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"nksljwu4"}],"updated":1725362239324,"link":null,"locked":false,"startBinding":{"elementId":"oyG3XYZnd1ZPnoqjNphKT","focus":0.004350096328705688,"gap":1,"fixedPoint":null},"endBinding":{"elementId":"biTzavT_ZXYTcHutMBwav","focus":0.09255837392911134,"gap":6.25,"fixedPoint":null},"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[402.9251106215236,-140.10095734673757]],"elbowed":false},{"type":"text","version":10,"versionNonce":243504534,"index":"aNV","isDeleted":false,"id":"nksljwu4","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":51.90109247935652,"y":505.61590776616197,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":20,"height":25,"seed":705465482,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349206091,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"否","rawText":"否","textAlign":"center","verticalAlign":"middle","containerId":"hdMzZd6fcbZ1YGgo6KbMS","originalText":"否","autoResize":true,"lineHeight":1.25},{"type":"diamond","version":184,"versionNonce":1627649750,"index":"aP","isDeleted":false,"id":"LS7PdxIqKWyAoIzfb7YWt","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-349.8251633986928,"y":932.6316380718954,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":246,"height":170,"seed":1679877334,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"O40Ij7Zj"},{"id":"8bbaYTu2coEyNqlRGSV4Q","type":"arrow"},{"id":"K8F94coJ-6rlIESQNoAYo","type":"arrow"},{"id":"TFlEvpmUoyG1GFBQz0vbG","type":"arrow"}],"updated":1725349268777,"link":null,"locked":false},{"type":"text","version":87,"versionNonce":1767930378,"index":"aQ","isDeleted":false,"id":"O40Ij7Zj","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-282.23512128443497,"y":980.1316380718954,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":110.81991577148438,"height":75,"seed":261741078,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349237425,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"answerKey.\ncharAt(left\n) == 'T'","rawText":"answerKey.charAt(left) == 'T'","textAlign":"center","verticalAlign":"middle","containerId":"LS7PdxIqKWyAoIzfb7YWt","originalText":"answerKey.charAt(left) == 'T'","autoResize":true,"lineHeight":1.25},{"type":"rectangle","version":70,"versionNonce":1916042058,"index":"aR","isDeleted":false,"id":"OhrUpjsThroNempepJewp","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-9.82516339869278,"y":966.6316380718954,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":215,"height":120,"seed":1656891222,"groupIds":[],"frameId":null,"roundness":{"type":3},"boundElements":[{"type":"text","id":"xxrT76vk"},{"id":"K8F94coJ-6rlIESQNoAYo","type":"arrow"},{"id":"PCABvj61LK7Od03LBrMxn","type":"arrow"}],"updated":1725349262298,"link":null,"locked":false},{"type":"text","version":19,"versionNonce":1829497558,"index":"aS","isDeleted":false,"id":"xxrT76vk","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":53.784860099842376,"y":1014.1316380718954,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":87.77995300292969,"height":25,"seed":1575931030,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349241259,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"countT--","rawText":"countT--","textAlign":"center","verticalAlign":"middle","containerId":"OhrUpjsThroNempepJewp","originalText":"countT--","autoResize":true,"lineHeight":1.25},{"type":"rectangle","version":119,"versionNonce":1851940246,"index":"aT","isDeleted":false,"id":"ZIWUis-dpJdJ0KromiTeN","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-678.3251633986929,"y":951.6316380718954,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":215,"height":120,"seed":785697238,"groupIds":[],"frameId":null,"roundness":{"type":3},"boundElements":[{"type":"text","id":"NhCgwA8s"},{"id":"8bbaYTu2coEyNqlRGSV4Q","type":"arrow"},{"id":"CcYxVVtaW0DK0GLIANQWS","type":"arrow"}],"updated":1725349259088,"link":null,"locked":false},{"type":"text","version":79,"versionNonce":570366422,"index":"aU","isDeleted":false,"id":"NhCgwA8s","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-613.3551316604116,"y":999.1316380718954,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":85.0599365234375,"height":25,"seed":76095254,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349245923,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"countF--","rawText":"countF--","textAlign":"center","verticalAlign":"middle","containerId":"ZIWUis-dpJdJ0KromiTeN","originalText":"countF--","autoResize":true,"lineHeight":1.25},{"type":"arrow","version":78,"versionNonce":702770890,"index":"aV","isDeleted":false,"id":"8bbaYTu2coEyNqlRGSV4Q","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-348.6900168255161,"y":1015.6316380718954,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":113.63514657317677,"height":0,"seed":1669385302,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"npBcZIXC"}],"updated":1725362239328,"link":null,"locked":false,"startBinding":{"elementId":"LS7PdxIqKWyAoIzfb7YWt","focus":0.023529411764705882,"gap":1,"fixedPoint":null},"endBinding":{"elementId":"ZIWUis-dpJdJ0KromiTeN","focus":0.06666666666666667,"gap":1,"fixedPoint":null},"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[-113.63514657317677,0]],"elbowed":false},{"type":"text","version":8,"versionNonce":1345343690,"index":"aW","isDeleted":false,"id":"npBcZIXC","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-415.5075901121045,"y":1003.1316380718954,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":20,"height":25,"seed":2039533974,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349229330,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"否","rawText":"否","textAlign":"center","verticalAlign":"middle","containerId":"8bbaYTu2coEyNqlRGSV4Q","originalText":"否","autoResize":true,"lineHeight":1.25},{"type":"arrow","version":74,"versionNonce":658356554,"index":"aX","isDeleted":false,"id":"K8F94coJ-6rlIESQNoAYo","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-107.82516339869268,"y":1021.6316380718954,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":96.99999999999989,"height":2.9393939393939945,"seed":1911434966,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"6FlHIL1p"}],"updated":1725362239327,"link":null,"locked":false,"startBinding":{"elementId":"LS7PdxIqKWyAoIzfb7YWt","focus":0.0046345811051685054,"gap":1.0166371242085717,"fixedPoint":null},"endBinding":{"elementId":"OhrUpjsThroNempepJewp","focus":-0.019401197604792298,"gap":1.0000000000000142,"fixedPoint":null},"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[96.99999999999989,2.9393939393939945]],"elbowed":false},{"type":"text","version":8,"versionNonce":88941066,"index":"aY","isDeleted":false,"id":"6FlHIL1p","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-70.32516339869274,"y":1010.6013350415924,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":22,"height":25,"seed":1227744278,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349229330,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"是","rawText":"是","textAlign":"center","verticalAlign":"middle","containerId":"K8F94coJ-6rlIESQNoAYo","originalText":"是","autoResize":true,"lineHeight":1.25},{"type":"rectangle","version":40,"versionNonce":1096967510,"index":"aZ","isDeleted":false,"id":"5HrxZ6X_Tx2ULmslbFJIC","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-347.8251633986928,"y":1281.3816380718954,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":210,"height":77.5,"seed":1031273482,"groupIds":[],"frameId":null,"roundness":{"type":3},"boundElements":[{"type":"text","id":"JfH0eKUg"},{"id":"CcYxVVtaW0DK0GLIANQWS","type":"arrow"},{"id":"PCABvj61LK7Od03LBrMxn","type":"arrow"},{"id":"7r8li-zpReFzTSzalQEoT","type":"arrow"}],"updated":1725349298689,"link":null,"locked":false},{"type":"text","version":4,"versionNonce":1018495882,"index":"aa","isDeleted":false,"id":"JfH0eKUg","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-274.9251466140248,"y":1307.6316380718954,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":64.19996643066406,"height":25,"seed":138582154,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349255563,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"left++;","rawText":"left++;","textAlign":"center","verticalAlign":"middle","containerId":"5HrxZ6X_Tx2ULmslbFJIC","originalText":"left++;","autoResize":true,"lineHeight":1.25},{"type":"arrow","version":66,"versionNonce":62506058,"index":"ab","isDeleted":false,"id":"CcYxVVtaW0DK0GLIANQWS","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-567.825163398693,"y":1072.6316380718954,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":328.7500000000001,"height":206.25,"seed":1765615882,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[],"updated":1725362239329,"link":null,"locked":false,"startBinding":{"elementId":"ZIWUis-dpJdJ0KromiTeN","focus":0.4638770791377634,"gap":1,"fixedPoint":null},"endBinding":{"elementId":"5HrxZ6X_Tx2ULmslbFJIC","focus":0.41675373642847413,"gap":2.5,"fixedPoint":null},"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[328.7500000000001,206.25]],"elbowed":false},{"type":"arrow","version":62,"versionNonce":357477130,"index":"ac","isDeleted":false,"id":"PCABvj61LK7Od03LBrMxn","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":98.08247991340939,"y":1087.6316380718954,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":338.4076433121021,"height":192.5,"seed":1060364950,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[],"updated":1725362239329,"link":null,"locked":false,"startBinding":{"elementId":"OhrUpjsThroNempepJewp","focus":-0.5054205607476636,"gap":1,"fixedPoint":null},"endBinding":{"elementId":"5HrxZ6X_Tx2ULmslbFJIC","focus":-0.3917402501839588,"gap":1.25,"fixedPoint":null},"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[-338.4076433121021,192.5]],"elbowed":false},{"type":"arrow","version":68,"versionNonce":670931594,"index":"ad","isDeleted":false,"id":"TFlEvpmUoyG1GFBQz0vbG","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-221.69892003874662,"y":727.2643195667011,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":7.376637515942605,"height":201.62809210243097,"seed":1681884746,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"i1vMFweb"}],"updated":1725362239326,"link":null,"locked":false,"startBinding":{"elementId":"oyG3XYZnd1ZPnoqjNphKT","focus":-0.03789868950465081,"gap":1,"fixedPoint":null},"endBinding":{"elementId":"LS7PdxIqKWyAoIzfb7YWt","focus":-0.044690660321237356,"gap":4.364182391750546,"fixedPoint":null},"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[-7.376637515942605,201.62809210243097]],"elbowed":false},{"type":"text","version":4,"versionNonce":467686986,"index":"adV","isDeleted":false,"id":"i1vMFweb","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-236.38723879671792,"y":815.5783656179167,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":22,"height":25,"seed":1968896278,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349326596,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"是","rawText":"是","textAlign":"center","verticalAlign":"middle","containerId":"TFlEvpmUoyG1GFBQz0vbG","originalText":"是","autoResize":true,"lineHeight":1.25},{"type":"arrow","version":62,"versionNonce":1269637962,"index":"ae","isDeleted":false,"id":"6kkdbHD_H8M5AmjmNEXYR","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-551.5751633986927,"y":250.1316380718954,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":330.59261324045616,"height":254.49393623038895,"seed":1041647690,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[],"updated":1725362239323,"link":null,"locked":false,"startBinding":{"elementId":"egxgE75XDW2bQfQGpvpIL","focus":0.36637131370302956,"gap":1.8660130718953951,"fixedPoint":null},"endBinding":{"elementId":"oyG3XYZnd1ZPnoqjNphKT","focus":1.0202803843092416,"gap":1.8107306676312476,"fixedPoint":null},"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[330.59261324045616,254.49393623038895]],"elbowed":false},{"type":"arrow","version":72,"versionNonce":1702767114,"index":"af","isDeleted":false,"id":"DpuBj8Y8HN-1EMAW-UJBJ","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":99.67483660130728,"y":266.3816380718954,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":317.5000000000001,"height":237.5,"seed":1902785738,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[],"updated":1725362239323,"link":null,"locked":false,"startBinding":{"elementId":"q2oC6dfBInyoyRhC-WmlP","focus":-0.42379605424112726,"gap":3.116013071895395,"fixedPoint":null},"endBinding":{"elementId":"oyG3XYZnd1ZPnoqjNphKT","focus":-0.9949825957584182,"gap":4.4683863226835285,"fixedPoint":null},"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[-317.5000000000001,237.5]],"elbowed":false},{"type":"arrow","version":67,"versionNonce":448418826,"index":"ag","isDeleted":false,"id":"ReC9w_xm9fJ-8vh54PKKO","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-217.8251633986928,"y":-18.61836192810459,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":2.842170943040401e-14,"height":128.1713736746991,"seed":1829395094,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"7rBAzGDC"}],"updated":1725362239320,"link":null,"locked":false,"startBinding":{"elementId":"KDvb14HiYYETTwomG5tmM","focus":-0.04560816196397289,"gap":1.2136039817500262,"fixedPoint":null},"endBinding":{"elementId":"jriW_fO3d5B_xsP6mUP3d","focus":0.017681598384611544,"gap":1,"fixedPoint":null},"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[2.842170943040401e-14,128.1713736746991]],"elbowed":false},{"type":"text","version":4,"versionNonce":765897930,"index":"agV","isDeleted":false,"id":"7rBAzGDC","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-228.82516339869278,"y":32.967324909244965,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":22,"height":25,"seed":1210333846,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725349338489,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"是","rawText":"是","textAlign":"center","verticalAlign":"middle","containerId":"ReC9w_xm9fJ-8vh54PKKO","originalText":"是","autoResize":true,"lineHeight":1.25},{"type":"arrow","version":46,"versionNonce":982975050,"index":"ah","isDeleted":false,"id":"UXLQkNmVfheeAx427tIRX","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-219.07523348083936,"y":-292.37270702119315,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":1.2500700821465784,"height":77.50434509308855,"seed":1886356298,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[],"updated":1725362239317,"link":null,"locked":false,"startBinding":{"elementId":"7f6C1wEYRRUXjEc0S16gH","focus":-0.18107932344390343,"gap":3.964184261532253,"fixedPoint":null},"endBinding":{"elementId":"KDvb14HiYYETTwomG5tmM","focus":0.06112885227524033,"gap":1.9404767074118041,"fixedPoint":null},"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[1.2500700821465784,77.50434509308855]],"elbowed":false},{"type":"arrow","version":261,"versionNonce":1494792650,"index":"ai","isDeleted":false,"id":"7r8li-zpReFzTSzalQEoT","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-355.03670186023135,"y":1315.0354842257414,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":487.51540742803013,"height":701.1656980215614,"seed":1508925398,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[],"updated":1725362239329,"link":null,"locked":false,"startBinding":{"elementId":"5HrxZ6X_Tx2ULmslbFJIC","focus":-0.6547362031742512,"gap":7.21153846153851,"fixedPoint":null},"endBinding":{"elementId":"oyG3XYZnd1ZPnoqjNphKT","focus":0.798422002833768,"gap":3.506051078478407,"fixedPoint":null},"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[-465.28846153846143,-326.15384615384596],[22.226945889568697,-701.1656980215614]],"elbowed":false},{"type":"text","version":150,"versionNonce":1167030602,"index":"aj","isDeleted":false,"id":"OU1OMZRM","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":713.7136033900744,"y":-203.01789866587657,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":533.6998291015625,"height":125,"seed":922141142,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351122015,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"answerKey：T T F T T F T T\nk：1\n初始化：left =0 right=0 countT=0 countF=0 maxLen=0\n\n","rawText":"answerKey：T T F T T F T T\nk：1\n初始化：left =0 right=0 countT=0 countF=0 maxLen=0\n\n","textAlign":"left","verticalAlign":"top","containerId":null,"originalText":"answerKey：T T F T T F T T\nk：1\n初始化：left =0 right=0 countT=0 countF=0 maxLen=0\n\n","autoResize":true,"lineHeight":1.25},{"type":"rectangle","version":98,"versionNonce":169735562,"index":"ak","isDeleted":false,"id":"HyDJK5LRCegkrWhHkx0lY","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":312.2782864065164,"y":51.40907734014354,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":244,"height":82,"seed":850452886,"groupIds":[],"frameId":null,"roundness":{"type":3},"boundElements":[{"type":"text","id":"NcuNLz5L"},{"id":"OBg6kLAp8ls3ByS-_FTWT","type":"arrow"},{"id":"QJPdtJiUZc9YnkGez08I-","type":"arrow"}],"updated":1725351106116,"link":null,"locked":false},{"type":"text","version":54,"versionNonce":983217226,"index":"akV","isDeleted":false,"id":"NcuNLz5L","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":399.7683071584695,"y":79.90907734014354,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":69.01995849609375,"height":25,"seed":451011530,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351106116,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"right++","rawText":"right++","textAlign":"center","verticalAlign":"middle","containerId":"HyDJK5LRCegkrWhHkx0lY","originalText":"right++","autoResize":true,"lineHeight":1.25},{"type":"arrow","version":183,"versionNonce":506654858,"index":"an","isDeleted":false,"id":"OBg6kLAp8ls3ByS-_FTWT","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":435.92855401008734,"y":340.46502139608754,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":6.614857335313786,"height":200.05594405594402,"seed":1575921558,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[],"updated":1725362239330,"link":null,"locked":false,"startBinding":{"elementId":"biTzavT_ZXYTcHutMBwav","focus":-0.0494810932818795,"gap":2.0267565359476976,"fixedPoint":null},"endBinding":{"elementId":"HyDJK5LRCegkrWhHkx0lY","focus":-0.07986861913233886,"gap":7,"fixedPoint":null},"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[6.614857335313786,-200.05594405594402]],"elbowed":false},{"type":"arrow","version":177,"versionNonce":408440650,"index":"ao","isDeleted":false,"id":"QJPdtJiUZc9YnkGez08I-","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":428.9126704553008,"y":42.40907734014357,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":549.7322861466865,"height":163.8041958041959,"seed":1102346582,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[],"updated":1725362239330,"link":null,"locked":false,"startBinding":{"elementId":"HyDJK5LRCegkrWhHkx0lY","focus":0.09783071033602722,"gap":9,"fixedPoint":null},"endBinding":{"elementId":"KDvb14HiYYETTwomG5tmM","focus":-0.07802955857204402,"gap":3.111152482210713,"fixedPoint":null},"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[-56.73228614668653,-150.80419580419587],[-549.7322861466865,-163.8041958041959]],"elbowed":false},{"type":"text","version":28,"versionNonce":157325974,"index":"ar","isDeleted":false,"id":"7dnyBS0u","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":-775.8347672065371,"y":567.4468728779391,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":301.3599853515625,"height":50,"seed":1425622538,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725350391820,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"这一部分就是讲窗口不断滑动\n直到满足T、F的改变次数不超过k","rawText":"这一部分就是讲窗口不断滑动\n直到满足T、F的改变次数不超过k","textAlign":"left","verticalAlign":"top","containerId":null,"originalText":"这一部分就是讲窗口不断滑动\n直到满足T、F的改变次数不超过k","autoResize":true,"lineHeight":1.25},{"type":"text","version":232,"versionNonce":1539762314,"index":"as","isDeleted":false,"id":"Q7k8qwuC","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":722.042649494409,"y":-41.89084822448791,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":622.6599731445312,"height":125,"seed":1803329034,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351822033,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"countT=4 countF=1  result=T T F T T \n这个时候在进行红色区域循环时发现\ncountT=4 countF=2  result=T T F T T F\n这时转换的次数大于k了，需要进行滑动处理，直到转换次数小于等于k\n","rawText":"countT=4 countF=1  result=T T F T T \n这个时候在进行红色区域循环时发现\ncountT=4 countF=2  result=T T F T T F\n这时转换的次数大于k了，需要进行滑动处理，直到转换次数小于等于k\n","textAlign":"left","verticalAlign":"top","containerId":null,"originalText":"countT=4 countF=1  result=T T F T T \n这个时候在进行红色区域循环时发现\ncountT=4 countF=2  result=T T F T T F\n这时转换的次数大于k了，需要进行滑动处理，直到转换次数小于等于k\n","autoResize":true,"lineHeight":1.25},{"type":"ellipse","version":105,"versionNonce":818026442,"index":"at","isDeleted":false,"id":"jypVWnO-zJ_6yLJmgqNOT","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":726.4770386346803,"y":81.09557711487878,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":49.23076923076928,"height":49,"seed":122395914,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"WBvKjTwJ"}],"updated":1725351400995,"link":null,"locked":false},{"type":"text","version":56,"versionNonce":889228938,"index":"au","isDeleted":false,"id":"WBvKjTwJ","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":741.6867178670115,"y":93.27146097580837,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":19,"height":25,"seed":140755914,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351400995,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"T","rawText":"T","textAlign":"center","verticalAlign":"middle","containerId":"jypVWnO-zJ_6yLJmgqNOT","originalText":"T","autoResize":true,"lineHeight":1.25},{"type":"ellipse","version":199,"versionNonce":2143432010,"index":"av","isDeleted":false,"id":"o27WwPOS0z9Fr1f9_2eh0","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":854.7123327523277,"y":78.15440064429038,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":47.69230769230785,"height":49,"seed":1305397142,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"n2S79WPJ"}],"updated":1725351400995,"link":null,"locked":false},{"type":"text","version":149,"versionNonce":643953674,"index":"aw","isDeleted":false,"id":"n2S79WPJ","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":871.6967095086485,"y":90.33028450521996,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":14,"height":25,"seed":922576086,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351400995,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"F","rawText":"F","textAlign":"center","verticalAlign":"middle","containerId":"o27WwPOS0z9Fr1f9_2eh0","originalText":"F","autoResize":true,"lineHeight":1.25},{"type":"ellipse","version":136,"versionNonce":1524294346,"index":"ax","isDeleted":false,"id":"yxILZeiaNcC42OzjXFUt3","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":794.350341802101,"y":81.02996625515016,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":49.23076923076928,"height":49,"seed":1288078282,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"jXQ6CyzK"}],"updated":1725351400995,"link":null,"locked":false},{"type":"text","version":88,"versionNonce":1472723338,"index":"ay","isDeleted":false,"id":"jXQ6CyzK","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":809.5600210344321,"y":93.20585011607974,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":19,"height":25,"seed":764902026,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351400995,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"T","rawText":"T","textAlign":"center","verticalAlign":"middle","containerId":"yxILZeiaNcC42OzjXFUt3","originalText":"T","autoResize":true,"lineHeight":1.25},{"type":"ellipse","version":192,"versionNonce":1281636426,"index":"b01","isDeleted":false,"id":"aVfZ1s3GDsR7WHjb-UOLR","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":913.1738712138656,"y":77.5005544904443,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":49.23076923076928,"height":49,"seed":1588332246,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"zlsrGQ2R"}],"updated":1725351400995,"link":null,"locked":false},{"type":"text","version":146,"versionNonce":1217044234,"index":"b02","isDeleted":false,"id":"zlsrGQ2R","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":928.3835504461968,"y":89.67643835137389,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":19,"height":25,"seed":275823638,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351400995,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"T","rawText":"T","textAlign":"center","verticalAlign":"middle","containerId":"aVfZ1s3GDsR7WHjb-UOLR","originalText":"T","autoResize":true,"lineHeight":1.25},{"type":"ellipse","version":230,"versionNonce":683027914,"index":"b03","isDeleted":false,"id":"dQ8FHOxxzP_a9jxvSK30v","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":971.9974006256302,"y":75.1476133139737,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":49.23076923076928,"height":49,"seed":393181450,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"Ufdao3kU"}],"updated":1725351400995,"link":null,"locked":false},{"type":"text","version":185,"versionNonce":33678474,"index":"b04","isDeleted":false,"id":"Ufdao3kU","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":987.2070798579614,"y":87.32349717490328,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":19,"height":25,"seed":972015562,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351400995,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"T","rawText":"T","textAlign":"center","verticalAlign":"middle","containerId":"dQ8FHOxxzP_a9jxvSK30v","originalText":"T","autoResize":true,"lineHeight":1.25},{"type":"ellipse","version":220,"versionNonce":237552458,"index":"b05","isDeleted":false,"id":"GztxJ3yGQWse1_mjB39G_","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":1032.7666313948616,"y":72.79467213750308,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":47.69230769230785,"height":49,"seed":1769342858,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"syy7lHBM"}],"updated":1725351400995,"link":null,"locked":false},{"type":"text","version":171,"versionNonce":394643978,"index":"b06","isDeleted":false,"id":"syy7lHBM","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":1049.7510081511825,"y":84.97055599843267,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":14,"height":25,"seed":1495303754,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351400995,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"F","rawText":"F","textAlign":"center","verticalAlign":"middle","containerId":"GztxJ3yGQWse1_mjB39G_","originalText":"F","autoResize":true,"lineHeight":1.25},{"type":"arrow","version":117,"versionNonce":1519792714,"index":"b07","isDeleted":false,"id":"PR1u401PJUcQFwlUUFqSA","fillStyle":"solid","strokeWidth":2,"strokeStyle":"dashed","roughness":1,"opacity":100,"angle":0,"x":754.2598440645447,"y":239.6476133139737,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":4.705882352941444,"height":94.11764705882365,"seed":162016534,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"oKM0XVCc"}],"updated":1725351421589,"link":null,"locked":false,"startBinding":null,"endBinding":null,"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[-4.705882352941444,-94.11764705882365]],"elbowed":false},{"type":"text","version":7,"versionNonce":1138304214,"index":"b08","isDeleted":false,"id":"oKM0XVCc","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":733.786915400281,"y":180.08878978456187,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":36.23997497558594,"height":25,"seed":484337034,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351368392,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"left","rawText":"left","textAlign":"center","verticalAlign":"middle","containerId":"PR1u401PJUcQFwlUUFqSA","originalText":"left","autoResize":true,"lineHeight":1.25},{"type":"arrow","version":249,"versionNonce":862019274,"index":"b0N","isDeleted":false,"id":"mrUJLs15nJGFGEIijgCkA","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":942.698758091694,"y":237.73628662465643,"strokeColor":"#e03131","backgroundColor":"transparent","width":4.705882352941444,"height":94.11764705882365,"seed":658485578,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"l7EDgS29"}],"updated":1725351795973,"link":null,"locked":false,"startBinding":null,"endBinding":null,"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[-4.705882352941444,-94.11764705882365]],"elbowed":false},{"type":"text","version":12,"versionNonce":583354198,"index":"b0O","isDeleted":false,"id":"l7EDgS29","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":922.2258294274303,"y":178.1774630952446,"strokeColor":"#e03131","backgroundColor":"transparent","width":36.23997497558594,"height":25,"seed":193918986,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351415829,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"left","rawText":"left","textAlign":"center","verticalAlign":"middle","containerId":"mrUJLs15nJGFGEIijgCkA","originalText":"left","autoResize":true,"lineHeight":1.25},{"type":"arrow","version":152,"versionNonce":1332170954,"index":"b0U","isDeleted":false,"id":"YrKAqm1wHiuCiNXOuata0","fillStyle":"solid","strokeWidth":2,"strokeStyle":"dashed","roughness":1,"opacity":100,"angle":0,"x":822.4951381821918,"y":241.3465804467786,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":4.705882352941444,"height":94.11764705882365,"seed":976332746,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"JrSth1sD"}],"updated":1725351806317,"link":null,"locked":false,"startBinding":null,"endBinding":null,"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[-4.705882352941444,-94.11764705882365]],"elbowed":false},{"type":"text","version":11,"versionNonce":1094064534,"index":"b0V","isDeleted":false,"id":"JrSth1sD","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":802.0222095179281,"y":181.78775691736678,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":36.23997497558594,"height":25,"seed":167648906,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351422330,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"left","rawText":"left","textAlign":"center","verticalAlign":"middle","containerId":"YrKAqm1wHiuCiNXOuata0","originalText":"left","autoResize":true,"lineHeight":1.25},{"type":"text","version":68,"versionNonce":901797910,"index":"b0d","isDeleted":false,"id":"9f1da3gj","fillStyle":"solid","strokeWidth":2,"strokeStyle":"dashed","roughness":1,"opacity":100,"angle":0,"x":726.0245499468974,"y":262.0005544904442,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":423.3798828125,"height":50,"seed":899979722,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351556081,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"当countF=1时，满足countT=2 result=T T F\n这个时候的长度为 right-left+1","rawText":"当countF=1时，满足countT=2 result=T T F\n这个时候的长度为 right-left+1","textAlign":"left","verticalAlign":"top","containerId":null,"originalText":"当countF=1时，满足countT=2 result=T T F\n这个时候的长度为 right-left+1","autoResize":true,"lineHeight":1.25},{"type":"arrow","version":264,"versionNonce":1296314390,"index":"b0e","isDeleted":false,"id":"DVHL--Ca_T-T3iQxUSHpu","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":1064.8480793586623,"y":232.62460620714168,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":4.705882352941444,"height":94.11764705882365,"seed":1062283338,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"1xGlJxvK"}],"updated":1725351507445,"link":null,"locked":false,"startBinding":null,"endBinding":null,"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[-4.705882352941444,-94.11764705882365]],"elbowed":false},{"type":"text","version":23,"versionNonce":1013384266,"index":"b0f","isDeleted":false,"id":"1xGlJxvK","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":1038.9851589341447,"y":173.06578267772986,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":47.01995849609375,"height":25,"seed":811175690,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351507446,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"right","rawText":"right","textAlign":"center","verticalAlign":"middle","containerId":"DVHL--Ca_T-T3iQxUSHpu","originalText":"right","autoResize":true,"lineHeight":1.25},{"type":"arrow","version":156,"versionNonce":1113767318,"index":"b0g","isDeleted":false,"id":"UOe_d_-TE6GwFkWvR8Sa5","fillStyle":"solid","strokeWidth":2,"strokeStyle":"dashed","roughness":1,"opacity":100,"angle":0,"x":883.6716087704269,"y":236.35917695239613,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":4.705882352941444,"height":94.11764705882365,"seed":436204182,"groupIds":[],"frameId":null,"roundness":{"type":2},"boundElements":[{"type":"text","id":"YOIJrkEg"}],"updated":1725351802129,"link":null,"locked":false,"startBinding":null,"endBinding":null,"lastCommittedPoint":null,"startArrowhead":null,"endArrowhead":"arrow","points":[[0,0],[-4.705882352941444,-94.11764705882365]],"elbowed":false},{"type":"text","version":14,"versionNonce":1185038154,"index":"b0h","isDeleted":false,"id":"YOIJrkEg","fillStyle":"solid","strokeWidth":2,"strokeStyle":"solid","roughness":1,"opacity":100,"angle":0,"x":863.1986801061632,"y":176.8003534229843,"strokeColor":"#1e1e1e","backgroundColor":"transparent","width":36.23997497558594,"height":25,"seed":1506881494,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725351800216,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"left","rawText":"left","textAlign":"center","verticalAlign":"middle","containerId":"UOe_d_-TE6GwFkWvR8Sa5","originalText":"left","autoResize":true,"lineHeight":1.25},{"type":"text","version":45,"versionNonce":1341225238,"index":"b0i","isDeleted":false,"id":"dr2QhYSo","fillStyle":"solid","strokeWidth":2,"strokeStyle":"dashed","roughness":1,"opacity":100,"angle":0,"x":721.2709946786365,"y":417.93596711703344,"strokeColor":"#e03131","backgroundColor":"transparent","width":758,"height":75,"seed":189234378,"groupIds":[],"frameId":null,"roundness":null,"boundElements":[],"updated":1725352023983,"link":null,"locked":false,"fontSize":20,"fontFamily":5,"text":"总结：\n这里的核心滑动思想是检查到了 窗口里面包含的转换次数不满足 则缩小窗口的左边界\n右边界一直扩张即可。","rawText":"总结：\n这里的核心滑动思想是检查到了 窗口里面包含的转换次数不满足 则缩小窗口的左边界\n右边界一直扩张即可。","textAlign":"left","verticalAlign":"top","containerId":null,"originalText":"总结：\n这里的核心滑动思想是检查到了 窗口里面包含的转换次数不满足 则缩小窗口的左边界\n右边界一直扩张即可。","autoResize":true,"lineHeight":1.25}],"appState":{"theme":"light","viewBackgroundColor":"#ffffff","currentItemStrokeColor":"#1e1e1e","currentItemBackgroundColor":"transparent","currentItemFillStyle":"solid","currentItemStrokeWidth":2,"currentItemStrokeStyle":"dashed","currentItemRoughness":1,"currentItemOpacity":100,"currentItemFontFamily":5,"currentItemFontSize":20,"currentItemTextAlign":"left","currentItemStartArrowhead":null,"currentItemEndArrowhead":"arrow","currentItemArrowType":"round","scrollX":1188.4510411222202,"scrollY":418.9022737883031,"zoom":{"value":0.5},"currentItemRoundness":"round","gridSize":20,"gridStep":5,"gridModeEnabled":false,"gridColor":{"Bold":"#C9C9C9","Regular":"#EDEDED"},"currentStrokeOptions":null,"frameRendering":{"enabled":true,"clip":true,"name":true,"outline":true},"objectsSnapModeEnabled":false,"activeTool":{"type":"selection","customType":null,"locked":false,"lastActiveTool":null}},"prevTextMode":"parsed","files":{}}
                    }),
                ),
            );
        };
        const excalidrawWrapper = document.getElementById("5cb76bfc1");
        const root = ReactDOM.createRoot(excalidrawWrapper);
        root.render(React.createElement(App));
    </script>

<p>[[Excalidraw&#x2F;2024考试的最大困扰度|2024考试的最大困扰度]]</p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法练习</tag>
      </tags>
  </entry>
  <entry>
    <title>3174. 清除数字</title>
    <url>/f687d5bb/</url>
    <content><![CDATA[<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jbGVhci1kaWdpdHMvZGVzY3JpcHRpb24vP2VudlR5cGU9ZGFpbHktcXVlc3Rpb24mZW52SWQ9MjAyNC0wOS0wNQ==">https://leetcode.cn/problems/clear-digits/description/?envType=daily-question&amp;envId=2024-09-05<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给你一个字符串 s 。</p>
<p>你的任务是重复以下操作删除 所有 数字字符：</p>
<p>删除 第一个数字字符 以及它左边 最近 的 非数字 字符。<br>请你返回删除所有数字字符以后剩下的字符串。</p>
<p>示例 1：</p>
<p>输入：s &#x3D; “abc”</p>
<p>输出：”abc”</p>
<p>解释：</p>
<p>字符串中没有数字。</p>
<p>示例 2：</p>
<p>输入：s &#x3D; “cb34”</p>
<p>输出：””</p>
<p>解释：</p>
<p>一开始，我们对 s[2] 执行操作，s 变为 “c4” 。</p>
<p>然后对 s[1] 执行操作，s 变为 “” 。</p>
<p>提示：</p>
<p>1 &lt;&#x3D; s.length &lt;&#x3D; 100<br>s 只包含小写英文字母和数字字符。<br>输入保证所有数字都可以按以上操作被删除。</p>
<h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">clearDigits</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>chars<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>  
    <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> integers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> chars<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">char</span> aChar <span class="token operator">=</span> chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  
        <span class="token keyword">if</span> <span class="token punctuation">(</span>aChar <span class="token operator">>=</span> <span class="token char">'0'</span> <span class="token operator">&amp;&amp;</span> aChar <span class="token operator">&lt;=</span> <span class="token char">'9'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
            temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>  
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>integers<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
                <span class="token class-name">Integer</span> integer <span class="token operator">=</span> integers<span class="token punctuation">.</span><span class="token function">removeFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                temp<span class="token punctuation">[</span>integer<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>  
            <span class="token punctuation">&#125;</span>  
        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>  
            temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> aChar <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span>  
            integers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">&#125;</span>  
    <span class="token punctuation">&#125;</span>  
    <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Solution3174</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clearDigits</span><span class="token punctuation">(</span><span class="token string">"ag3"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h1 id="额外补充"><a href="#额外补充" class="headerlink" title="额外补充"></a>额外补充</h1><p>&#x2F;&#x2F; todo优化代码 变的更快</p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法练习</tag>
      </tags>
  </entry>
  <entry>
    <title>3176. 求出最长好子序列 I</title>
    <url>/abd1696f/</url>
    <content><![CDATA[<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLXRoZS1tYXhpbXVtLWxlbmd0aC1vZi1hLWdvb2Qtc3Vic2VxdWVuY2UtaS9kZXNjcmlwdGlvbi8/ZW52VHlwZT1kYWlseS1xdWVzdGlvbiZlbnZJZD0yMDI0LTA5LTA2">https://leetcode.cn/problems/find-the-maximum-length-of-a-good-subsequence-i/description/?envType=daily-question&amp;envId=2024-09-06<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给你一个整数数组 <code>nums</code> 和一个 <strong>非负</strong> 整数 <code>k</code> 。如果一个整数序列 <code>seq</code> 满足在范围下标范围 <code>[0, seq.length - 2]</code> 中存在 <strong>不超过</strong> <code>k</code> 个下标 <code>i</code> 满足 <code>seq[i] != seq[i + 1]</code> ，那么我们称这个整数序列为 <strong>好</strong> 序列。</p>
<p>请你返回 <code>nums</code> 中 <strong>好</strong> </p>
<p>子序列</p>
<p> 的最长长度</p>
<p><strong>示例 1：</strong></p>
<p><strong>输入：</strong>nums &#x3D; [1,2,1,1], k &#x3D; 2</p>
<p><strong>输出：</strong>4</p>
<p><strong>解释：</strong></p>
<p>最长好子序列为 <code>[1,2,1,1,3]</code> 。</p>
<p><strong>示例 2：</strong></p>
<p><strong>输入：</strong>nums &#x3D; [1,2,3,4,5,1], k &#x3D; 0</p>
<p><strong>输出：</strong>2</p>
<p><strong>解释：</strong></p>
<p>最长好子序列为 <code>[1,1]</code> 。</p>
<p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= nums.length &lt;= 500</code></li>
<li><code>1 &lt;= nums[i] &lt;= 109</code></li>
<li><code>0 &lt;= k &lt;= min(nums.length, 25)</code></li>
</ul>
<h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maximumLength</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">int</span> seqLen <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> tempSeqLen <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">></span> k<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">int</span> next <span class="token operator">=</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                next <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">!=</span> nums<span class="token punctuation">[</span>next<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            index<span class="token operator">++</span><span class="token punctuation">;</span>
            tempSeqLen<span class="token operator">++</span><span class="token punctuation">;</span>
            index<span class="token operator">=</span>index<span class="token operator">%</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">return</span> tempSeqLen<span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        seqLen <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>tempSeqLen<span class="token punctuation">,</span> seqLen<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> seqLen<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">S3176</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">maximumLength</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 4  </span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">S3176</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">maximumLength</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h1 id="额外补充"><a href="#额外补充" class="headerlink" title="额外补充"></a>额外补充</h1><p>解答理解错误了，seq[i]!&#x3D;seq[i+1] 不是nums[i]!&#x3D;nums[i+1]</p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法练习</tag>
      </tags>
  </entry>
  <entry>
    <title>重命名神器Bulk Rename Utility</title>
    <url>/fe268b4f/</url>
    <content><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Add date&#x2F;time stamps, replace numbers, insert text, convert case, add auto-numbers, process folders and sub-folders….plus a whole lot more!<br>添加日期&#x2F;时间戳、替换数字、插入文本、转换大小写、添加自动编号、处理文件夹和子文件夹……还有更多！</p>
<ul>
<li><p><strong>Rename multiple files quickly</strong>, according to many flexible criteria. <span class="exturl" data-url="aHR0cHM6Ly93d3cuYnVsa3JlbmFtZXV0aWxpdHkuY28udWsvI2ZlYXR1cmVz">Learn More<i class="fa fa-external-link-alt"></i></span><br>  根据许多灵活的标准快速重命名多个文件。 了解更多信息</p>
</li>
<li><p><strong>Rename files in many ways</strong>: add, replace, insert text into file names. Convert case, add numbers. Remove or change file extensions.<br>  以多种方式重命名文件：添加、替换、在文件名中插入文本。转换大小写，添加数字。删除或更改文件扩展名。</p>
</li>
<li><p><strong>Check the detailed preview before renaming.<br>  重命名前请检查详细预览。</strong></p>
</li>
<li><p><strong>Rename photos</strong> using EXIF metadata (i.e. “Date Picture Taken”, “Resolution” and other information embedded in all JPG photo files) Rename your holiday pictures from a meaningless dsc1790.jpg to NewYork1.jpg in a flash.<br>  使用 EXIF 元数据重命名照片（即“拍摄日期”、“分辨率”和嵌入在所有 JPG 照片文件中的其他信息） 将您的假期照片从毫无意义的dsc1790.jpg重命名为NewYork1.jpg瞬间。</p>
</li>
<li><p><strong>Rename MP3 files</strong> using ID3 tags (a.k.a. MP3 ID3 tag renaming).<br>  使用 ID3 标签重命名 MP3 文件（a.k.a. MP3 ID3 标签重命名）。</p>
</li>
<li><p>Rename files using <strong>Windows File Properties</strong> (e.g. media video length, width, height, rate, publisher, etc).<br>  使用 Windows 文件属性重命名文件（例如媒体视频长度、宽度、高度、速率、出版商等）。</p>
</li>
<li><p>Change files’ creation and modification time stamps.<br>  更改文件的创建和修改时间戳。</p>
</li>
<li><p><strong>Easy to Install</strong>. <span class="exturl" data-url="aHR0cHM6Ly93d3cuYnVsa3JlbmFtZXV0aWxpdHkuY28udWsvRG93bmxvYWQucGhw">Download<i class="fa fa-external-link-alt"></i></span> and start renaming your files now!<br>  易于安装。 立即下载并开始重命名您的文件！</p>
</li>
</ul>
<h1 id="体验心得"><a href="#体验心得" class="headerlink" title="体验心得"></a>体验心得</h1><ol>
<li>不能对后缀名进行修改</li>
</ol>
]]></content>
      <categories>
        <category>win软件</category>
      </categories>
      <tags>
        <tag>效率工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Dropit</title>
    <url>/72fab0b8/</url>
    <content><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>官网：<span class="exturl" data-url="aHR0cDovL3d3dy5kcm9waXRwcm9qZWN0LmNvbS8=">http://www.dropitproject.com/<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><p>Currently DropIt allows to perform the following 21 actions on your files and folders:<br>目前，DropIt 允许对您的文件和文件夹执行以下 21 个操作：</p>
<ul>
<li><strong>Move</strong>: to move files&#x2F;folders to the defined destination folder (for example to <span class="exturl" data-url="aHR0cDovL3d3dy5kcm9waXRwcm9qZWN0LmNvbS9kb2t1d2lraS9kb2t1LnBocD9pZD1ob3d0bzpvcmdhbml6ZV9pbWFnZXNfYnlfZGF0ZV9hbmRfcHJvcGVydGllcw==">organize images by date and properties<i class="fa fa-external-link-alt"></i></span>).<br>  移动：将文件&#x2F;文件夹移动到定义的目标文件夹（例如，按日期和属性组织图像）。</li>
<li><strong>Copy</strong>: to copy files&#x2F;folders to the defined destination folder.<br>  复制：将文件&#x2F;文件夹复制到定义的目标文件夹。</li>
<li><strong>Compress</strong>: to compress files&#x2F;folders in one of the supported destination archive formats (<em>ZIP, 7Z, Self-Extracting EXE</em>).<br>  压缩：以受支持的目标存档格式之一（ZIP、7Z、自解压 EXE）压缩文件&#x2F;文件夹。</li>
<li><strong>Extract</strong>: to extract supported archives in the defined destination folder (<em>7Z, APM, ARJ, BZIP2, CAB, CHM, CPIO, DEB, DMG, EXE, FAT, FLV, GZIP, HFS, ISO, JAR, LHA, LZH, LZMA, MBR, MSI, MSLZ, NFTS, NSIS, ONEPKG, RAR, RPM, SMZIP, SQX, SWF, TAR, UDF, VHD, WIM, XAR, XZ, Z, ZIP</em>).<br>  提取：提取定义的目标文件夹（7Z、APM、ARJ、BZIP2、CAB、CHM、CPIO、DEB、DMG、EXE、FAT、FLV、GZIP、HFS、ISO、JAR、LHA、LZH、LZMA、MBR、MSI、MSLZ、NFTS、NSIS、ONEPKG、RAR、RPM、SMZIP、SQX、SWF、TAR、UDF、VHD、WIM、XAR、XZ、Z、ZIP）中支持的存档。</li>
<li><strong>Rename</strong>: to rename files&#x2F;folders with the defined new name (using abbreviations to customize it).<br>  重命名：使用定义的新名称重命名文件&#x2F;文件夹（使用缩写进行自定义）。</li>
<li><strong>Delete</strong>: to delete files&#x2F;folders with the defined method: <em>Directly Remove</em> (files are removed, but they could be restored using a recovery tool), <em>Safely Erase</em> (files are overwritten with the “DoD 3-pass” wiping method, to make them unrecoverable), <em>Send to Recycle Bin</em> (files are sent to recycle bin and are still available from there).<br>  删除：使用定义的方法删除文件&#x2F;文件夹：直接删除（删除文件，但可以使用恢复工具还原）、安全擦除（文件被“DoD 3-pass”擦除方法覆盖，使其无法恢复）、发送到回收站（文件被发送到回收站，并且仍然可以从那里使用）。</li>
<li><strong>Split</strong>: to split files&#x2F;folders in parts with a defined size.<br>  拆分：将文件&#x2F;文件夹拆分为具有定义大小的部分。</li>
<li><strong>Join</strong>: to recombine files&#x2F;folders previously split (automatically trying to load missing parts).<br>  加入：重新组合之前拆分的文件&#x2F;文件夹（自动尝试加载缺失的部分）。</li>
<li><strong>Encrypt</strong>: to encrypt files&#x2F;folders in the defined destination folder (to protect your personal data).<br>  加密：加密定义的目标文件夹中的文件&#x2F;文件夹（以保护您的个人数据）。</li>
<li><strong>Decrypt</strong>: to decrypt files&#x2F;folders in the defined destination folder (previously encrypted with DropIt).<br>  解密：解密定义的目标文件夹中的文件&#x2F;文件夹（以前使用 DropIt 加密）。</li>
<li><strong>Open With</strong>: to open files with the defined destination program (parameters supported).<br>  打开方式：使用定义的目标程序（支持的参数）打开文件。</li>
<li><strong>Print</strong>: to print files using default system applications based on file formats.<br>  打印：使用基于文件格式的默认系统应用程序打印文件。</li>
<li><strong>Upload</strong>: to upload files&#x2F;folders to a server using <em>FTP</em> or <em>SFTP protocols</em>.<br>  上传：使用FTP或SFTP协议将文件&#x2F;文件夹上传到服务器。</li>
<li><strong>Send by Mail</strong>: to attach files&#x2F;folders to a mail and send them using <em>SMTP protocol</em>.<br>  通过邮件发送：将文件&#x2F;文件夹附加到邮件并使用 SMTP 协议发送它们。</li>
<li><strong>Create Gallery</strong>: to create a image gallery in the destination folder (<em>HTML</em>). In particular you can create galleries with several themes like <span class="exturl" data-url="aHR0cDovL3d3dy5kcm9waXRwcm9qZWN0LmNvbS9hc3NldHMvZ2FsbGVyaWVzL0Jyb2NodXJlX0dhbGxlcnkvaW5kZXguaHRtbA==">Brochure<i class="fa fa-external-link-alt"></i></span>, <span class="exturl" data-url="aHR0cDovL3d3dy5kcm9waXRwcm9qZWN0LmNvbS9hc3NldHMvZ2FsbGVyaWVzL0NpcmNsZXNfR2FsbGVyeS9pbmRleC5odG1s">Circles<i class="fa fa-external-link-alt"></i></span>, <span class="exturl" data-url="aHR0cDovL3d3dy5kcm9waXRwcm9qZWN0LmNvbS9hc3NldHMvZ2FsbGVyaWVzL0RlZmF1bHRfR2FsbGVyeS9pbmRleC5odG1s">Default<i class="fa fa-external-link-alt"></i></span>, <span class="exturl" data-url="aHR0cDovL3d3dy5kcm9waXRwcm9qZWN0LmNvbS9hc3NldHMvZ2FsbGVyaWVzL1BpbGVfR2FsbGVyeS9pbmRleC5odG1s">Pile<i class="fa fa-external-link-alt"></i></span>, <span class="exturl" data-url="aHR0cDovL3d3dy5kcm9waXRwcm9qZWN0LmNvbS9hc3NldHMvZ2FsbGVyaWVzL1NxdWFyZUhlYWRzX0dhbGxlcnkvaW5kZXguaHRtbA==">SquareHeads<i class="fa fa-external-link-alt"></i></span> and many others.<br>  创建图库：在目标文件夹 （HTML） 中创建图库。特别是，您可以创建具有多个主题的画廊，例如 Brochure ， Circles ， Default ， Pile ， SquareHeads 等等。</li>
<li><strong>Create List</strong>: to create a list of files&#x2F;folders in one of the supported destination file formats (<em>HTML, PDF, XLS, TXT, CSV, XML</em>). In particular you can create HTML lists with several themes like <span class="exturl" data-url="aHR0cDovL3d3dy5kcm9waXRwcm9qZWN0LmNvbS9hc3NldHMvbGlzdHMvRHJvcEl0X0xpc3QuaHRtbCNBcnJvd2lzdGlj">Arrowistic<i class="fa fa-external-link-alt"></i></span>, <span class="exturl" data-url="aHR0cDovL3d3dy5kcm9waXRwcm9qZWN0LmNvbS9hc3NldHMvbGlzdHMvRHJvcEl0X0xpc3QuaHRtbCNDYXNhYmxhbmNh">Casablanca<i class="fa fa-external-link-alt"></i></span>, <span class="exturl" data-url="aHR0cDovL3d3dy5kcm9waXRwcm9qZWN0LmNvbS9hc3NldHMvbGlzdHMvRHJvcEl0X0xpc3QuaHRtbCNEZWVwR3JlZW4=">DeepGreen<i class="fa fa-external-link-alt"></i></span>, <span class="exturl" data-url="aHR0cDovL3d3dy5kcm9waXRwcm9qZWN0LmNvbS9hc3NldHMvbGlzdHMvRHJvcEl0X0xpc3QuaHRtbCNEZWZhdWx0">Default<i class="fa fa-external-link-alt"></i></span>, <span class="exturl" data-url="aHR0cDovL3d3dy5kcm9waXRwcm9qZWN0LmNvbS9hc3NldHMvbGlzdHMvRHJvcEl0X0xpc3QuaHRtbCNQcmVjaXNpb24=">Precision<i class="fa fa-external-link-alt"></i></span> and many others.<br>  创建列表：以支持的目标文件格式之一（HTML、PDF、XLS、TXT、CSV、XML）创建文件&#x2F;文件夹列表。特别是，您可以创建具有多个主题的 HTML 列表，例如 Arrowistic ， Casablanca ， DeepGreen ， Default ， Precision 等等。</li>
<li><strong>Create Playlist</strong>: to create a playlist of files in one of the supported destination file formats (<em>M3U, M3U8, PLS, WPL</em>).<br>  创建播放列表：以支持的目标文件格式之一（M3U、M3U8、PLS、WPL）创建文件播放列表。</li>
<li><strong>Create Shortcut</strong>: to create file&#x2F;folders shortcuts in the destination folder.<br>  创建快捷方式：在目标文件夹中创建文件&#x2F;文件夹快捷方式。</li>
<li><strong>Copy to Clipboard</strong>: to copy the desired file information to the system Clipboard.<br>  复制到剪贴板：将所需的文件信息复制到系统剪贴板。</li>
<li><strong>Change Properties</strong>: to change file date, time and attributes.<br>  更改属性：更改文件日期、时间和属性。</li>
<li><strong>Ignore</strong>: to ignore files&#x2F;folders and skip them during process.<br>  忽略：忽略文件&#x2F;文件夹并在处理过程中跳过它们。</li>
</ul>
]]></content>
      <categories>
        <category>win软件</category>
      </categories>
      <tags>
        <tag>效率工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Java版本管理</title>
    <url>/90b6346a/</url>
    <content><![CDATA[<h1 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h1><p>gitHub官网：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3lzdHlsZS9qdm1z">https://github.com/ystyle/jvms<i class="fa fa-external-link-alt"></i></span><br>gitHub下载地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3lzdHlsZS9qdm1zL3JlbGVhc2VzL2Rvd25sb2FkL3YyLjEuNi9qdm1zX3YyLjEuNl8zODYuemlw">https://github.com/ystyle/jvms/releases/download/v2.1.6/jvms_v2.1.6_386.zip<i class="fa fa-external-link-alt"></i></span></p>
<p>gitee：<span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20veXN0eWxlL2p2bXM/X2Zyb209Z2l0ZWVfc2VhcmNo">https://gitee.com/ystyle/jvms?_from=gitee_search<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><blockquote>
<p>参考的官网</p>
</blockquote>
<h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p>将解压的jvms.exe放入你自己的文件夹</p>
<h2 id="创建java版本集合"><a href="#创建java版本集合" class="headerlink" title="创建java版本集合"></a>创建java版本集合</h2><p>在jvms.exe同目录下，创建store文件夹</p>
<h2 id="java版本加入"><a href="#java版本加入" class="headerlink" title="java版本加入"></a>java版本加入</h2><p>将你已经下载好的java版本复制到 store里面</p>
<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>执行命令：jvms.exe init </p>
<h2 id="版本切换"><a href="#版本切换" class="headerlink" title="版本切换"></a>版本切换</h2><p>查看版本cmd运行命令：jvms list<br>切换版本cmd运行命令：jvms s 版本名称</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>开发必备</tag>
      </tags>
  </entry>
  <entry>
    <title>Snipaste</title>
    <url>/108dcde3/</url>
    <content><![CDATA[<h1 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h1><p>官网地址：<span class="exturl" data-url="aHR0cHM6Ly96aC5zbmlwYXN0ZS5jb20v">https://zh.snipaste.com/<i class="fa fa-external-link-alt"></i></span><br>64位beta版：<span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC5zbmlwYXN0ZS5jb20vYXJjaGl2ZXMvU25pcGFzdGUtMi44LjYtQmV0YS14NjQuemlw">https://download.snipaste.com/archives/Snipaste-2.8.6-Beta-x64.zip<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><p>截图F1<br>截图完成后按F3，进行贴图</p>
<ul>
<li>支持将剪贴板中的以下内容转为图片<ul>
<li>图像</li>
<li>纯文本</li>
<li>HTML 文本</li>
<li>颜色信息</li>
<li>图像文件：PNG, JPG, BMP, ICO, <strong>GIF</strong> 等</li>
</ul>
</li>
<li>图片窗口支持的操作<ul>
<li>缩放 (<code>鼠标滚轮</code> 或者 <code>+</code>&#x2F;<code>-</code>)<br>  对于 GIF 图片则是加速&#x2F;减速</li>
<li>旋转 (<code>1</code>&#x2F;<code>2</code>)<br>  对于 GIF 图片则是 上一帧&#x2F;下一帧</li>
<li>镜像翻转 (<code>3</code>&#x2F;<code>4</code>)</li>
<li>设置透明度 (<code>Ctrl</code> + <code>鼠标滚轮</code> 或者 <code>Ctrl</code> + <code>+</code>&#x2F;<code>-</code>)</li>
<li>鼠标穿透</li>
<li>缩略图 (<code>Shift</code> + <code>双击</code>)</li>
<li>图像标注 (<code>空格键</code>)</li>
<li>隐藏 (<code>左键双击</code>)</li>
<li>…</li>
</ul>
</li>
<li>取色 (<code>Alt</code>)</li>
<li>文件拖放</li>
<li><strong>贴图分组</strong></li>
<li><strong>自动备份、恢复</strong></li>
</ul>
]]></content>
      <categories>
        <category>win软件</category>
      </categories>
      <tags>
        <tag>效率工具</tag>
        <tag>新机必装</tag>
        <tag>截图工具</tag>
      </tags>
  </entry>
  <entry>
    <title>uTools</title>
    <url>/7343bbf/</url>
    <content><![CDATA[<video  controls>
    <source src="https://res.u-tools.cn/website/v4/utools-4-video.mp4" type="video/mp4">
</video>
]]></content>
      <categories>
        <category>win软件</category>
      </categories>
      <tags>
        <tag>效率工具</tag>
        <tag>新机必装</tag>
      </tags>
  </entry>
  <entry>
    <title>git自动管理</title>
    <url>/31aeb901/</url>
    <content><![CDATA[<h1 id="win项目自动管理"><a href="#win项目自动管理" class="headerlink" title="win项目自动管理"></a>win项目自动管理</h1><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NldmVuLWl0LXdvcmsvc2NoZWR1bGVkVGFza3M=">https://github.com/seven-it-work/scheduledTasks<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><h3 id="自动拉取"><a href="#自动拉取" class="headerlink" title="自动拉取"></a>自动拉取</h3><p>通过<a href="win_start.bat">win_start.bat</a>脚本进行自动拉取远端代码，并合并</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">@echo off

<span class="token builtin class-name">echo</span> <span class="token string">"执行auto_push_before.bat"</span>

<span class="token keyword">for</span> /f <span class="token string">"tokens=*"</span> %%a <span class="token keyword">in</span> <span class="token punctuation">(</span>project_path.txt<span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token punctuation">(</span>
    <span class="token builtin class-name">echo</span> <span class="token string">"拉取项目"</span> %%a
    start cmd /k %%a<span class="token string">"auto_push_before.bat"</span>
<span class="token punctuation">)</span>

pause<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="开机拉取"><a href="#开机拉取" class="headerlink" title="开机拉取"></a>开机拉取</h3><p>通过导入任务计划<a href="%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BDbat.xml">开机启动bat.xml</a>，再win启动时，进行自动运行<a href="win_start.bat">win_start.bat</a>从而实现开机拉取项目</p>
<h3 id="一键推送"><a href="#一键推送" class="headerlink" title="一键推送"></a>一键推送</h3><p>再管理多个项目时，可能会忘记代码的推送。直接运行<a href="project_push.bat">project_push.bat</a>脚本即可自动推送（脚本可以自己调整，进行构建等操作）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">@echo off

<span class="token builtin class-name">echo</span> <span class="token string">"执行push auto_push.bat"</span>

<span class="token keyword">for</span> /f <span class="token string">"tokens=*"</span> %%a <span class="token keyword">in</span> <span class="token punctuation">(</span>project_path.txt<span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token punctuation">(</span>
    <span class="token builtin class-name">echo</span> <span class="token string">"推送项目"</span> %%a
    start cmd /k %%a<span class="token string">"auto_push.bat"</span>
<span class="token punctuation">)</span>

pause<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h3 id="拉取本项目"><a href="#拉取本项目" class="headerlink" title="拉取本项目"></a>拉取本项目</h3><p>git clone <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NldmVuLWl0LXdvcmsvc2NoZWR1bGVkVGFza3MuZ2l0">https://github.com/seven-it-work/scheduledTasks.git<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/img.png"></p>
<h3 id="复制脚本"><a href="#复制脚本" class="headerlink" title="复制脚本"></a>复制脚本</h3><p>将脚本<a href="auto_push.bat">auto_push.bat</a>和<a href="auto_push_before.bat">auto_push_before.bat</a>复制到自己项目路径下（和.git同一个层级）<br><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/img2.png"></p>
<h3 id="添加项目地址"><a href="#添加项目地址" class="headerlink" title="添加项目地址"></a>添加项目地址</h3><p>将你的项目地址添加到<a href="project_path.txt">project_path.txt</a>中（必须\结尾，每个项目必须换行）</p>
<p><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/img3.png"></p>
<h3 id="运行脚本测试"><a href="#运行脚本测试" class="headerlink" title="运行脚本测试"></a>运行脚本测试</h3><p>…</p>
]]></content>
      <categories>
        <category>个人软件</category>
        <category>开源</category>
        <category>git</category>
      </categories>
      <tags>
        <tag>效率工具</tag>
        <tag>新机必装</tag>
      </tags>
  </entry>
  <entry>
    <title>Java 设计模式面试题</title>
    <url>/740f73fb/</url>
    <content><![CDATA[<blockquote>
<p>copyForm：<span class="exturl" data-url="aHR0cHM6Ly9kZGtrLmNvbS96aHVhbmxhbi90aWt1L2phdmFkZXNpZ24uaHRtbA==">https://ddkk.com/zhuanlan/tiku/javadesign.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="1-什么是设计模式"><a href="#1-什么是设计模式" class="headerlink" title="1.什么是设计模式"></a>1.什么是设计模式</h2><p>设计模式，是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。使用设计 模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性、程序的重用性。</p>
<h2 id="2-为什么要学习设计模式"><a href="#2-为什么要学习设计模式" class="headerlink" title="2.为什么要学习设计模式"></a>2.为什么要学习设计模式</h2><p>看懂源代码：如果你不懂设计模式去看Jdk、Spring、SpringMVC、IO等等等等的源码，你会很迷 茫，你会寸步难行</p>
<p>看看前辈的代码：你去个公司难道都是新项目让你接手？很有可能是接盘的，前辈的开发难道不用设计模式？</p>
<p>编写自己的理想中的好代码：我个人反正是这样的，对于我自己开发的项目我会很认真，我对他比 对我女朋友还好，把项目当成自己的儿子一样</p>
<h2 id="3-设计模式分类"><a href="#3-设计模式分类" class="headerlink" title="3.设计模式分类"></a>3.设计模式分类</h2><p><img src="https://ddkk.com/images/2023/11/14/1129/1699932592473.png" alt=" "></p>
<p>创建型模式，共五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。</p>
<p>结构型模式，共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享 元模式。</p>
<p>行为型模式，共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。</p>
<h2 id="4-设计模式的六大原则"><a href="#4-设计模式的六大原则" class="headerlink" title="4.设计模式的六大原则"></a>4.设计模式的六大原则</h2><p><img src="https://ddkk.com/images/2023/11/14/1129/1699932594393.png" alt=" "></p>
<p><strong>开放封闭原则（Open Close Principle）</strong></p>
<p>原则思想：尽量通过扩展软件实体来解决需求变化，而不是通过修改已有的代码来完成变化</p>
<p>描述：一个软件产品在生命周期内，都会发生变化，既然变化是一个既定的事实，我们就应该在设 计的时候尽量适应这些变化，以提高项目的稳定性和灵活性。</p>
<p>优点：单一原则告诉我们，每个类都有自己负责的职责，里氏替换原则不能破坏继承关系的体系。</p>
<p><strong>里氏代换原则（Liskov Substitution Principle）</strong></p>
<p>原则思想：使用的基类可以在任何地方使用继承的子类，完美的替换基类。</p>
<p>大概意思是：子类可以扩展父类的功能，但不能改变父类原有的功能。子类可以实现父类的抽象方 法，但不能覆盖父类的非抽象方法，子类中可以增加自己特有的方法。</p>
<p>优点：增加程序的健壮性，即使增加了子类，原有的子类还可以继续运行，互不影响。</p>
<p><strong>依赖倒转原则（Dependence Inversion Principle）</strong></p>
<p>依赖倒置原则的核心思想是面向接口编程.</p>
<p>依赖倒转原则要求我们在程序代码中传递参数时或在关联关系中，尽量引用层次高的抽象层类，</p>
<p>这个是开放封闭原则的基础，具体内容是：对接口编程，依赖于抽象而不依赖于具体。</p>
<p><strong>接口隔离原则（Interface Segregation Principle）</strong></p>
<p>这个原则的意思是：使用多个隔离的接口，比使用单个接口要好。还是一个降低类之间的耦合度的 意思，从这儿我们看出，其实设计模式就是一个软件的设计思想，从大型软件架构出发，为了升级 和维护方便。所以上文中多次出现：降低依赖，降低耦合。</p>
<p>例如：支付类的接口和订单类的接口，需要把这俩个类别的接口变成俩个隔离的接口</p>
<p><strong>迪米特法则（最少知道原则）（Demeter Principle）</strong></p>
<p>原则思想：一个对象应当对其他对象有尽可能少地了解，简称类间解耦</p>
<p>大概意思就是一个类尽量减少自己对其他对象的依赖，原则是低耦合，高内聚，只有使各个模块之间的耦合尽量的低，才能提高代码的复用率。</p>
<p>优点：低耦合，高内聚。</p>
<p><strong>单一职责原则（Principle of single responsibility）</strong></p>
<p>原则思想：一个方法只负责一件事情。</p>
<p>描述：单一职责原则很简单，一个方法 一个类只负责一个职责，各个职责的程序改动，不影响其 它程序。 这是常识，几乎所有程序员都会遵循这个原则。</p>
<p>优点：降低类和类的耦合，提高可读性，增加可维护性和可拓展性，降低可变性的风险。</p>
<h2 id="5-单例模式"><a href="#5-单例模式" class="headerlink" title="5.单例模式"></a>5.单例模式</h2><h3 id="1-什么是单例"><a href="#1-什么是单例" class="headerlink" title="1.什么是单例"></a>1.什么是单例</h3><ul>
<li>保证一个类只有一个实例，并且提供一个访问该全局访问点</li>
</ul>
<h3 id="2-那些地方用到了单例模式"><a href="#2-那些地方用到了单例模式" class="headerlink" title="2.那些地方用到了单例模式"></a>2.那些地方用到了单例模式</h3><p><strong>1、</strong> 网站的计数器，一般也是采用单例模式实现，否则难以同步；</p>
<p><strong>2、</strong> 应用程序的日志应用，一般都是单例模式实现，只有一个实例去操作才好，否则内容不好追加显； 示。</p>
<p><strong>3、</strong> 多线程的线程池的设计一般也是采用单例模式，因为线程池要方便对池中的线程进行控制；</p>
<p><strong>4、</strong> Windows的（任务管理器）就是很典型的单例模式，他不能打开俩个；</p>
<p><strong>5、</strong> windows的（回收站）也是典型的单例应用在整个系统运行过程中，回收站只维护一个实例；</p>
<h3 id="3-单例优缺点"><a href="#3-单例优缺点" class="headerlink" title="3.单例优缺点"></a>3.单例优缺点</h3><p><strong>优点：</strong></p>
<p><strong>1、</strong> 在单例模式中，活动的单例只有一个实例，对单例类的所有实例化得到的都是相同的一个实例这； 样就防止其它对象对自己的实例化，确保所有的对象都访问一个实例</p>
<p><strong>2、</strong> 单例模式具有一定的伸缩性，类自己来控制实例化进程，类就在改变实例化进程上有相应的伸缩； 性。</p>
<p><strong>3、</strong> 提供了对唯一实例的受控访问；</p>
<p><strong>4、</strong> 由于在系统内存中只存在一个对象，因此可以节约系统资源，当需要频繁创建和销毁的对象时单例； 模式无疑可以提高系统的性能。</p>
<p><strong>5、</strong> 允许可变数目的实例；</p>
<p><strong>6、</strong> 避免对共享资源的多重占用；</p>
<p><strong>缺点：</strong></p>
<p><strong>1、</strong> 不适用于变化的对象，如果同一类型的对象总是要在不同的用例场景发生变化，单例就会引起数据； 的错误，不能保存彼此的状态。</p>
<p><strong>2、</strong> 由于单利模式中没有抽象层，因此单例类的扩展有很大的困难；</p>
<p><strong>3、</strong> 单例类的职责过重，在一定程度上违背了“单一职责原则”；</p>
<p><strong>4、</strong> 滥用单例将带来一些负面问题，如为了节省资源将数据库连接池对象设计为的单例类，可能会导致； 共享连接池对象的程序过多而出现连接池溢出；如果实例化的对象长时间不被利用，系统会认为是 垃圾而被回收，这将导致对象状态的丢失。</p>
<h3 id="4-单例模式使用注意事项："><a href="#4-单例模式使用注意事项：" class="headerlink" title="4.单例模式使用注意事项："></a>4.单例模式使用注意事项：</h3><p><strong>1、</strong> 使用时不能用反射模式创建单例，否则会实例化一个新的对象；</p>
<p><strong>2、</strong> 使用懒单例模式时注意线程安全问题；</p>
<p><strong>3、</strong> 饿单例模式和懒单例模式构造方法都是私有的，因而是不能被继承的，有些单例模式可以被继承； （如登记式模式）</p>
<h3 id="5-单例防止反射漏洞攻击"><a href="#5-单例防止反射漏洞攻击" class="headerlink" title="5.单例防止反射漏洞攻击"></a>5.单例防止反射漏洞攻击</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


   <span class="token keyword">if</span> <span class="token punctuation">(</span>flag <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


       flag <span class="token operator">=</span> <span class="token operator">!</span>flag<span class="token punctuation">;</span>
   <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>


       <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"单例模式被侵犯！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="6-如何选择单例创建方式"><a href="#6-如何选择单例创建方式" class="headerlink" title="6.如何选择单例创建方式"></a>6.如何选择单例创建方式</h3><p>如果不需要延迟加载单例，可以使用枚举或者饿汉式，相对来说枚举性好于饿汉式。 如果需要延迟加载，可以使用静态内部类或者懒汉式，相对来说静态内部类好于懒韩式。 最好使用饿汉式</p>
<h3 id="7-单例创建方式"><a href="#7-单例创建方式" class="headerlink" title="7.单例创建方式"></a>7.单例创建方式</h3><p><strong>（主要使用懒汉和懒汉式）</strong></p>
<p><strong>1、</strong> 饿汉式:类初始化时,会立即加载该对象，线程天生安全,调用效率高；</p>
<p><strong>2、</strong> 懒汉式:类初始化时,不会初始化该对象,真正需要使用的时候才会创建该对象,具备懒加载功能；</p>
<p><strong>3、</strong> 静态内部方式:结合了懒汉式和饿汉式各自的优点，真正需要对象的时候才会加载，加载类是线程； 安全的。</p>
<p><strong>4、</strong> 枚举单例:使用枚举实现单例模式优点:实现简单、调用效率高，枚举本身就是单例，由jvm从根本； 上提供保障!避免通过反射和反序列化的漏洞， 缺点没有延迟加载。</p>
<p><strong>5、</strong> 双重检测锁方式(因为JVM本质重排序的原因，可能会初始化多次，不推荐使用)；</p>
<p><strong>6、</strong> 饿汉式:类初始化时,会立即加载该对象，线程天生安全,调用效率高；</p>
<p>懒汉式；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//饿汉式</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo1</span> <span class="token punctuation">&#123;</span>


	<span class="token comment">// 类初始化时,会立即加载该对象，线程安全,调用效率高</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Demo1</span> demo1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Demo1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">Demo1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"私有Demo1构造参数初始化"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Demo1</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">return</span> demo1<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">Demo1</span> s1 <span class="token operator">=</span> <span class="token class-name">Demo1</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Demo1</span> s2 <span class="token operator">=</span> <span class="token class-name">Demo1</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s1 <span class="token operator">==</span> s2<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>懒汉式:类初始化时,不会初始化该对象,真正需要使用的时候才会创建该对象,具备懒加载功能；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//懒汉式</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo2</span> <span class="token punctuation">&#123;</span>


	<span class="token comment">//类初始化时，不会初始化该对象，真正需要使用的时候才会创建该对象。</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Demo2</span> demo2<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">Demo2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"私有Demo2构造参数初始化"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>

	<span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">static</span> <span class="token class-name">Demo2</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">if</span> <span class="token punctuation">(</span>demo2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


			demo2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Demo2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
		<span class="token keyword">return</span> demo2<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">Demo2</span> s1 <span class="token operator">=</span> <span class="token class-name">Demo2</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Demo2</span> s2 <span class="token operator">=</span> <span class="token class-name">Demo2</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s1 <span class="token operator">==</span> s2<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>静态内部类；</p>
<p>静态内部方式:结合了懒汉式和饿汉式各自的优点，真正需要对象的时候才会加载，加载类是线程安全的。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
	<span class="token comment">// 静态内部类方式</span>
	<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo3</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">private</span> <span class="token class-name">Demo3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"私有Demo3构造参数初始化"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">SingletonClassInstance</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Demo3</span> <span class="token constant">DEMO_3</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Demo3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>

	<span class="token comment">// 方法没有同步</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Demo3</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">return</span> <span class="token class-name">SingletonClassInstance</span><span class="token punctuation">.</span><span class="token constant">DEMO_3</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">Demo3</span> s1 <span class="token operator">=</span> <span class="token class-name">Demo3</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Demo3</span> s2 <span class="token operator">=</span> <span class="token class-name">Demo3</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s1 <span class="token operator">==</span> s2<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>枚举单例式；</p>
<p><strong>1、</strong> 枚举单例:使用枚举实现单例模式优点:实现简单、调用效率高，枚举本身就是单例，由jvm从根本上提供保障!避免通过反射和反序列化的漏洞， 缺点没有延迟加载。</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo4</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Demo4</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">return</span> <span class="token class-name">Demo</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">Demo4</span> s1 <span class="token operator">=</span> <span class="token class-name">Demo4</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Demo4</span> s2 <span class="token operator">=</span> <span class="token class-name">Demo4</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s1 <span class="token operator">==</span> s2<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>

	<span class="token comment">//定义枚举</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">enum</span> <span class="token class-name">Demo</span> <span class="token punctuation">&#123;</span>


		<span class="token constant">INSTANCE</span><span class="token punctuation">;</span>
		<span class="token comment">// 枚举元素为单例</span>
		<span class="token keyword">private</span> <span class="token class-name">Demo4</span> demo4<span class="token punctuation">;</span>
		<span class="token keyword">private</span> <span class="token class-name">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"枚举Demo私有构造参数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			demo4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Demo4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
		<span class="token keyword">public</span> <span class="token class-name">Demo4</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


			<span class="token keyword">return</span> demo4<span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>5、</strong> 双重检测锁方式；</p>
<p><strong>1、</strong> 双重检测锁方式(因为JVM本质重排序的原因，可能会初始化多次，不推荐使用)；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//双重检测锁方式</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo5</span> <span class="token punctuation">&#123;</span>



	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Demo5</span> demo5<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">Demo5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"私有Demo4构造参数初始化"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Demo5</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">if</span> <span class="token punctuation">(</span>demo5 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


			<span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token class-name">Demo5</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


				<span class="token keyword">if</span> <span class="token punctuation">(</span>demo5 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


					demo5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Demo5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">&#125;</span>
			<span class="token punctuation">&#125;</span>
		<span class="token punctuation">&#125;</span>
		<span class="token keyword">return</span> demo5<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">Demo5</span> s1 <span class="token operator">=</span> <span class="token class-name">Demo5</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Demo5</span> s2 <span class="token operator">=</span> <span class="token class-name">Demo5</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s1 <span class="token operator">==</span> s2<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="6-工厂模式"><a href="#6-工厂模式" class="headerlink" title="6.工厂模式"></a>6.工厂模式</h2><h3 id="1-什么是工厂模式"><a href="#1-什么是工厂模式" class="headerlink" title="1.什么是工厂模式"></a>1.什么是工厂模式</h3><p>它提供了一种创建对象的最佳方式。在工厂模式中，我们在创建对象时不会对客户端暴露创建逻 辑，并且是通过使用一个共同的接口来指向新创建的对象。实现了创建者和调用者分离，工厂模式 分为简单工厂、工厂方法、抽象工厂模式</p>
<h3 id="2-工厂模式好处"><a href="#2-工厂模式好处" class="headerlink" title="2.工厂模式好处"></a>2.工厂模式好处</h3><ul>
<li>工厂模式是我们最常用的实例化对象模式了，是用工厂方法代替new操作的一种模式。</li>
<li>利用工厂模式可以降低程序的耦合性，为后期的维护修改提供了很大的便利。</li>
<li>将选择实现类、创建对象统一管理和控制。从而将调用者跟我们的实现类解耦。</li>
</ul>
<h3 id="3-为什么要学习工厂设计模式"><a href="#3-为什么要学习工厂设计模式" class="headerlink" title="3.为什么要学习工厂设计模式"></a>3.为什么要学习工厂设计模式</h3><p>不知道你们面试题问到过源码没有，你知道Spring的源码吗，MyBatis的源码吗，等等等 如果你想 学习很多框架的源码，或者你想自己开发自己的框架，就必须先掌握设计模式（工厂设计模式用的 是非常非常广泛的）</p>
<h3 id="4-Spring开发中的工厂设计模式"><a href="#4-Spring开发中的工厂设计模式" class="headerlink" title="4.Spring开发中的工厂设计模式"></a>4.Spring开发中的工厂设计模式</h3><p><strong>1.Spring IOC</strong></p>
<ul>
<li>看过Spring源码就知道，在Spring IOC容器创建bean的过程是使用了工厂设计模式</li>
<li>Spring中无论是通过xml配置还是通过配置类还是注解进行创建bean，大部分都是通过简单工厂 来进行创建的。</li>
<li>当容器拿到了beanName和class类型后，动态的通过反射创建具体的某个对象，最后将创建的对象放到Map中。</li>
</ul>
<p><strong>2.为什么Spring IOC要使用工厂设计模式创建Bean呢</strong></p>
<ul>
<li>在实际开发中，如果我们A对象调用B，B调用C，C调用D的话我们程序的耦合性就会变高。（耦合 大致分为类与类之间的依赖，方法与方法之间的依赖。）</li>
<li>在很久以前的三层架构编程时，都是控制层调用业务层，业务层调用数据访问层时，都是是直接 new对象，耦合性大大提升，代码重复量很高，对象满天飞</li>
<li>为了避免这种情况，Spring使用工厂模式编程，写一个工厂，由工厂创建Bean，以后我们如果要 对象就直接管工厂要就可以，剩下的事情不归我们管了。Spring IOC容器的工厂中有个静态的Map集合，是为了让工厂符合单例设计模式，即每个对象只生产一次，生产出对象后就存入到 Map集合中，保证了实例不会重复影响程序效率。</li>
</ul>
<h2 id="5-工厂模式分类"><a href="#5-工厂模式分类" class="headerlink" title="5.工厂模式分类"></a>5.工厂模式分类</h2><p>工厂模式分为简单工厂、工厂方法、抽象工厂模式</p>
<blockquote>
<p>简单工厂 ：用来生产同一等级结构中的任意产品。（不支持拓展增加产品） 工厂方法 ：用来生产同一等级结构中的固定产品。（支持拓展增加产品） 抽象工厂 ：用来生产不同产品族的全部产品。（不支持拓展增加产品；支持增加产品族）</p>
</blockquote>
<p>我下面来使用代码演示一下：</p>
<h3 id="5-1-简单工厂模式"><a href="#5-1-简单工厂模式" class="headerlink" title="5.1 简单工厂模式"></a>5.1 简单工厂模式</h3><p><strong>什么是简单工厂模式</strong></p>
<ul>
<li>简单工厂模式相当于是一个工厂中有各种产品，创建在一个类中，客户无需知道具体产品的名称， 只需要知道产品类所对应的参数即可。但是工厂的职责过重，而且当类型过多时不利于系统的扩展 维护。</li>
</ul>
<p><strong>代码演示：</strong></p>
<p><strong>1、</strong> 创建工厂；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Car</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>1、</strong> 创建工厂的产品（宝马）；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Bmw</span> <span class="token keyword">implements</span> <span class="token class-name">Car</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我是宝马汽车..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>1、</strong> 创建工另外一种产品（奥迪）；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AoDi</span> <span class="token keyword">implements</span> <span class="token class-name">Car</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我是奥迪汽车.."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>1、</strong> 创建核心工厂类，由他决定具体调用哪产品；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CarFactory</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Car</span> <span class="token function">createCar</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


			<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"奥迪"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>


			<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AoDi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"宝马"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>


			<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Bmw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
		<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>1、</strong> 演示创建工厂的具体实例；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client01</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">Car</span> aodi <span class="token operator">=</span><span class="token class-name">CarFactory</span><span class="token punctuation">.</span><span class="token function">createCar</span><span class="token punctuation">(</span><span class="token string">"奥迪"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Car</span> bmw <span class="token operator">=</span><span class="token class-name">CarFactory</span><span class="token punctuation">.</span><span class="token function">createCar</span><span class="token punctuation">(</span><span class="token string">"宝马"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		aodi<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		bmw<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>单工厂的优点&#x2F;缺点</strong></p>
<ul>
<li>优点：简单工厂模式能够根据外界给定的信息，决定究竟应该创建哪个具体类的对象。明确区分了 各自的职责和权力，有利于整个软件体系结构的优化。</li>
<li>缺点：很明显工厂类集中了所有实例的创建逻辑，容易违反GRASPR的高内聚的责任分配原则</li>
</ul>
<h3 id="5-2-工厂方法模式"><a href="#5-2-工厂方法模式" class="headerlink" title="5.2 工厂方法模式"></a>5.2 工厂方法模式</h3><p><strong>什么是工厂方法模式</strong></p>
<p>工厂方法模式Factory Method，又称多态性工厂模式。在工厂方法模式中，核心的工厂类不再负 责所有的产品的创建，而是将具体创建的工作交给子类去做。该核心类成为一个抽象工厂角色，仅负责给出具体工厂子类必须实现的接口，而不接触哪一个产品类应当被实例化这种细节</p>
<p><strong>代码演示：</strong></p>
<p><strong>1、</strong> 创建工厂；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Car</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>1、</strong> 创建工厂方法调用接口（所有的产品需要new出来必须继承他来实现方法）；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CarFactory</span> <span class="token punctuation">&#123;</span>


	<span class="token class-name">Car</span> <span class="token function">createCar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 创建工厂的产品（奥迪）；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AoDi</span> <span class="token keyword">implements</span> <span class="token class-name">Car</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我是奥迪汽车.."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>1、</strong> 创建工厂另外一种产品（宝马）；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Bmw</span> <span class="token keyword">implements</span> <span class="token class-name">Car</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我是宝马汽车..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>1、</strong> 创建工厂方法调用接口的实例（奥迪）；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AoDiFactory</span> <span class="token keyword">implements</span> <span class="token class-name">CarFactory</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token class-name">Car</span> <span class="token function">createCar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AoDi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>1、</strong> 创建工厂方法调用接口的实例（宝马）；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BmwFactory</span> <span class="token keyword">implements</span> <span class="token class-name">CarFactory</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token class-name">Car</span> <span class="token function">createCar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Bmw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>1、</strong> 演示创建工厂的具体实例；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">Car</span> aodi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AoDiFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createCar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Car</span> jili <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BmwFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createCar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		aodi<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		jili<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h3 id="5-3-抽象工厂模式"><a href="#5-3-抽象工厂模式" class="headerlink" title="5.3 抽象工厂模式"></a>5.3 抽象工厂模式</h3><p><strong>什么是抽象工厂模式</strong></p>
<ul>
<li>抽象工厂简单地说是工厂的工厂，抽象工厂可以创建具体工厂，由具体工厂来产生具体产品。</li>
</ul>
<p>代码演示：</p>
<p><strong>1、</strong> 创建第一个子工厂，及实现类；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//汽车</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Car</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">class</span> <span class="token class-name">CarA</span> <span class="token keyword">implements</span> <span class="token class-name">Car</span><span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"宝马"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">class</span> <span class="token class-name">CarB</span> <span class="token keyword">implements</span> <span class="token class-name">Car</span><span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"摩拜"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>1、</strong> 创建第二个子工厂，及实现类；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//发动机</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Engine</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">class</span> <span class="token class-name">EngineA</span> <span class="token keyword">implements</span> <span class="token class-name">Engine</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"转的快!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">class</span> <span class="token class-name">EngineB</span> <span class="token keyword">implements</span> <span class="token class-name">Engine</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"转的慢!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>1、</strong> 创建一个总工厂，及实现类（由总工厂的实现类决定调用那个工厂的那个实例）；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TotalFactory</span> <span class="token punctuation">&#123;</span>


	<span class="token comment">// 创建汽车</span>
	<span class="token class-name">Car</span> <span class="token function">createChair</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 创建发动机</span>
	<span class="token class-name">Engine</span> <span class="token function">createEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">//总工厂实现类，由他决定调用哪个工厂的那个实例</span>
<span class="token keyword">class</span> <span class="token class-name">TotalFactoryReally</span> <span class="token keyword">implements</span> <span class="token class-name">TotalFactory</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token class-name">Engine</span> <span class="token function">createEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">EngineA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">public</span> <span class="token class-name">Car</span> <span class="token function">createChair</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CarA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 运行测试；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">TotalFactory</span> totalFactory2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TotalFactoryReally</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Car</span> car <span class="token operator">=</span> totalFactory2<span class="token punctuation">.</span><span class="token function">createChair</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		car<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">TotalFactory</span> totalFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TotalFactoryReally</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Engine</span> engine <span class="token operator">=</span> totalFactory<span class="token punctuation">.</span><span class="token function">createEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		engine<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="7-代理模式"><a href="#7-代理模式" class="headerlink" title="7.代理模式"></a>7.代理模式</h2><h3 id="1-什么是代理模式"><a href="#1-什么是代理模式" class="headerlink" title="1.什么是代理模式"></a>1.什么是代理模式</h3><ul>
<li>通过代理控制对象的访问，可以在这个对象调用方法之前、调用方法之后去处理&#x2F;添加新的功能。(也就是AO的P微实现)</li>
<li>代理在原有代码乃至原业务流程都不修改的情况下，直接在业务流程中切入新代码，增加新功能， 这也和Spring的（面向切面编程）很相似</li>
</ul>
<h3 id="2-代理模式应用场景"><a href="#2-代理模式应用场景" class="headerlink" title="2.代理模式应用场景"></a>2.代理模式应用场景</h3><ul>
<li>Spring AOP、日志打印、异常处理、事务控制、权限控制等</li>
</ul>
<h3 id="3-代理的分类"><a href="#3-代理的分类" class="headerlink" title="3.代理的分类"></a>3.代理的分类</h3><ul>
<li>静态代理(静态定义代理类)</li>
<li>动态代理(动态生成代理类，也称为Jdk自带动态代理)</li>
<li>Cglib 、javaassist（字节码操作库）</li>
</ul>
<h3 id="4-三种代理的区别"><a href="#4-三种代理的区别" class="headerlink" title="4.三种代理的区别"></a>4.三种代理的区别</h3><p><strong>1、</strong> 静态代理：简单代理模式，是动态代理的理论基础常见使用在代理模式； <strong>2、</strong> jdk动态代理：使用反射完成代理需要有顶层接口才能使用，常见是mybatis的mapper文件是代理。 <strong>3、</strong> cglib动态代理：也是使用反射完成代理，可以直接代理类（jdk动态代理不行），使用字节码技术，不能对 final类进行继承。（需要导入jar包）</p>
<h3 id="5-用代码演示三种代理"><a href="#5-用代码演示三种代理" class="headerlink" title="5.用代码演示三种代理"></a>5.用代码演示三种代理</h3><h4 id="5-1-静态代理"><a href="#5-1-静态代理" class="headerlink" title="5.1 静态代理"></a>5.1 静态代理</h4><p><strong>什么是静态代理</strong></p>
<p>由程序员创建或工具生成代理类的源码，再编译代理类。所谓静态也就是在程序运行前就已经存在 代理类的字节码文件，代理类和委托类的关系在运行前就确定了。</p>
<p><strong>代码演示：</strong></p>
<p>我有一段这样的代码：（如何能在不修改UserDao接口类的情况下开事务和关闭事务呢）</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//接口类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDao</span><span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"保存数据方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//运行测试类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">UserDao</span> userDao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		userDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>修改代码，添加代理类</strong></p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//代理类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDaoProxy</span> <span class="token keyword">extends</span> <span class="token class-name">UserDao</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">private</span> <span class="token class-name">UserDao</span> userDao<span class="token punctuation">;</span>
	<span class="token keyword">public</span> <span class="token class-name">UserDaoProxy</span><span class="token punctuation">(</span><span class="token class-name">UserDao</span> userDao<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">this</span><span class="token punctuation">.</span>userDao <span class="token operator">=</span> userDao<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"开启事物..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	userDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"关闭事物..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//添加完静态代理的测试类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">UserDao</span> userDao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">UserDaoProxy</span> userDaoProxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserDaoProxy</span><span class="token punctuation">(</span>userDao<span class="token punctuation">)</span><span class="token punctuation">;</span>
		userDaoProxy<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>缺点：每个需要代理的对象都需要自己重复编写代理，很不舒服</p>
<p>优点：但是可以面相实际对象或者是接口的方式实现代理</p>
<h4 id="5-2-动态代理"><a href="#5-2-动态代理" class="headerlink" title="5.2 动态代理"></a>5.2 动态代理</h4><p><strong>什么是动态代理</strong></p>
<ul>
<li>动态代理也叫做，JDK代理、接口代理。</li>
<li>动态代理的对象，是利用JDK的API，动态的在内存中构建代理对象（是根据被代理的接口来动态生成代理类的class文件，并加载运行的过程），这就叫动态代理</li>
</ul>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//接口</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserDao</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//接口实现类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDaoImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserDao</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"保存数据方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>下面是代理类，可重复使用，不像静态代理那样要自己重复编写代理</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">InvocationHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span>
<span class="token comment">// 每次生成动态代理类对象时,实现了InvocationHandler接口的调用处理器对象</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InvocationHandlerImpl</span> <span class="token keyword">implements</span> <span class="token class-name">InvocationHandler</span> <span class="token punctuation">&#123;</span>


	<span class="token comment">// 这其实业务实现类对象，用来调用具体的业务方法</span>
	<span class="token keyword">private</span> <span class="token class-name">Object</span> target<span class="token punctuation">;</span>
	<span class="token comment">// 通过构造函数传入目标对象</span>
	<span class="token keyword">public</span> <span class="token class-name">InvocationHandlerImpl</span><span class="token punctuation">(</span><span class="token class-name">Object</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">this</span><span class="token punctuation">.</span>target <span class="token operator">=</span> target<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token comment">//动态代理实际运行的代理方法</span>
	<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"调用开始处理"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//下面invoke()方法是以反射的方式来创建对象，第一个参数是要创建的对象，第二个是构成方法的参数，由第二个参数来决定创建对象使用哪个构造方法</span>
		<span class="token class-name">Object</span> result <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"调用结束处理"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> result<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>&#x2F;&#x2F;利用动态代理使用代理方法</li>
</ul>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Proxy</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token comment">// 被代理对象</span>
		<span class="token class-name">UserDao</span> userDaoImpl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserDaoImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">InvocationHandlerImpl</span> invocationHandlerImpl <span class="token operator">=</span> <span class="token keyword">new</span>
		<span class="token class-name">InvocationHandlerImpl</span><span class="token punctuation">(</span>userDaoImpl<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//类加载器</span>
		<span class="token class-name">ClassLoader</span> loader <span class="token operator">=</span> userDaoImpl<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">></span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> interfaces <span class="token operator">=</span> userDaoImpl<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 主要装载器、一组接口及调用处理动态代理实例</span>
		<span class="token class-name">UserDao</span> newProxyInstance <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UserDao</span><span class="token punctuation">)</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>loader<span class="token punctuation">,</span>
		interfaces<span class="token punctuation">,</span> invocationHandlerImpl<span class="token punctuation">)</span><span class="token punctuation">;</span>
		newProxyInstance<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li>缺点：必须是面向接口，目标业务类必须实现接口</li>
<li>优点：不用关心代理类，只需要在运行阶段才指定代理哪一个对象</li>
</ul>
<h4 id="5-3-CGLIB动态代理"><a href="#5-3-CGLIB动态代理" class="headerlink" title="5.3.CGLIB动态代理"></a>5.3.CGLIB动态代理</h4><p><strong>CGLIB动态代理原理：</strong></p>
<ul>
<li>利用asm开源包，对代理对象类的class文件加载进来，通过修改其字节码生成子类来处理。</li>
</ul>
<p><strong>什么是CGLIB动态代理</strong></p>
<ul>
<li>CGLIB动态代理和jdk代理一样，使用反射完成代理，不同的是他可以直接代理类（jdk动态代理不 行，他必须目标业务类必须实现接口），CGLIB动态代理底层使用字节码技术，CGLIB动态代理不 能对 final类进行继承。（CGLIB动态代理需要导入jar包）</li>
</ul>
<p><strong>代码演示：</strong></p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//接口</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserDao</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//接口实现类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDaoImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserDao</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"保存数据方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span></span><span class="token class-name">Enhancer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span></span><span class="token class-name">MethodInterceptor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cglib<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span></span><span class="token class-name">MethodProxy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span>
<span class="token comment">//代理主要类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CglibProxy</span> <span class="token keyword">implements</span> <span class="token class-name">MethodInterceptor</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">private</span> <span class="token class-name">Object</span> targetObject<span class="token punctuation">;</span>
	<span class="token comment">// 这里的目标类型为Object，则可以接受任意一种参数作为被代理类，实现了动态代理</span>
	<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token class-name">Object</span> target<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token comment">// 设置需要创建子类的类</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>targetObject <span class="token operator">=</span> target<span class="token punctuation">;</span>
		<span class="token class-name">Enhancer</span> enhancer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Enhancer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		enhancer<span class="token punctuation">.</span><span class="token function">setSuperclass</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		enhancer<span class="token punctuation">.</span><span class="token function">setCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> enhancer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token comment">//代理实际方法</span>
	<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">intercept</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">,</span> <span class="token class-name">MethodProxy</span> proxy<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"开启事物"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Object</span> result <span class="token operator">=</span> proxy<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>targetObject<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"关闭事物"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 返回代理对象</span>
		<span class="token keyword">return</span> result<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//测试CGLIB动态代理</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">CglibProxy</span> cglibProxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CglibProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">UserDao</span> userDao <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UserDao</span><span class="token punctuation">)</span> cglibProxy<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserDaoImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		userDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h2 id="8-建造者模式"><a href="#8-建造者模式" class="headerlink" title="8.建造者模式"></a>8.建造者模式</h2><h3 id="1-什么是建造者模式"><a href="#1-什么是建造者模式" class="headerlink" title="1.什么是建造者模式"></a>1.什么是建造者模式</h3><ul>
<li>建造者模式：是将一个复杂的对象的构建与它的表示分离，使得同样的构建过程可以创建不同的方 式进行创建。</li>
<li>工厂类模式是提供的是创建单个类的产品</li>
<li>而建造者模式则是将各种产品集中起来进行管理，用来具有不同的属性的产品</li>
</ul>
<p><strong>建造者模式通常包括下面几个角色：</strong></p>
<p><strong>1、</strong> uilder：给出一个抽象接口，以规范产品对象的各个组成成分的建造这个接口规定要实现复杂对； 象的哪些部分的创建，并不涉及具体的对象部件的创建。 <strong>2、</strong> ConcreteBuilder：实现Builder接口，针对不同的商业逻辑，具体化复杂对象的各部分的创建； 在建造过程完成后，提供产品的实例。 <strong>3、</strong> Director：调用具体建造者来创建复杂对象的各个部分，在指导者中不涉及具体产品的信息，只负； 责保证对象各部分完整创建或按某种顺序创建。 <strong>4、</strong> Product：要创建的复杂对象；</p>
<h3 id="2-建造者模式的使用场景"><a href="#2-建造者模式的使用场景" class="headerlink" title="2.建造者模式的使用场景"></a>2.建造者模式的使用场景</h3><p><strong>使用场景：</strong></p>
<p><strong>1、</strong> 需要生成的对象具有复杂的内部结构； <strong>2、</strong> 需要生成的对象内部属性本身相互依赖；</p>
<ul>
<li>与工厂模式的区别是：建造者模式更加关注与零件装配的顺序。</li>
<li>JAVA 中的 StringBuilder就是建造者模式创建的，他把一个单个字符的char数组组合起来</li>
<li>Spring不是建造者模式，它提供的操作应该是对于字符串本身的一些操作，而不是创建或改变一个 字符串。</li>
</ul>
<h3 id="3-代码案例"><a href="#3-代码案例" class="headerlink" title="3.代码案例"></a>3.代码案例</h3><p><strong>1、</strong> 建立一个装备对象Arms；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//装备类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Arms</span> <span class="token punctuation">&#123;</span>


	<span class="token comment">//头盔</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> helmet<span class="token punctuation">;</span>
	<span class="token comment">//铠甲</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> armor<span class="token punctuation">;</span>
	<span class="token comment">//武器</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> weapon<span class="token punctuation">;</span>
	<span class="token comment">//省略Git和Set方法...........</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>1、</strong> 创建Builder接口（给出一个抽象接口，以规范产品对象的各个组成成分的建造，这个接口只是规范）</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">PersonBuilder</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">void</span> <span class="token function">builderHelmetMurder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">void</span> <span class="token function">builderArmorMurder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">void</span> <span class="token function">builderWeaponMurder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">void</span> <span class="token function">builderHelmetYanLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">void</span> <span class="token function">builderArmorYanLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">void</span> <span class="token function">builderWeaponYanLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">Arms</span> <span class="token class-name">BuilderArms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//组装</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 创建Builder实现类（这个类主要实现复杂对象创建的哪些部分需要什么属性）；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArmsBuilder</span> <span class="token keyword">implements</span> <span class="token class-name">PersonBuilder</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">private</span> <span class="token class-name">Arms</span> arms<span class="token punctuation">;</span>
	<span class="token comment">//创建一个Arms实例,用于调用set方法</span>
	<span class="token keyword">public</span> <span class="token class-name">ArmsBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		arms <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Arms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">builderHelmetMurder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		arms<span class="token punctuation">.</span><span class="token function">setHelmet</span><span class="token punctuation">(</span><span class="token string">"夺命头盔"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">builderArmorMurder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		arms<span class="token punctuation">.</span><span class="token function">setArmor</span><span class="token punctuation">(</span><span class="token string">"夺命铠甲"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">builderWeaponMurder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		arms<span class="token punctuation">.</span><span class="token function">setWeapon</span><span class="token punctuation">(</span><span class="token string">"夺命宝刀"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">builderHelmetYanLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		arms<span class="token punctuation">.</span><span class="token function">setHelmet</span><span class="token punctuation">(</span><span class="token string">"炎龙头盔"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">builderArmorYanLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		arms<span class="token punctuation">.</span><span class="token function">setArmor</span><span class="token punctuation">(</span><span class="token string">"炎龙铠甲"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">builderWeaponYanLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		arms<span class="token punctuation">.</span><span class="token function">setWeapon</span><span class="token punctuation">(</span><span class="token string">"炎龙宝刀"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">public</span> <span class="token class-name">Arms</span> <span class="token class-name">BuilderArms</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">return</span> arms<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> Director（调用具体建造者来创建复杂对象的各个部分，在指导者中不涉及具体产品的信息，只负； 责保证对象各部分完整创建或按某种顺序创建）</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PersonDirector</span> <span class="token punctuation">&#123;</span>


	<span class="token comment">//组装</span>
	<span class="token keyword">public</span> <span class="token class-name">Arms</span> <span class="token function">constructPerson</span><span class="token punctuation">(</span><span class="token class-name">PersonBuilder</span> pb<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		pb<span class="token punctuation">.</span><span class="token function">builderHelmetYanLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		pb<span class="token punctuation">.</span><span class="token function">builderArmorMurder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		pb<span class="token punctuation">.</span><span class="token function">builderWeaponMurder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token class-name"><span class="token namespace">pb<span class="token punctuation">.</span></span>BuilderArms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token comment">//这里进行测试</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">PersonDirector</span> pb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PersonDirector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Arms</span> arms <span class="token operator">=</span> pb<span class="token punctuation">.</span><span class="token function">constructPerson</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArmsBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arms<span class="token punctuation">.</span><span class="token function">getHelmet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arms<span class="token punctuation">.</span><span class="token function">getArmor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arms<span class="token punctuation">.</span><span class="token function">getWeapon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h2 id="9-模板方法模式"><a href="#9-模板方法模式" class="headerlink" title="9.模板方法模式"></a>9.模板方法模式</h2><h3 id="1-什么是模板方法"><a href="#1-什么是模板方法" class="headerlink" title="1.什么是模板方法"></a>1.什么是模板方法</h3><ul>
<li>模板方法模式：定义一个操作中的算法骨架（父类），而将一些步骤延迟到子类中。 模板方法使 得子类可以不改变一个算法的结构来重定义该算法的</li>
</ul>
<h3 id="2-什么时候使用模板方法"><a href="#2-什么时候使用模板方法" class="headerlink" title="2.什么时候使用模板方法"></a>2.什么时候使用模板方法</h3><ul>
<li>实现一些操作时，整体步骤很固定，但是呢。就是其中一小部分需要改变，这时候可以使用模板方 法模式，将容易变的部分抽象出来，供子类实现。</li>
</ul>
<h3 id="3-实际开发中应用场景哪里用到了模板方法"><a href="#3-实际开发中应用场景哪里用到了模板方法" class="headerlink" title="3.实际开发中应用场景哪里用到了模板方法"></a>3.实际开发中应用场景哪里用到了模板方法</h3><ul>
<li>其实很多框架中都有用到了模板方法模式</li>
<li>例如：数据库访问的封装、Junit单元测试、servlet中关于doGet&#x2F;doPost方法的调用等等</li>
</ul>
<h3 id="4-现实生活中的模板方法"><a href="#4-现实生活中的模板方法" class="headerlink" title="4.现实生活中的模板方法"></a>4.现实生活中的模板方法</h3><p><strong>例如：</strong></p>
<p><strong>1、</strong> 去餐厅吃饭，餐厅给我们提供了一个模板就是：看菜单，点菜，吃饭，付款，走人（这里“点菜和付款” 是不确定的由子类来完成的，其他的则是一个模板。）</p>
<h3 id="5-代码实现模板方法模式"><a href="#5-代码实现模板方法模式" class="headerlink" title="5.代码实现模板方法模式"></a>5.代码实现模板方法模式</h3><p><strong>1、</strong> 先定义一个模板把模板中的点菜和付款，让子类来实现；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//模板方法</span>
<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">RestaurantTemplate</span> <span class="token punctuation">&#123;</span>


	<span class="token comment">// 1.看菜单</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">menu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"看菜单"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token comment">// 2.点菜业务</span>
	<span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">spotMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 3.吃饭业务</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">havingDinner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>

      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"吃饭"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>
	<span class="token comment">// 3.付款业务</span>
	<span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">payment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 3.走人</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">GoR</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"走人"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>
	<span class="token comment">//模板通用结构</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>


		<span class="token function">menu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">spotMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">havingDinner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">payment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">GoR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>1、</strong> 具体的模板方法子类1；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RestaurantGinsengImpl</span> <span class="token keyword">extends</span> <span class="token class-name">RestaurantTemplate</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">void</span> <span class="token function">spotMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"人参"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">void</span> <span class="token function">payment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"5快"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 具体的模板方法子类2；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RestaurantLobsterImpl</span> <span class="token keyword">extends</span> <span class="token class-name">RestaurantTemplate</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">void</span> <span class="token function">spotMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"龙虾"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">void</span> <span class="token function">payment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"50块"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 客户端测试；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token comment">//调用第一个模板实例</span>
		<span class="token class-name">RestaurantTemplate</span> restaurantTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RestaurantGinsengImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		restaurantTemplate<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h2 id="10-外观模式"><a href="#10-外观模式" class="headerlink" title="10.外观模式"></a>10.外观模式</h2><h3 id="1-什么是外观模式"><a href="#1-什么是外观模式" class="headerlink" title="1.什么是外观模式"></a>1.什么是外观模式</h3><ul>
<li>外观模式：也叫门面模式，隐藏系统的复杂性，并向客户端提供了一个客户端可以访问系统的接口。</li>
<li>它向现有的系统添加一个接口，用这一个接口来隐藏实际的系统的复杂性。</li>
<li>使用外观模式，他外部看起来就是一个接口，其实他的内部有很多复杂的接口已经被实现</li>
</ul>
<h3 id="2-外观模式例子"><a href="#2-外观模式例子" class="headerlink" title="2.外观模式例子"></a>2.外观模式例子</h3><ul>
<li>用户注册完之后，需要调用阿里短信接口、邮件接口、微信推送接口。</li>
</ul>
<p><strong>1、</strong> 创建阿里短信接口；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//阿里短信消息</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AliSmsService</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">void</span> <span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 创建邮件接口；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AliSmsServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">AliSmsService</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"阿里短信消息"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
	<span class="token comment">//发送邮件消息</span>
	<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">EamilSmsService</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">void</span> <span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EamilSmsServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">EamilSmsService</span><span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"发送邮件消息"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 创建微信推送接口；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//微信消息推送</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">WeiXinSmsService</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">void</span> <span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WeiXinSmsServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">WeiXinSmsService</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"发送微信消息推送"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 创建门面（门面看起来很简单使用，复杂的东西以及被门面给封装好了）；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Computer</span> <span class="token punctuation">&#123;</span>


	<span class="token class-name">AliSmsService</span> aliSmsService<span class="token punctuation">;</span>
	<span class="token class-name">EamilSmsService</span> eamilSmsService<span class="token punctuation">;</span>
	<span class="token class-name">WeiXinSmsService</span> weiXinSmsService<span class="token punctuation">;</span>
	<span class="token keyword">public</span> <span class="token class-name">Computer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		aliSmsService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AliSmsServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		eamilSmsService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EamilSmsServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		weiXinSmsService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeiXinSmsServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token comment">//只需要调用它</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		aliSmsService<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		eamilSmsService<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		weiXinSmsService<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 启动测试；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token comment">//普通模式需要这样</span>
		<span class="token class-name">AliSmsService</span> aliSmsService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AliSmsServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">EamilSmsService</span> eamilSmsService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EamilSmsServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">WeiXinSmsService</span> weiXinSmsService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeiXinSmsServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		aliSmsService<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		eamilSmsService<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		weiXinSmsService<span class="token punctuation">.</span><span class="token function">sendSms</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//利用外观模式简化方法</span>
		<span class="token keyword">new</span> <span class="token class-name">Computer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sendMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="11-原型模式"><a href="#11-原型模式" class="headerlink" title="11.原型模式"></a>11.原型模式</h2><h3 id="1-什么是原型模式"><a href="#1-什么是原型模式" class="headerlink" title="1.什么是原型模式"></a>1.什么是原型模式</h3><ul>
<li>原型设计模式简单来说就是克隆</li>
<li>原型表明了有一个样板实例，这个原型是可定制的。原型模式多用于创建复杂的或者构造耗时的实例，因为这种情况下，复制一个已经存在的实例可使程序运行更高效。</li>
</ul>
<h3 id="2-原型模式的应用场景"><a href="#2-原型模式的应用场景" class="headerlink" title="2.原型模式的应用场景"></a>2.原型模式的应用场景</h3><p><strong>1、</strong> 类初始化需要消化非常多的资源，这个资源包括数据、硬件资源等这时我们就可以通过原型拷贝； 避免这些消耗。 <strong>2、</strong> 通过new产生的一个对象需要非常繁琐的数据准备或者权限，这时可以使用原型模式； <strong>3、</strong> 一个对象需要提供给其他对象访问，而且各个调用者可能都需要修改其值时，可以考虑使用原型模； 式拷贝多个对象供调用者使用，即保护性拷贝。</p>
<p>我们Spring框架中的多例就是使用原型。</p>
<h3 id="3-原型模式的使用方式"><a href="#3-原型模式的使用方式" class="headerlink" title="3.原型模式的使用方式"></a>3.原型模式的使用方式</h3><p><strong>1、</strong> 实现Cloneable接口在java语言有一个Cloneable接口，它的作用只有一个，就是在运行时通知； 虚拟机可以安全地在实现了此接口的类上使用clone方法。在java虚拟机中，只有实现了这个接口 的类才可以被拷贝，否则在运行时会抛出CloneNotSupportedException异常。 <strong>2、</strong> 重写Object类中的clone方法Java中，所有类的父类都是Object类，Object类中有一个clone方； 法，作用是返回对象的一个拷贝，但是其作用域protected类型的，一般的类无法调用，因此 Prototype类需要将clone方法的作用域修改为public类型。</p>
<h4 id="3-1-原型模式分为浅复制和深复制"><a href="#3-1-原型模式分为浅复制和深复制" class="headerlink" title="3.1 原型模式分为浅复制和深复制"></a>3.1 原型模式分为浅复制和深复制</h4><p><strong>1、</strong> （浅复制）只是拷贝了基本类型的数据，而引用类型数据，只是拷贝了一份引用地址； <strong>2、</strong> （深复制）在计算机中开辟了一块新的内存地址用于存放复制的对象；</p>
<h3 id="4-代码演示"><a href="#4-代码演示" class="headerlink" title="4.代码演示"></a>4.代码演示</h3><p><strong>1、</strong> 创建User类；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token keyword">implements</span> <span class="token class-name">Cloneable</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> phones<span class="token punctuation">;</span>
	<span class="token keyword">protected</span> <span class="token class-name">User</span> <span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">try</span> <span class="token punctuation">&#123;</span>


			<span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//重点，如果要连带引用类型一起复制，需要添加底下一条代码，如果不加就对于是复制了引用地址</span>
			user<span class="token punctuation">.</span>phones <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>phones<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置深复制</span>
			<span class="token keyword">return</span> user<span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">CloneNotSupportedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
		<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token comment">//省略所有属性Git Set方法......</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 测试复制；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token comment">//创建User原型对象</span>
		<span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"李三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		user<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> phones <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		phones<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"17674553302"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		user<span class="token punctuation">.</span><span class="token function">setPhones</span><span class="token punctuation">(</span>phones<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//copy一个user对象,并且对象的属性</span>
		<span class="token class-name">User</span> user2 <span class="token operator">=</span> user<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		user2<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">"654321"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//查看俩个对象是否是一个</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user <span class="token operator">==</span> user2<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//查看属性内容</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" | "</span> <span class="token operator">+</span> user2<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" | "</span> <span class="token operator">+</span> user2<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//查看对于引用类型拷贝</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getPhones</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> user2<span class="token punctuation">.</span><span class="token function">getPhones</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 如果不需要深复制，需要删除User中的；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//默认引用类型为浅复制，这是设置了深复制</span>
user<span class="token punctuation">.</span>phones <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>phones<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>


<h2 id="12-策略模式"><a href="#12-策略模式" class="headerlink" title="12.策略模式"></a>12.策略模式</h2><h3 id="1-什么是策略模式"><a href="#1-什么是策略模式" class="headerlink" title="1.什么是策略模式"></a>1.什么是策略模式</h3><ul>
<li>定义了一系列的算法 或 逻辑 或 相同意义的操作，并将每一个算法、逻辑、操作封装起来，而且使它们还可以相互替换。（其实策略模式Java中用的非常非常广泛）</li>
<li>我觉得主要是为了 简化 if…else 所带来的复杂和难以维护。</li>
</ul>
<h3 id="2-策略模式应用场景"><a href="#2-策略模式应用场景" class="headerlink" title="2.策略模式应用场景"></a>2.策略模式应用场景</h3><ul>
<li>策略模式的用意是针对一组算法或逻辑，将每一个算法或逻辑封装到具有共同接口的独立的类中， 从而使得它们之间可以相互替换。</li>
</ul>
<p><strong>1、</strong> 例如：我要做一个不同会员打折力度不同的三种策略，初级会员，中级会员，高级会员（三种不同； 的计算）。 <strong>2、</strong> 例如：我要一个支付模块，我要有微信支付、支付宝支付、银联支付等；</p>
<h3 id="3-策略模式的优点和缺点"><a href="#3-策略模式的优点和缺点" class="headerlink" title="3.策略模式的优点和缺点"></a>3.策略模式的优点和缺点</h3><ul>
<li>优点：</li>
</ul>
<p>1、算法可以自由切换。<br>2、避免使用多重条件判断。<br>3 、扩展性非常良好。</p>
<ul>
<li>缺点：</li>
</ul>
<p>1、策略类会增多。<br>2、所有策略类都需要对外暴露。</p>
<h3 id="4-代码演示-1"><a href="#4-代码演示-1" class="headerlink" title="4.代码演示"></a>4.代码演示</h3><ul>
<li>模拟支付模块有微信支付、支付宝支付、银联支付</li>
</ul>
<p><strong>1、</strong> 定义抽象的公共方法；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//策略模式 定义抽象方法 所有支持公共接口</span>
<span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">PayStrategy</span> <span class="token punctuation">&#123;</span>


	<span class="token comment">// 支付逻辑方法</span>
	<span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">algorithmInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 定义实现微信支付；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">PayStrategyA</span> <span class="token keyword">extends</span> <span class="token class-name">PayStrategy</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">void</span> <span class="token function">algorithmInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"微信支付"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 定义实现支付宝支付；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">PayStrategyB</span> <span class="token keyword">extends</span> <span class="token class-name">PayStrategy</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">void</span> <span class="token function">algorithmInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"支付宝支付"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 定义实现银联支付；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">PayStrategyC</span> <span class="token keyword">extends</span> <span class="token class-name">PayStrategy</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">void</span> <span class="token function">algorithmInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"银联支付"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 定义下文维护算法策略；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span><span class="token comment">// 使用上下文维护算法策略</span>
<span class="token keyword">class</span> <span class="token class-name">Context</span> <span class="token punctuation">&#123;</span>


	<span class="token class-name">PayStrategy</span> strategy<span class="token punctuation">;</span>
	<span class="token keyword">public</span> <span class="token class-name">Context</span><span class="token punctuation">(</span><span class="token class-name">PayStrategy</span> strategy<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">this</span><span class="token punctuation">.</span>strategy <span class="token operator">=</span> strategy<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">algorithmInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		strategy<span class="token punctuation">.</span><span class="token function">algorithmInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 运行测试；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">ClientTestStrategy</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token class-name">Context</span> context<span class="token punctuation">;</span>
		<span class="token comment">//使用支付逻辑A</span>
		context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Context</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PayStrategyA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		context<span class="token punctuation">.</span><span class="token function">algorithmInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//使用支付逻辑B</span>
		context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Context</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PayStrategyB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		context<span class="token punctuation">.</span><span class="token function">algorithmInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//使用支付逻辑C</span>
		context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Context</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PayStrategyC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		context<span class="token punctuation">.</span><span class="token function">algorithmInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h2 id="13-观察者模式"><a href="#13-观察者模式" class="headerlink" title="13.观察者模式"></a>13.观察者模式</h2><h3 id="1-什么是观察者模式"><a href="#1-什么是观察者模式" class="headerlink" title="1. 什么是观察者模式"></a>1. 什么是观察者模式</h3><ul>
<li>先讲什么是行为性模型，行为型模式关注的是系统中对象之间的相互交互，解决系统在运行时对象 之间的相互通信和协作，进一步明确对象的职责。</li>
<li>观察者模式，是一种行为性模型，又叫发布-订阅模式，他定义对象之间一种一对多的依赖关系， 使得当一个对象改变状态，则所有依赖于它的对象都会得到通知并自动更新。</li>
</ul>
<h3 id="2-模式的职责"><a href="#2-模式的职责" class="headerlink" title="2. 模式的职责"></a>2. 模式的职责</h3><ul>
<li>观察者模式主要用于1对N的通知。当一个对象的状态变化时，他需要及时告知一系列对象，令他 们做出相应。</li>
</ul>
<p><strong>实现有两种方式：</strong></p>
<p><strong>1、</strong> 推：每次都会把通知以广播的方式发送给所有观察者，所有的观察者只能被动接收； <strong>2、</strong> 拉：观察者只要知道有情况即可，至于什么时候获取内容，获取什么内容，都可以自主决定；</p>
<h3 id="3-观察者模式应用场景"><a href="#3-观察者模式应用场景" class="headerlink" title="3. 观察者模式应用场景"></a>3. 观察者模式应用场景</h3><p><strong>1、</strong> 关联行为场景，需要注意的是，关联行为是可拆分的，而不是“组合”关系事件多级触发场景； <strong>2、</strong> 跨系统的消息交换场景，如消息队列、事件总线的处理机制；</p>
<h3 id="4-代码实现观察者模式"><a href="#4-代码实现观察者模式" class="headerlink" title="4.代码实现观察者模式"></a>4.代码实现观察者模式</h3><p><strong>1、</strong> 定义抽象观察者，每一个实现该接口的实现类都是具体观察者；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//观察者的接口，用来存放观察者共有方法</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Observer</span> <span class="token punctuation">&#123;</span>


	<span class="token comment">// 观察者方法</span>
	<span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">int</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 定义具体观察者；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">// 具体观察者</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ObserverImpl</span> <span class="token keyword">implements</span> <span class="token class-name">Observer</span> <span class="token punctuation">&#123;</span>


	<span class="token comment">// 具体观察者的属性</span>
	<span class="token keyword">private</span> <span class="token keyword">int</span> myState<span class="token punctuation">;</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">int</span> state<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		myState<span class="token operator">=</span>state<span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"收到消息,myState值改为："</span><span class="token operator">+</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getMyState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">return</span> myState<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 定义主题主题定义观察者数组，并实现增、删及通知操作；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Vector</span></span><span class="token punctuation">;</span>
<span class="token comment">//定义主题，以及定义观察者数组，并实现增、删及通知操作。</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Subjecct</span> <span class="token punctuation">&#123;</span>


	<span class="token comment">//观察者的存储集合，不推荐ArrayList，线程不安全，</span>
	<span class="token keyword">private</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observer</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 注册观察者方法</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerObserver</span><span class="token punctuation">(</span><span class="token class-name">Observer</span> obs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>obs<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token comment">// 删除观察者方法</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeObserver</span><span class="token punctuation">(</span><span class="token class-name">Observer</span> obs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		list<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>obs<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token comment">// 通知所有的观察者更新</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">notifyAllObserver</span><span class="token punctuation">(</span><span class="token keyword">int</span> state<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Observer</span> observer <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


			observer<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 定义具体的，他继承继承Subject类，在这里实现具体业务，在具体项目中，该类会有很多；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token comment">//具体主题</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RealObserver</span> <span class="token keyword">extends</span> <span class="token class-name">Subjecct</span> <span class="token punctuation">&#123;</span>


	<span class="token comment">//被观察对象的属性</span>
	<span class="token keyword">private</span> <span class="token keyword">int</span> state<span class="token punctuation">;</span>
	<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>


		<span class="token keyword">return</span> state<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setState</span><span class="token punctuation">(</span><span class="token keyword">int</span> state<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>


		<span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token operator">=</span>state<span class="token punctuation">;</span>
		<span class="token comment">//主题对象(目标对象)值发生改变</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyAllObserver</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>1、</strong> 运行测试；</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lijie</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">&#123;</span>


	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>


		<span class="token comment">// 目标对象</span>
		<span class="token class-name">RealObserver</span> subject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RealObserver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 创建多个观察者</span>
		<span class="token class-name">ObserverImpl</span> obs1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObserverImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">ObserverImpl</span> obs2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObserverImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">ObserverImpl</span> obs3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObserverImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 注册到观察队列中</span>
		subject<span class="token punctuation">.</span><span class="token function">registerObserver</span><span class="token punctuation">(</span>obs1<span class="token punctuation">)</span><span class="token punctuation">;</span>
		subject<span class="token punctuation">.</span><span class="token function">registerObserver</span><span class="token punctuation">(</span>obs2<span class="token punctuation">)</span><span class="token punctuation">;</span>
		subject<span class="token punctuation">.</span><span class="token function">registerObserver</span><span class="token punctuation">(</span>obs3<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 改变State状态</span>
		subject<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"obs1观察者的MyState状态值为："</span><span class="token operator">+</span>obs1<span class="token punctuation">.</span><span class="token function">getMyState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"obs2观察者的MyState状态值为："</span><span class="token operator">+</span>obs2<span class="token punctuation">.</span><span class="token function">getMyState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"obs3观察者的MyState状态值为："</span><span class="token operator">+</span>obs3<span class="token punctuation">.</span><span class="token function">getMyState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 改变State状态</span>
		subject<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"obs1观察者的MyState状态值为："</span><span class="token operator">+</span>obs1<span class="token punctuation">.</span><span class="token function">getMyState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"obs2观察者的MyState状态值为："</span><span class="token operator">+</span>obs2<span class="token punctuation">.</span><span class="token function">getMyState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"obs3观察者的MyState状态值为："</span><span class="token operator">+</span>obs3<span class="token punctuation">.</span><span class="token function">getMyState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>面试资料</category>
      </categories>
      <tags>
        <tag>面试资料</tag>
      </tags>
  </entry>
  <entry>
    <title>Java程序员简历</title>
    <url>/93df99b/</url>
    <content><![CDATA[<blockquote>
<p>copyForm：<span class="exturl" data-url="aHR0cHM6Ly9kZGtrLmNvbS96aHVhbmxhbi9zaGFyZS9qaWFubGkuaHRtbA==">https://ddkk.com/zhuanlan/share/jianli.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="先讲讲怎样才是一份好的技术简历"><a href="#先讲讲怎样才是一份好的技术简历" class="headerlink" title="先讲讲怎样才是一份好的技术简历"></a>先讲讲怎样才是一份好的技术简历</h2><p>首先，一份好的简历不光说明事实，更通过FAB模式来增强其说服力。Feature：是什么Advantage：比别人好在哪些地方Benefit：如果雇佣你，招聘方会得到什么好处其次，写简历和写议论文不同，过分的论证会显得自夸，反而容易引起反感，所以要点到为止。这里的技巧是，提供论据，把论点留给阅读简历的人自己去得出。放论据要具体，最基本的是要数字化，好的论据要让人印象深刻。</p>
<h3 id="1、加分写法"><a href="#1、加分写法" class="headerlink" title="1、加分写法"></a>1、加分写法</h3><p>招聘经理平均花费6秒钟对一个候选人建立初步印象或决定是否提供面试机会。当你仍是应届生或者仅仅有2-3年工作经验时，写一份1页的简历是最好的做法，让雇主可以轻松地浏览你的简历，找到他们需要的信息。</p>
<h3 id="2、减分写法"><a href="#2、减分写法" class="headerlink" title="2、减分写法"></a>2、减分写法</h3><h3 id="2-1、设计的过于浮夸或者过于简单的"><a href="#2-1、设计的过于浮夸或者过于简单的" class="headerlink" title="2.1、设计的过于浮夸或者过于简单的"></a>2.1、设计的过于浮夸或者过于简单的</h3><p>有的简历五颜六色、非常酷炫，却半天找不到联系方式，Word 格式的简历打开还乱码，简历转换为 PDF 格式</p>
<h3 id="2-2、做的项目和想投的工作不吻合"><a href="#2-2、做的项目和想投的工作不吻合" class="headerlink" title="2.2、做的项目和想投的工作不吻合"></a>2.2、做的项目和想投的工作不吻合</h3><p>比如想投CS专业，手中却只有EE相关的技术经验，或者想投工业界的职位，却只有Research方面的经验；</p>
<h3 id="2-3、做的项目觉得不够重要"><a href="#2-3、做的项目觉得不够重要" class="headerlink" title="2.3、做的项目觉得不够重要"></a>2.3、做的项目觉得不够重要</h3><p>比如就是修修bug，改改button之类的简单任务；</p>
<h3 id="2-4、确实是什么经历都没有"><a href="#2-4、确实是什么经历都没有" class="headerlink" title="2.4、确实是什么经历都没有"></a>2.4、确实是什么经历都没有</h3><p>介绍技术：最近几份工作经历中所参与过的产品、项目、角色</p>
<ul>
<li>在工作中做的项目的技术细节</li>
<li>克服过的技术难点与细节感兴趣的技术</li>
<li>技术博客，或者个人开源项目（+link）</li>
<li>如果领导过技术团队，写下带的团队的规模与管理风格</li>
</ul>
<p>介绍自己：过往有特点经历、擅长的方向、对互联网的理解、职业发展规划</p>
<p>试试用markdown语法，注意下排版，预览再提交，版面整洁、干净，也是加分项。</p>
<p><strong>程序员就应该拿技术说话，「技术总结」是一份程序员简历的重中之重。</strong></p>
<p>除了大神和大牛，普通的程序员如果能在叙述中中体现自己的风格，在技术总结中展示鲜明的个人形象，会更吸引公司的注意，拿到更多的面试邀请。</p>
<h2 id="第一部分：基本信息。"><a href="#第一部分：基本信息。" class="headerlink" title="第一部分：基本信息。"></a>第一部分：基本信息。</h2><p>招聘经理平均花费6秒钟对一个候选人建立初步印象或决定是否提供面试机会。当你仍是应届生或者仅仅有2-3年工作经验时，写一份1页的简历是最好的做法，让雇主可以轻松地浏览你的简历，找到他们需要的信息。</p>
<p>必须有的：名字、联系方式（邮箱+电话）、出生年月（一般写个年份就好）、应聘职位、工作年限、地址（城市要有，具体地址可写可不写）。</p>
<p>可以有的：个人博客地址（里面有乱七八糟内容的就不要放了）、期望待遇。最好不要有的：照片（除非你对自己长相特别有自信，但是要放就放大头照，别放艺术照）</p>
<p>程序员简历不一定需要写上个人评价、获奖情况、附上求职信，在内容上一定需要包括的是以下5各方面</p>
<p>基本信息包括:你的名字、住址、联系电话、email</p>
<p>不要带照片（你确定人家看你简历的时候不会被你的颜值吓得吃不下饭么）</p>
<p>必须按照时间的倒序进行排列。</p>
<p>一般来说刚毕业的把学校排最前，已经工作的把工作经历排在最前。</p>
<h2 id="第二部分：受教育经历。"><a href="#第二部分：受教育经历。" class="headerlink" title="第二部分：受教育经历。"></a>第二部分：受教育经历。</h2><p>必须有的：大学的名字、专业、开始时间、结束时间、GPA（或者平均成绩）。</p>
<p>可以有的：高中经历（如果你的高中很出名，比如人大附中）、专业或者大学的描述和介绍（如果不是太出名的大学但其实专业不差推荐写）</p>
<p>写最高学历，与教育经历对应。名校是加分项</p>
<p>不要写岗位无关的经验：很多人可能是转行的</p>
<h2 id="第三部分：荣誉，没有可以不写"><a href="#第三部分：荣誉，没有可以不写" class="headerlink" title="第三部分：荣誉，没有可以不写"></a>第三部分：荣誉，没有可以不写</h2><p>必须有的：大学时期获得的学术类荣誉（只要有称号的就要写，优秀奖也可以写）、奖学金、一些社会荣誉（比如见义勇为）。</p>
<p>可以有的：中学时非常优秀的荣誉（比如数学竞赛全国一等奖）、在其他机构获得的奖项（比如MIT的什么夏令营的优秀学生，或者Intel的什么奖项）。</p>
<p>最好不要有的：康师傅再来一瓶（我没开玩笑，我真的看到很多人简历写，这个一点不幽默）、大学前的无关紧要奖项（初中二年级全校作文大赛一等奖）、一些虚构的奖项。</p>
<h2 id="程序员简历模板：下载"><a href="#程序员简历模板：下载" class="headerlink" title="程序员简历模板：下载"></a>程序员简历模板：下载</h2><p>需要简历模板的同学，关注作者的原创公众号「架构师专栏」回复「简历」即可无套路获取</p>
<p>关注公众号「架构师专栏」回复 「简历」领取：</p>
<p><img src="https://ddkk.com/images/tech_column.png"></p>
<p><strong>微信扫一扫关注「架构师专栏」公众号</strong></p>
<h2 id="第四部分：工作和实习经历。"><a href="#第四部分：工作和实习经历。" class="headerlink" title="第四部分：工作和实习经历。"></a>第四部分：工作和实习经历。</h2><p>首先在基本信息里面，我们会看到，有很多同学会故意地把自己的工作年限写得很长。比如16年毕业，自己会选择性地写成两年甚至三年的工作经验。我要讲的是，这是完全没有必要。因为首先，这会让招聘者很疑惑，你前面的这些工作经验是哪里来的？当然大部分可能是把实习经验算成工作经验了，但实际上到面试阶段还是会把这部分抛除掉的。所以我们希望的原则是尽可能地实事求是，不要虚报。不要把自己的毕业年限故意提前，来增加自己的工作年限。哪怕这会帮你过简历自动筛选的过程，到人工筛选或面试时，仍有很大的可能会被筛掉。</p>
<p>简历的第二部分，就是工作和实习经历。</p>
<blockquote>
<p>公司名称<br>职位<br>时间<br>详细工作</p>
</blockquote>
<p>如何让简历显得更有深度？我认为你的<strong>简历需要体现设计和实现上的复杂性。</strong>我总结了一个描述的技巧：<strong>起承转合。</strong></p>
<p><strong>第一行，起。写清楚项目的背景。</strong> 写一下研究过什么同类的产品，我的产品的优势是什么。这能告诉面试官我不是随意设计一个项目的，是有目的、有规划的。</p>
<p><strong>第二行，承。一般我会写基本的实现。</strong> 用了什么框架、什么技术。记得要把context交代清楚。</p>
<p><strong>第三行，转。描述遇到的挑战，是如何解决的。</strong> 通过这条，说明我这个项目不是应付交差，而是做了一段时间，遇到了问题，并且解决了问题。</p>
<p><strong>第四行，合。描述最终的结果。</strong> 我是如何delivere、present、test这个项目的。告诉面试官我有ownership，能保证产品的最终完成。最好可以用一些数字来体现结果，而不是空洞的描述。</p>
<p>用这样一个四段论，比全部都在说做了A功能、B功能、C功能，在深度上好太多。</p>
<p>必须有的：工作单位的名称、职位、具体工作内容的描述（语言、框架、开发平台、在哪里可以看到、如果不能看到就说说实现了什么效果）、工作的开始时间、结束时间、所有做的项目，包括开源项目。可以有的：一两句简单阐述一下对于工作的感触，比如但是不要有消极言论。</p>
<p>最好不好有的：和工作特别没有关系的工作经验（大概有五分之一的人简历里面有在肯德基或者麦当劳做清洁或者收银工作的内容，你要是真的一条都没的写了再写，哪怕有一条也不要写这个）。</p>
<p>不要写岗位无关的经验：很多人可能是转行的</p>
<p>项目经验以三个左右为佳，多花点时间好好描述，把用到的技术和遇到的麻烦反复练习如何去和面试官讲。超过三个也不是不行，但是基本不会全被看到或者问到，容易分散重点。</p>
<p>把你最想表现的项目写得多一点，其他的小项目写得少一点。比如你在一家大公司和一家小公司分别做过intern，那么就把大公司的工作重点突出。多写一点，这样是个正常人都会问你这个比较长的项目的内容，你就不需要每个项目都准备怎么说了，专心准备这一个项目怎么说就好了。</p>
<p>一旦是放到简历上的项目，一定要非常熟悉。哪怕面官追问你任何一个细节，你都必须做到对答如流。如果时间已经久远，一定要拿出来再重新熟悉一下或者再做一下。因为有可能面官就会问你，你当时这个项目为啥用XX技术，而不用XX技术呢?</p>
<p><strong>对于项目经历你可以考虑从如下几点来写：</strong></p>
<blockquote>
<p>1、对项目整体设计的一个感受<br>2、在这个项目中你负责了什么、做了什么、担任了什么角色<br>3、从这个项目中你学会了那些东西，使用到了那些技术，学会了那些新技术的使用<br>4、另外项目描述中，最好可以体现自己的综合素质，比如你是如何协调项目组成员协同开发的或者在遇到某一个棘手的问题的时候你是如何解决的又或者说你在这个项目用了什么技术实现了什么功能。示例：项目的<br>MySQL 数据库中的某张表的数据量达到千万级别，查询速度非常缓慢，数据库压力非常大，我使用 <code>Sharding-JDBC</code> 进行了分库分表，单表的数据量都在<br>300w 以下。</p>
</blockquote>
<p>如果你有含金量比较高的竞赛（比如ACM、阿里的天池大赛）的获奖经历的话，荣誉奖项这块内容一定要写一下！并且，你还可以将荣誉奖项这块内容适当往前放，放在一个更加显眼的位置。</p>
<p><strong>选择熟悉的项目，一定要选择熟悉的项目</strong><br>应该自己写的项目如果进入了面试，很有可能面试官的问题都来自于你写的项目内容中，所以不要写那些自己模棱两可，或者说仅仅是一个旁观者身份的那种项目。只是看过的，或者没办法深入进去的，被问到也很尴尬。</p>
<p><strong>项目经历还需要数据支撑</strong><br>。举个例子，比如你为实验楼开发了一个实验操作的模块，这个模块可以支持1000人同时做实验，并且已经稳定在线上运行了几年，这个实验操作模块能达到几百万次实验的检测。这其实是非常好的，有价值的项目经验。</p>
<p><strong>GitHub是非常非常重要的</strong><br>。至少我们实验楼在招聘的时候，会首先看GitHub上面的一些记录，比方说原创的代码项目，甚至说代码的一些规范，包括提交的一些记录。如果你的GitHub仓库里是空的，并且，大部分都是fork别人的代码，那就不要放了，可以避免很多时间上的浪费。</p>
<p>在列出任何一个额外信息的时候，把它的亮点附在后面。比方说你自己的技术博客，你可以写上有150篇的技术博文，当月的访问量达到了100万。这样子是通过数字来吸引别人对你技术博客的关注。</p>
<p><strong>如果职位没有要求你写期望的薪资，就不要写，</strong>可以到现场去谈。有可能你写了就会错过一些面试的机会。</p>
<p><strong>简历一定要短</strong> 。把你最重要的内容精简到一页纸里面；把你最重要的关键字，精简到最突出的位置上。千万不要增加大段的内容，大段的文字是简历的一个大忌。也不要夹杂太多个人感受、个人经历的文字，<br><strong>真的没人看</strong></p>
<h2 id="第五部分：技术，必须有的："><a href="#第五部分：技术，必须有的：" class="headerlink" title="第五部分：技术，必须有的："></a>第五部分：技术，必须有的：</h2><p>慎重使用“精通”这个词汇。万一你对面做的面试官是真精通的，你就惨了，会追着你问各种细节来验证你是不是真的精通。没有工作的经验的或者工作经验少的人，一定会被虐翻。程序员的心理就是，你越是显摆，我越是要证明你挫。</p>
<p>不要在技能里堆砌各种关键字。建议不要让所有的技能都是平行关系，要分出哪些是你熟悉的,哪些是你略知一二的。</p>
<p>一些技术名词不要弄错了大小写比如 MySQL 不要写成 mysql，java 不要写成 Java。</p>
<p>我一般主张将技能清单写入到工作经历里边去。不过很难完整，所以有这么一段也不错</p>
<p>以下均为我熟练使用的技能</p>
<blockquote>
<p>1、Java基础扎实、掌握多线程、集合、并发编程、设计模式、常用数据结构和算法。<br>2、深入理解Spring、Nacos、Eureka、Sentinel、Gateway、Seata、Dubbo、ZooKeeper、Netty等开源框架设计原理。<br>3、熟练掌握Redis数据结构及底层实现、集群高可用架构搭建、分布式锁实现原理、缓存一致性问题解决。<br>4、熟悉MySQL的索引原理、存储结构、事务和锁机制、性能调优、第三方工具使用、集群高可用架构搭建。<br>5、熟悉JVM内存模型及作用、分配策略、垃圾回收原理、参数配置、性能调优。<br>6、掌握消息中间件存储结构、高级特性和设计原理；ElasticSearch高级应用和写入原理；MongoDB集群高可用和安全认证。<br>7、掌握容器化技术Docker和Kubernetes；基于KubeSphere搭建一站式云平台；GitLab+Jenkins实现持续集成&#x2F;持续部署。<br>8、掌握SkyWalking实现服务链路追踪系统；ELK+FileBeat构建日志收集系统；Prometheus+Grafana搭建自动化监控系统。</p>
</blockquote>
<p>语言和平台，这里特别注意一下，不要随便写「精通」，每次有人看到写精通C++我都会问他一些Boost源码的东西，你要是没信心回答就不要说精通。这里我列一下大概的对照：</p>
<p>了解：知道这个玩意是干嘛的，能大概写点排序什么的出来。</p>
<p>熟悉：写过一两万行以上的代码，完整做过项目，看过至少一本最经典的技术书籍。</p>
<p>精通：写过一二十万行以上的代码，完整的做过很多项目，看过一些语言或者标准库的源码，能理解语言的底层构架，有能力去给别人讲这门语言。</p>
<p>另外在这个地方最好能看到你的Github地址或者博客地址。</p>
<h2 id="第六部分：工作期望-个人评价"><a href="#第六部分：工作期望-个人评价" class="headerlink" title="第六部分：工作期望&amp;个人评价"></a>第六部分：工作期望&amp;个人评价</h2><h3 id="1、减分写法"><a href="#1、减分写法" class="headerlink" title="1、减分写法"></a>1、减分写法</h3><p>完全看不出个性特点，写和没写没什么区别。 来几个栗子栗子</p>
<blockquote>
<p>1、本人热爱编程，喜欢学习，喜欢看书，喜欢分享。<br>2、为人性格，诚实谦虚，勤奋，能吃苦耐劳，有耐心，有团队意识，能和同学和谐相处，能虚心接受别人的建议的人。<br>3、专业扎实，具有较强的钻研精神和学习能力；性格比较乐观外向，喜欢打羽毛球。</p>
</blockquote>
<h3 id="2、加分写法"><a href="#2、加分写法" class="headerlink" title="2、加分写法"></a>2、加分写法</h3><h4 id="2-1、我对自己的定位"><a href="#2-1、我对自己的定位" class="headerlink" title="2.1、我对自己的定位"></a>2.1、我对自己的定位</h4><p>主攻前端，同时在其他方面打打辅助。我不希望过于依赖别人,即使没有后端没有设计没有产品经理,我依然想要把这个产品做到完美。毕竟全栈才能最高效地解决问题。</p>
<h4 id="2-2、我对工作的态度"><a href="#2-2、我对工作的态度" class="headerlink" title="2.2、我对工作的态度"></a>2.2、我对工作的态度</h4><p>第一,要高效完成自己的本职工作。第二,要在完成的基础上寻找完美。第三,要在完美的基础上,与其他同事<br>互相交流学习,互相提升。工作是一种生活方式,不是一份养家糊口的差事。</p>
<h4 id="2-3、我怎样克服困难"><a href="#2-3、我怎样克服困难" class="headerlink" title="2.3、我怎样克服困难"></a>2.3、我怎样克服困难</h4><p>不用百度是第一原则，在遇到技术问题时我往往会去Google、Stack over flow上寻找答案。</p>
<p>但通常很多问题 并不一定已经被人解决,所以熟练地阅读源码、在手册、规范甚至 REPL的环境自己做实验才是最终解决问题的办法。相信事实的结果,自己动手去做。</p>
<h4 id="2-4、怎样保持自己的视野"><a href="#2-4、怎样保持自己的视野" class="headerlink" title="2.4、怎样保持自己的视野"></a>2.4、怎样保持自己的视野</h4><p>我一直认为软件开发中视野极其重要,除了在 Twitter 上关注业界大牛,Github Trending 也是每周必刷。 另外 Podcast、Hacker<br>News、Reddit 以及TechRadar 也是重要的一手资料。保持开阔视野才能找到更酷的解决方案。</p>
<h3 id="3、是否有博客，个人开源项目"><a href="#3、是否有博客，个人开源项目" class="headerlink" title="3、是否有博客，个人开源项目"></a>3、是否有博客，个人开源项目</h3><p>看到有这项的HR两眼已经放光了，加分加分项，说明你真正的热爱技术，善于学习总结，乐于分享，且有投入自己的业余时间到软件事业中。</p>
<p>我喜欢的社区: 图灵社区，知乎，博客园，Stack Over flow，Google Developer Group等</p>
<p>我的博客链接、个人作品链接如下：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dpdGh1Yi94eHh4eHg=">https://github.com/github/xxxxxx<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="程序员简历模板：下载-1"><a href="#程序员简历模板：下载-1" class="headerlink" title="程序员简历模板：下载"></a>程序员简历模板：下载</h2><p>需要简历模板的同学，关注作者的原创公众号「架构师专栏」回复「简历」即可无套路获取</p>
<p>关注公众号「架构师专栏」回复 「简历」领取：</p>
<p><img src="https://ddkk.com/images/tech_column.png"></p>
<p><strong>微信扫一扫关注「架构师专栏」公众号</strong></p>
<h2 id="第七部分：其他"><a href="#第七部分：其他" class="headerlink" title="第七部分：其他"></a>第七部分：其他</h2><p>一般能力：英语（6级、托福100分……这个必须有）、其他语言……</p>
<p>兴趣爱好：围棋、马拉松……（只写积极的，抠脚之类的不要写）</p>
<p>特殊能力：钢琴大师级、开过画展、出版过书……（还是只写积极的，快速抠脚打出火花之类的不要写）</p>
<p>特殊背景：在blabla项目里面是核心负责人……</p>
<p>注意：不用按照上面的顺序去写，但是脑子里要清楚自己写的东西是不是属于这里面的。最终汇总在不超过两页的A4大小的纸里。</p>
<p>另外排版以整齐清楚为第一优先原则不要搞的太花、白底黑字、不要乱用字体，宋体或者黑体挺好的、注意全角半角标点。</p>
<p>简历正文尽可能严肃，偶尔卖萌一下无伤大雅，但是请不要一直出现这种内容，我曾经见过一个男生的简历每句话后面都有一个颜文字。</p>
<p>如果是邮件发送的话，请按照下面的要求发：使用正规一些的邮箱，比如<br>名字或者常用ID@邮箱.com，邮件的题目：blablabla职位求职，名字，附件：推荐使用PDF，但是如果方便也可以附带一份Doc</p>
<p>简历最大的加分项：干净整洁、没废话、Github里面有开源内容、博客里面有深度讨论的技术内容（其实如果一个人能保持博客的技术内容持续更新就狂加好感）、头脑非常清晰的知道自己在做什么。</p>
<p>一定要使用 PDF 格式投递，不要使用 word 或者其他格式投递。这是最基本的！</p>
<p>大部分公司的 HR 都说我们不看重学历（骗你的！）。如果你的学历比较差，记得通过其他方式弥补比如某某大厂的实习经历、获得了某某大赛的奖等等。</p>
<p>大部分应届生找工作的硬伤是没有工作经验或实习经历，所以如果你是应届生就不要错过秋招和春招。一旦错过，你后面就极大可能会面临社招，这个时候没有工作经验的你可能就会面临各种碰壁，导致找不到一个好的工作。</p>
<p>你不会的东西就不要写在简历。</p>
<p>将自己的项目经历完美的展示出来非常重要，突出亮点。</p>
<p>面试和工作是两回事，聪明的人会把面试官往自己擅长的领域领，其他人则被面试官牵着鼻子走。虽说面试和工作是两回事，但是你要想要获得自己满意的<br>offer ，你自身的实力必须要强。</p>
<p>尽量避免主观表述，少一点语义模糊的形容词，尽量要简洁明了，逻辑结构清晰。</p>
<p>技术博客、Github 以及获奖经历等可以直接证明自己能力的东西，能写就尽量写在这里。但是，如果技术博客和 Github 上没有什么内容的话，就不要写了。</p>
<p>注意简历真实性，一定不要写自己不会的东西，或者带有欺骗性的内容。适当润色没有问题。</p>
<p>项目经历建议以时间倒序排序，另外项目经历不在于多（精选 2~3 即可），而在于有亮点。</p>
<p>如果内容过多的话，不需要非把内容压缩到一页，保持排版干净整洁就可以了。</p>
<h2 id="程序员简历模板：下载-2"><a href="#程序员简历模板：下载-2" class="headerlink" title="程序员简历模板：下载"></a>程序员简历模板：下载</h2>]]></content>
      <categories>
        <category>面试资料</category>
      </categories>
      <tags>
        <tag>面试资料</tag>
      </tags>
  </entry>
  <entry>
    <title>idea安装</title>
    <url>/54d29937/</url>
    <content><![CDATA[<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>官网地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS5jbi9pZGVhLw==">https://www.jetbrains.com.cn/idea/<i class="fa fa-external-link-alt"></i></span></p>
<p>推荐安装包（别问，问就是有Crack）：链接: <span class="exturl" data-url="aHR0cHM6Ly9jYWl5dW4uMTM5LmNvbS9tL2k/MDA1Q2NZTDFTVjRTNQ==">https://caiyun.139.com/m/i?005CcYL1SV4S5<i class="fa fa-external-link-alt"></i></span>  提取码:jtwi</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/Pasted%20image%2020240212114434.png" alt="Pasted image 20240212114434"></p>
<ol>
<li>安装完成进入Crack文件夹</li>
<li>复制激活码.txt中的激活码</li>
<li>运行安装.bat（需要管理员权限）</li>
<li>打开idea，在idea中粘贴复制的激活码</li>
<li>享受无限激活吧</li>
</ol>
]]></content>
      <categories>
        <category>win软件</category>
        <category>idea</category>
      </categories>
      <tags>
        <tag>开发必备</tag>
      </tags>
  </entry>
  <entry>
    <title>obsidian安装</title>
    <url>/54d29936/</url>
    <content><![CDATA[<p>待完善…</p>
]]></content>
      <categories>
        <category>win软件</category>
        <category>Obsidian</category>
      </categories>
      <tags>
        <tag>开发必备</tag>
        <tag>Markdown</tag>
        <tag>Obsidian</tag>
      </tags>
  </entry>
  <entry>
    <title>obsidian插件（一）模板使用</title>
    <url>/54bdaaa/</url>
    <content><![CDATA[<h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><p><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/20230923113519.png" alt="image.png"><br><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/20230923113602.png" alt="image.png"></p>
<ol>
<li>开启模板开关（默认开启的）</li>
<li>创建模板文件夹<br> 这里创建个obsidianTemplate</li>
</ol>
<div class="note primary">
            <p>模板文件夹命名不能有<code>-</code>字符</p>
          </div>

<ol start="3">
<li>输入date 和 time 的语法，在模板中<code>&#123;&#123;date&#125;&#125;</code>和<code>&#123;&#123;time&#125;&#125;</code>会自动给你转换。类似的语法还有一下：<ul>
<li><code>&#123;&#123;title&#125;&#125;</code></li>
</ul>
</li>
</ol>
<p>我这里的模板eg：</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml">title: &#123;&#123;title&#125;&#125;
abstracts: 
feature: false
date: &#123;&#123;date&#125;&#125;
tags:
categories:
cover: 
author: author-seven</span>
<span class="token punctuation">---</span></span>

待完善...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>创建一个新的md<br><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/20230923114547.png" alt="image.png"><br>插入模板<br><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/20230923114618.png" alt="image.png"><br><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/20230923114730.png" alt="image.png"></p>
]]></content>
      <categories>
        <category>win软件</category>
        <category>Obsidian</category>
      </categories>
      <tags>
        <tag>Obsidian插件</tag>
      </tags>
  </entry>
  <entry>
    <title>React+Vite+AntD环境搭建</title>
    <url>/e6d089d8/</url>
    <content><![CDATA[<h1 id="初始化Vite"><a href="#初始化Vite" class="headerlink" title="初始化Vite"></a>初始化Vite</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> init vite@latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>按照提示进行初始，我这里项目名称叫：web-vite  选择React TypeScript 进行搭建演示<br>√ Project name: … web-vite<br>√ Select a framework: » React<br>√ Select a variant: » TypeScript</p>
<h1 id="安装AntD"><a href="#安装AntD" class="headerlink" title="安装AntD"></a>安装AntD</h1><pre><code>AntD官网介绍：https://ant.design/docs/react/i18n-cn
</code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> antd <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h1 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h1><p>进入你的项目（我的是 web-vite）<br>安装依赖<br>启动项目</p>
<pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">cd web-vite
npm install
npm run dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/20231005113525.png" alt="image.png"></p>
<h1 id="AntD国际化配置"><a href="#AntD国际化配置" class="headerlink" title="AntD国际化配置"></a>AntD国际化配置</h1><p>在main.tsx中加入国际化代码</p>
<pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token keyword">import</span> zhCN <span class="token keyword">from</span> <span class="token string">'antd/locale/zh_CN'</span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ConfigProvider <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigProvider</span></span> <span class="token attr-name">locale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>zhCN<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span><span class="token plain-text">  
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ConfigProvider</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/20231005114718.png" alt="image.png"><br>引入一个时间选择组件查看效果<br><span class="exturl" data-url="aHR0cHM6Ly9hbnQuZGVzaWduL2NvbXBvbmVudHMvZGF0ZS1waWNrZXItY24jY29tcG9uZW50cy1kYXRlLXBpY2tlci1kZW1vLWJhc2lj">https://ant.design/components/date-picker-cn#components-date-picker-demo-basic<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/20231005114756.png" alt="image.png"><br>复制官网的组件代码到App1中，然后在主App中引入组件<br><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/20231005114910.png" alt="image.png"></p>
<h1 id="路由安装"><a href="#路由安装" class="headerlink" title="路由安装"></a>路由安装</h1><h2 id="一、安裝react-router-dom"><a href="#一、安裝react-router-dom" class="headerlink" title="一、安裝react-router-dom"></a>一、安裝react-router-dom</h2><pre><code>react-router-dom官网：https://reactrouter.com/en/main
中文文档：https://react-guide.github.io/react-router-cn/docs/Introduction.html
</code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i react-router-dom<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="二、修改main-tsx全局设定路由"><a href="#二、修改main-tsx全局设定路由" class="headerlink" title="二、修改main.tsx全局设定路由"></a>二、修改main.tsx全局设定路由</h2><pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span>  
<span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">'react-dom/client'</span>  
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.tsx'</span>  
<span class="token keyword">import</span> <span class="token string">'./index.css'</span>  
<span class="token keyword">import</span> zhCN <span class="token keyword">from</span> <span class="token string">'antd/locale/zh_CN'</span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> ConfigProvider <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span>BrowserRouter<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react-router-dom"</span><span class="token punctuation">;</span>  
  
ReactDOM<span class="token punctuation">.</span><span class="token function">createRoot</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>  
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">React.StrictMode</span></span><span class="token punctuation">></span></span><span class="token plain-text">  
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigProvider</span></span> <span class="token attr-name">locale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>zhCN<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span><span class="token plain-text">  
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">BrowserRouter</span></span><span class="token punctuation">></span></span><span class="token plain-text">  
              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">  
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">BrowserRouter</span></span><span class="token punctuation">></span></span><span class="token plain-text">  
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ConfigProvider</span></span><span class="token punctuation">></span></span><span class="token plain-text">  
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">React.StrictMode</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>  
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/20231005154840.png" alt="image.png"></p>
<h2 id="三、定义路由"><a href="#三、定义路由" class="headerlink" title="三、定义路由"></a>三、定义路由</h2><p>创建文件router&#x2F;index.tsx</p>
<pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>Route<span class="token punctuation">,</span> Routes<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react-router-dom"</span><span class="token punctuation">;</span>  
<span class="token comment">// 定义的页面1</span>
<span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">"../views/Home"</span><span class="token punctuation">;</span>  
<span class="token comment">// 定义的页面2</span>
<span class="token keyword">import</span> App1 <span class="token keyword">from</span> <span class="token string">"../apps/App1"</span><span class="token punctuation">;</span>  
  
<span class="token comment">// 定义路由  </span>
<span class="token keyword">const</span> routeList <span class="token operator">=</span> <span class="token punctuation">[</span>  
    <span class="token punctuation">&#123;</span>path<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> title<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> element<span class="token operator">:</span> Home<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  
    <span class="token punctuation">&#123;</span>path<span class="token operator">:</span> <span class="token string">'/view1'</span><span class="token punctuation">,</span> title<span class="token operator">:</span> <span class="token string">'page2'</span><span class="token punctuation">,</span> element<span class="token operator">:</span> App1<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  
<span class="token punctuation">]</span>  
  
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">return</span> <span class="token punctuation">(</span>  
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">  
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Routes</span></span><span class="token punctuation">></span></span><span class="token plain-text">  
                </span><span class="token punctuation">&#123;</span>  
                    routeList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>  
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>index<span class="token punctuation">&#125;</span></span> <span class="token attr-name">path</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>item<span class="token punctuation">.</span>path<span class="token punctuation">&#125;</span></span> <span class="token attr-name">element</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item.element</span><span class="token punctuation">/></span></span><span class="token punctuation">&#125;</span></span><span class="token punctuation">/></span></span>  
                    <span class="token punctuation">)</span><span class="token punctuation">)</span>  
                <span class="token punctuation">&#125;</span><span class="token plain-text">  
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Routes</span></span><span class="token punctuation">></span></span><span class="token plain-text">  
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  
    <span class="token punctuation">)</span>  
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/20231005155026.png" alt="image.png"></p>
<h2 id="四、引用路由"><a href="#四、引用路由" class="headerlink" title="四、引用路由"></a>四、引用路由</h2><p>在App.tsx中引用刚刚定义的路由，并简单添加路由跳转的导航</p>
<pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>useState<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react'</span>  
<span class="token keyword">import</span> <span class="token string">'./App.css'</span>  
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span>Link<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react-router-dom"</span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">"./router/index"</span><span class="token punctuation">;</span>  
  
  
<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">return</span> <span class="token punctuation">(</span>  
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span><span class="token plain-text">  
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">&lt;h4>Home</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">></span></span><span class="token plain-text">  
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/view1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">&lt;h4>View1</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">></span></span><span class="token plain-text">  
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Router</span></span><span class="token punctuation">/></span></span><span class="token plain-text">  
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>  
    <span class="token punctuation">)</span>  
<span class="token punctuation">&#125;</span>  
  
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/20231005155147.png" alt="image.png"></p>
<h2 id="五、效果展示"><a href="#五、效果展示" class="headerlink" title="五、效果展示"></a>五、效果展示</h2><p><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/20231005155330.png" alt="image.png"></p>
<h1 id="使用AntD的路由"><a href="#使用AntD的路由" class="headerlink" title="使用AntD的路由"></a>使用AntD的路由</h1><h2 id="一、优化router文件"><a href="#一、优化router文件" class="headerlink" title="一、优化router文件"></a>一、优化router文件</h2><p>采用定义的方式</p>
<pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">"../views/Home"</span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> PersonalInformation <span class="token keyword">from</span> <span class="token string">"../views/PersonalInformation"</span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>  
  
<span class="token keyword">export</span> <span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>  
    <span class="token punctuation">&#123;</span>  
        path<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>  
        children<span class="token operator">:</span> <span class="token punctuation">[</span>  
            <span class="token punctuation">&#123;</span>  
                path<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>  
                element<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Home</span></span><span class="token punctuation">/></span></span><span class="token punctuation">,</span>  
            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  
            <span class="token punctuation">&#123;</span>  
                path<span class="token operator">:</span> <span class="token string">'mail'</span><span class="token punctuation">,</span>  
                element<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PersonalInformation</span></span><span class="token punctuation">/></span></span><span class="token punctuation">,</span>  
            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  
        <span class="token punctuation">]</span>  
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  
<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="二、定义AntD的路由"><a href="#二、定义AntD的路由" class="headerlink" title="二、定义AntD的路由"></a>二、定义AntD的路由</h2><p>直接将官网的路由代码复制出来<br><span class="exturl" data-url="aHR0cHM6Ly9hbnQuZGVzaWduL2NvbXBvbmVudHMvbWVudS1jbg==">https://ant.design/components/menu-cn<i class="fa fa-external-link-alt"></i></span></p>
<p>我这里抽成了一个组件<br><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/20231005214439.png" alt="image.png"></p>
<p>修改key，key就是路径，和路由的path一致</p>
<pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token punctuation">&#123;</span>  
    label<span class="token operator">:</span> <span class="token string">'Navigation One'</span><span class="token punctuation">,</span>  
    key<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>  
    icon<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MailOutlined</span></span><span class="token punctuation">/></span></span><span class="token punctuation">,</span>  
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  
<span class="token punctuation">&#123;</span>  
    label<span class="token operator">:</span> <span class="token string">'Navigation Two'</span><span class="token punctuation">,</span>  
    key<span class="token operator">:</span> <span class="token string">'/mail'</span><span class="token punctuation">,</span>  
    icon<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AppstoreOutlined</span></span><span class="token punctuation">/></span></span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>修改方法onClick，当点击路由时，进行路由切换</p>
<pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token keyword">const</span> NavComponent<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">const</span> <span class="token punctuation">[</span>current<span class="token punctuation">,</span> setCurrent<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">'mail'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">const</span> navigate <span class="token operator">=</span> <span class="token function">useNavigate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token keyword">const</span> onClick<span class="token operator">:</span> MenuProps<span class="token punctuation">[</span><span class="token string">'onClick'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'click '</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token function">navigate</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>key<span class="token punctuation">)</span>  
        <span class="token function">setCurrent</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  
  
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Menu</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>onClick<span class="token punctuation">&#125;</span></span> <span class="token attr-name">selectedKeys</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span>current<span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span> <span class="token attr-name">items</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>items<span class="token punctuation">&#125;</span></span><span class="token punctuation">/></span></span><span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>调整后的代码</p>
<pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>useState<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span>AppstoreOutlined<span class="token punctuation">,</span> MailOutlined<span class="token punctuation">,</span> SettingOutlined<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">&#123;</span>MenuProps<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span>Menu<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span>useNavigate<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react-router-dom"</span><span class="token punctuation">;</span>  
  
<span class="token comment">// 进入router去定义与key相同的路由  </span>
<span class="token keyword">const</span> items<span class="token operator">:</span> MenuProps<span class="token punctuation">[</span><span class="token string">'items'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>  
    <span class="token punctuation">&#123;</span>  
        label<span class="token operator">:</span> <span class="token string">'Navigation One'</span><span class="token punctuation">,</span>  
        key<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>  
        icon<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MailOutlined</span></span><span class="token punctuation">/></span></span><span class="token punctuation">,</span>  
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  
    <span class="token punctuation">&#123;</span>  
        label<span class="token operator">:</span> <span class="token string">'Navigation Two'</span><span class="token punctuation">,</span>  
        key<span class="token operator">:</span> <span class="token string">'/mail'</span><span class="token punctuation">,</span>  
        icon<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AppstoreOutlined</span></span><span class="token punctuation">/></span></span><span class="token punctuation">,</span>  
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  
    <span class="token punctuation">&#123;</span>  
        label<span class="token operator">:</span> <span class="token string">'Navigation Three - Submenu'</span><span class="token punctuation">,</span>  
        key<span class="token operator">:</span> <span class="token string">'SubMenu'</span><span class="token punctuation">,</span>  
        icon<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SettingOutlined</span></span><span class="token punctuation">/></span></span><span class="token punctuation">,</span>  
        children<span class="token operator">:</span> <span class="token punctuation">[</span>  
            <span class="token punctuation">&#123;</span>  
                type<span class="token operator">:</span> <span class="token string">'group'</span><span class="token punctuation">,</span>  
                label<span class="token operator">:</span> <span class="token string">'Item 1'</span><span class="token punctuation">,</span>  
                children<span class="token operator">:</span> <span class="token punctuation">[</span>  
                    <span class="token punctuation">&#123;</span>  
                        label<span class="token operator">:</span> <span class="token string">'Option 1'</span><span class="token punctuation">,</span>  
                        key<span class="token operator">:</span> <span class="token string">'setting:1'</span><span class="token punctuation">,</span>  
                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  
                    <span class="token punctuation">&#123;</span>  
                        label<span class="token operator">:</span> <span class="token string">'Option 2'</span><span class="token punctuation">,</span>  
                        key<span class="token operator">:</span> <span class="token string">'setting:2'</span><span class="token punctuation">,</span>  
                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  
                <span class="token punctuation">]</span><span class="token punctuation">,</span>  
            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  
            <span class="token punctuation">&#123;</span>  
                type<span class="token operator">:</span> <span class="token string">'group'</span><span class="token punctuation">,</span>  
                label<span class="token operator">:</span> <span class="token string">'Item 2'</span><span class="token punctuation">,</span>  
                children<span class="token operator">:</span> <span class="token punctuation">[</span>  
                    <span class="token punctuation">&#123;</span>  
                        label<span class="token operator">:</span> <span class="token string">'Option 3'</span><span class="token punctuation">,</span>  
                        key<span class="token operator">:</span> <span class="token string">'setting:3'</span><span class="token punctuation">,</span>  
                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  
                    <span class="token punctuation">&#123;</span>  
                        label<span class="token operator">:</span> <span class="token string">'Option 4'</span><span class="token punctuation">,</span>  
                        key<span class="token operator">:</span> <span class="token string">'setting:4'</span><span class="token punctuation">,</span>  
                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  
                <span class="token punctuation">]</span><span class="token punctuation">,</span>  
            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  
        <span class="token punctuation">]</span><span class="token punctuation">,</span>  
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  
    <span class="token punctuation">&#123;</span>  
        label<span class="token operator">:</span> <span class="token punctuation">(</span>  
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://ant.design<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener noreferrer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">  
                Navigation Four - Link  
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  
        <span class="token punctuation">)</span><span class="token punctuation">,</span>  
        key<span class="token operator">:</span> <span class="token string">'alipay'</span><span class="token punctuation">,</span>  
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  
<span class="token punctuation">]</span><span class="token punctuation">;</span>  
  
<span class="token keyword">const</span> NavComponent<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">const</span> <span class="token punctuation">[</span>current<span class="token punctuation">,</span> setCurrent<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">'mail'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">const</span> navigate <span class="token operator">=</span> <span class="token function">useNavigate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token keyword">const</span> onClick<span class="token operator">:</span> MenuProps<span class="token punctuation">[</span><span class="token string">'onClick'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'click '</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token function">navigate</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>key<span class="token punctuation">)</span>  
        <span class="token function">setCurrent</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  
  
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Menu</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>onClick<span class="token punctuation">&#125;</span></span> <span class="token attr-name">selectedKeys</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span>current<span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span> <span class="token attr-name">items</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span>items<span class="token punctuation">&#125;</span></span><span class="token punctuation">/></span></span><span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  
  
<span class="token keyword">export</span> <span class="token keyword">default</span> NavComponent<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="三、修改App-tsx"><a href="#三、修改App-tsx" class="headerlink" title="三、修改App.tsx"></a>三、修改App.tsx</h2><p>引入AntD导航组件<br>引入路由</p>
<pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>useState<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react'</span>  
<span class="token keyword">import</span> <span class="token string">'./App.css'</span>  
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span>Route<span class="token punctuation">,</span> Router<span class="token punctuation">,</span> Routes<span class="token punctuation">,</span> useRoutes<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react-router-dom"</span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> NavComponent <span class="token keyword">from</span> <span class="token string">"./components/NavComponent"</span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span>routes<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"./router/index"</span><span class="token punctuation">;</span>  
  
<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token function">useRoutes</span><span class="token punctuation">(</span>routes<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">return</span> <span class="token punctuation">(</span>  
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span><span class="token plain-text">  
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NavComponent</span></span><span class="token punctuation">/></span></span><span class="token plain-text">            </span><span class="token punctuation">&#123;</span>element<span class="token punctuation">&#125;</span><span class="token plain-text">  
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>  
    <span class="token punctuation">)</span>  
<span class="token punctuation">&#125;</span>  
  
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="四、效果展示"><a href="#四、效果展示" class="headerlink" title="四、效果展示"></a>四、效果展示</h2><p><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/20231005214733.png" alt="image.png"><br><img src="https://yjl-img.oss-cn-beijing.aliyuncs.com/_post/20231005214739.png" alt="image.png"></p>
]]></content>
      <categories>
        <category>开发</category>
        <category>前端</category>
      </categories>
      <tags>
        <tag>React</tag>
        <tag>TypeScript</tag>
        <tag>Vite</tag>
      </tags>
  </entry>
  <entry>
    <title>React使用JsPlumb</title>
    <url>/3005ef78/</url>
    <content><![CDATA[<h1 id="搭建React工程"><a href="#搭建React工程" class="headerlink" title="搭建React工程"></a>搭建React工程</h1><h1 id="安装JsPlumb"><a href="#安装JsPlumb" class="headerlink" title="安装JsPlumb"></a>安装JsPlumb</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i JsPlumb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="初步案例"><a href="#初步案例" class="headerlink" title="初步案例"></a>初步案例</h1><p>将以下代码拷贝到自己工程中，并引用组件</p>
<pre class="line-numbers language-tsx" data-language="tsx"><code class="language-tsx"><span class="token keyword">import</span> jsPlumb <span class="token keyword">from</span> <span class="token string">"jsplumb"</span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span>useEffect<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>  
  
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">JDemo01</span><span class="token punctuation">(</span>props<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">let</span> timer<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>  
    <span class="token keyword">const</span> instance <span class="token operator">=</span> jsPlumb<span class="token punctuation">.</span>jsPlumb<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建一个jsplumb对象  </span>
    <span class="token keyword">const</span> <span class="token function-variable function">resize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  
        instance<span class="token punctuation">.</span><span class="token function">repaintEverything</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  
    <span class="token keyword">const</span> <span class="token function-variable function">clear</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">if</span> <span class="token punctuation">(</span>timer<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
            <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">&#125;</span>  
        instance<span class="token punctuation">.</span><span class="token function">deleteEveryConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  
  
    <span class="token keyword">const</span> <span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token number">0.01</span><span class="token punctuation">;</span>  
        timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  
            m <span class="token operator">+=</span> <span class="token number">0.002</span><span class="token punctuation">;</span>  
            <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">></span> <span class="token number">0.98</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
                m <span class="token operator">=</span> <span class="token number">0.012</span><span class="token punctuation">;</span>  
            <span class="token punctuation">&#125;</span>  
            instance<span class="token punctuation">.</span><span class="token function">deleteEveryConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
            <span class="token comment">//连接图一和图二  </span>
            instance<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  
                source<span class="token operator">:</span> <span class="token string">"flowChart1"</span><span class="token punctuation">,</span><span class="token comment">//图一的id  </span>
                target<span class="token operator">:</span> <span class="token string">"flowChart2"</span><span class="token punctuation">,</span><span class="token comment">//图二的id  </span>
                endpoint<span class="token operator">:</span> <span class="token string">"Blank"</span><span class="token punctuation">,</span> <span class="token comment">//端点的形状设置为空  </span>
                connector<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"Flowchart"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>cornerRadius<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  
                anchor<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"Right"</span><span class="token punctuation">,</span> <span class="token string">"Left"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">//连接端点的位置，起始节点的右侧和结束节点的左侧  </span>
                overlays<span class="token operator">:</span> <span class="token punctuation">[</span>  
                    <span class="token punctuation">[</span><span class="token string">"Arrow"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>width<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> length<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> location<span class="token operator">:</span> m<span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">//小箭头样式及位置  </span>
                <span class="token punctuation">]</span><span class="token punctuation">,</span>  
            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token comment">//连接图二和图三  </span>
            instance<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  
                source<span class="token operator">:</span> <span class="token string">"flowChart2"</span><span class="token punctuation">,</span>  
                target<span class="token operator">:</span> <span class="token string">"flowChart3"</span><span class="token punctuation">,</span>  
                endpoint<span class="token operator">:</span> <span class="token string">"Blank"</span><span class="token punctuation">,</span>  
                connector<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"Flowchart"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>cornerRadius<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  
                anchor<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"Right"</span><span class="token punctuation">,</span> <span class="token string">"Left"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  
                overlays<span class="token operator">:</span> <span class="token punctuation">[</span>  
                    <span class="token punctuation">[</span><span class="token string">"Arrow"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>width<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> length<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> location<span class="token operator">:</span> m<span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  
                <span class="token punctuation">]</span><span class="token punctuation">,</span>  
            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token comment">//连接图四和图三  </span>
            instance<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  
                source<span class="token operator">:</span> <span class="token string">"flowChart4"</span><span class="token punctuation">,</span>  
                target<span class="token operator">:</span> <span class="token string">"flowChart3"</span><span class="token punctuation">,</span>  
                endpoint<span class="token operator">:</span> <span class="token string">"Blank"</span><span class="token punctuation">,</span>  
                connector<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"Flowchart"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>cornerRadius<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  
                anchor<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"Right"</span><span class="token punctuation">,</span> <span class="token string">"Left"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  
                overlays<span class="token operator">:</span> <span class="token punctuation">[</span>  
                    <span class="token punctuation">[</span><span class="token string">"Arrow"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>width<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> length<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> location<span class="token operator">:</span> m<span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  
                <span class="token punctuation">]</span><span class="token punctuation">,</span>  
            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token comment">//连接图四和图二  </span>
            instance<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  
                source<span class="token operator">:</span> <span class="token string">"flowChart4"</span><span class="token punctuation">,</span>  
                target<span class="token operator">:</span> <span class="token string">"flowChart2"</span><span class="token punctuation">,</span>  
                endpoint<span class="token operator">:</span> <span class="token string">"Blank"</span><span class="token punctuation">,</span>  
                connector<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"Flowchart"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>cornerRadius<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  
                anchor<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"Bottom"</span><span class="token punctuation">,</span> <span class="token string">"Bottom"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  
                overlays<span class="token operator">:</span> <span class="token punctuation">[</span>  
                    <span class="token punctuation">[</span><span class="token string">"Arrow"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>width<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> length<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> location<span class="token operator">:</span> m<span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  
                <span class="token punctuation">]</span><span class="token punctuation">,</span>  
            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  
    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  
        <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"resize"</span><span class="token punctuation">,</span> resize<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  
            <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            window<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"resize"</span><span class="token punctuation">,</span> resize<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token keyword">return</span> <span class="token punctuation">(</span>  
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>width<span class="token operator">:</span> <span class="token string">'100%'</span><span class="token punctuation">,</span> display<span class="token operator">:</span> <span class="token string">"flex"</span><span class="token punctuation">,</span> justifyContent<span class="token operator">:</span> <span class="token string">"space-between"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span><span class="token plain-text">  
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span><span class="token string">'flowChart1'</span><span class="token punctuation">&#125;</span></span> <span class="token punctuation">></span></span><span class="token plain-text">1</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">  
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span><span class="token string">'flowChart2'</span><span class="token punctuation">&#125;</span></span> <span class="token punctuation">></span></span><span class="token plain-text">2</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">  
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span><span class="token string">'flowChart3'</span><span class="token punctuation">&#125;</span></span> <span class="token punctuation">></span></span><span class="token plain-text">3</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">  
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">&#123;</span><span class="token string">'flowChart4'</span><span class="token punctuation">&#125;</span></span> <span class="token punctuation">></span></span><span class="token plain-text">4</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">  
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="逐步探究"><a href="#逐步探究" class="headerlink" title="逐步探究"></a>逐步探究</h1><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dhbmdkdWFuZHVhbi9qc3BsdW1iLWNoaW5lc2UtdHV0b3JpYWw=">https://github.com/wangduanduan/jsplumb-chinese-tutorial<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>开发</category>
      </categories>
      <tags>
        <tag>React</tag>
        <tag>JsPlumb</tag>
        <tag>连线</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义tag教程01</title>
    <url>/ecd237d9/</url>
    <content><![CDATA[<blockquote>
<p>将在md中自定义tag<br>参考文献：<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2FwaS90YWc=">https://hexo.io/zh-cn/api/tag<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="在next主题中加入自定义tag相关js"><a href="#在next主题中加入自定义tag相关js" class="headerlink" title="在next主题中加入自定义tag相关js"></a>在next主题中加入自定义tag相关js</h2><p>进入themes&#x2F;next&#x2F;scripts&#x2F;tags<br>创建htmlTag.js</p>
<h2 id="编辑htmlTag-js"><a href="#编辑htmlTag-js" class="headerlink" title="编辑htmlTag.js"></a>编辑htmlTag.js</h2><p>关键代码</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 在hexo中注册一个tag 叫 html7 执行方法是parseHtml 包含结束标识</span>
hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>tag<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'html7'</span><span class="token punctuation">,</span> parseHtml<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">ends</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>核心functiong编写</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// args tag后面的参数 </span>
<span class="token comment">// 列：&#123;% html7 js=xxx.js;x.js css=xxx.css;x.css %&#125;</span>
<span class="token comment">// content tag中包含的文本信息</span>
<span class="token keyword">function</span> <span class="token function">parseHtml</span><span class="token punctuation">(</span><span class="token parameter">args<span class="token punctuation">,</span> content</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
  <span class="token keyword">let</span> html <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>content<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>  
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> args<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">const</span> arg <span class="token operator">=</span> args<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  
    <span class="token keyword">const</span> value <span class="token operator">=</span> arg<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  
      <span class="token keyword">if</span> <span class="token punctuation">(</span> value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'js'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">const</span> jsList <span class="token operator">=</span> value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">";"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=></span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> jsList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
          html<span class="token operator">=</span>html<span class="token operator">+</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;script src="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>hexo<span class="token punctuation">.</span>config<span class="token punctuation">.</span>root<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>jsList<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">">&lt;/script></span><span class="token template-punctuation string">`</span></span>  
        <span class="token punctuation">&#125;</span>  
      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'css'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">const</span> cssList <span class="token operator">=</span> value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">";"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=></span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> cssList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
          html<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;link rel="stylesheet" href="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>hexo<span class="token punctuation">.</span>config<span class="token punctuation">.</span>root<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>cssList<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">"/></span><span class="token template-punctuation string">`</span></span><span class="token operator">+</span>html  
        <span class="token punctuation">&#125;</span>  
      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> html<span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>完整代码</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token string">'use strict'</span><span class="token punctuation">;</span>  
<span class="token keyword">function</span> <span class="token function">parseHtml</span><span class="token punctuation">(</span><span class="token parameter">args<span class="token punctuation">,</span> content</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
  <span class="token keyword">let</span> html <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>content<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>  
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> args<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
    <span class="token keyword">const</span> arg <span class="token operator">=</span> args<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  
    <span class="token keyword">const</span> value <span class="token operator">=</span> arg<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  
      <span class="token keyword">if</span> <span class="token punctuation">(</span> value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'js'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">const</span> jsList <span class="token operator">=</span> value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">";"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=></span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> jsList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
          html<span class="token operator">=</span>html<span class="token operator">+</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;script src="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>hexo<span class="token punctuation">.</span>config<span class="token punctuation">.</span>root<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>jsList<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">">&lt;/script></span><span class="token template-punctuation string">`</span></span>  
        <span class="token punctuation">&#125;</span>  
      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'css'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
        <span class="token keyword">const</span> cssList <span class="token operator">=</span> value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">";"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=></span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> cssList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  
          html<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;link rel="stylesheet" href="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>hexo<span class="token punctuation">.</span>config<span class="token punctuation">.</span>root<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>cssList<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">"/></span><span class="token template-punctuation string">`</span></span><span class="token operator">+</span>html  
        <span class="token punctuation">&#125;</span>  
      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> html<span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span>  
  
hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>tag<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'html7'</span><span class="token punctuation">,</span> parseHtml<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">ends</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>这里用一个悬浮文字来演示</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token hr punctuation">---</span>  
title:   
date: 2023-09-23 09:38:38  
<span class="token title important">type: about  
<span class="token punctuation">---</span></span>  
  
&#123;% html7 js=/js/fontFloatMain/dataJson.js;/js/fontFloatMain/index-d2590129.js css=/css/fontFloatMain/index-6ed54a2c.css %&#125;  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  
<span class="token selector">.main-inner</span> <span class="token punctuation">&#123;</span>  
    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  
<span class="token punctuation">&#125;</span>  
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fontFloatMainApp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  
&#123;% endhtml7 %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>当然你可以在html7中使用任意的html（包含js、css）等文本，能够快速在页面总自定义样式不用写很多组件</p>
]]></content>
      <categories>
        <category>next主题修改</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>主题魔改</tag>
      </tags>
  </entry>
</search>
